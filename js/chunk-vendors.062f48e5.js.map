{"version":3,"sources":["webpack:///./node_modules/@vue/runtime-dom/node_modules/@vue/shared/dist/shared.esm-bundler.js","webpack:///./node_modules/@vue/reactivity/node_modules/@vue/shared/dist/shared.esm-bundler.js","webpack:///./node_modules/@vue/runtime-core/node_modules/@vue/shared/dist/shared.esm-bundler.js","webpack:///./node_modules/vue-router/dist/vue-router.esm-bundler.js","webpack:///./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js","webpack:///./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js","webpack:///./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/vue/node_modules/@vue/shared/dist/shared.esm-bundler.js"],"names":["makeMap","str","expectsLowerCase","map","Object","create","list","split","i","length","val","toLowerCase","specialBooleanAttrs","isSpecialBooleanAttr","HTML_TAGS","SVG_TAGS","isHTMLTag","isSVGTag","looseCompareArrays","a","b","equal","looseEqual","aValidType","isDate","bValidType","getTime","isArray","isObject","aKeysCount","keys","bKeysCount","key","aHasKey","hasOwnProperty","bHasKey","String","looseIndexOf","arr","findIndex","item","looseHas","set","EMPTY_OBJ","onRE","isOn","test","isModelListener","startsWith","extend","assign","prototype","Array","isSet","toTypeString","Date","isFunction","isString","objectToString","toString","value","call","cacheStringFunction","fn","cache","hit","camelizeRE","hyphenateRE","replace","_","c","toUpperCase","hyphenate","capitalize","charAt","slice","invokeArrayFns","fns","arg","toNumber","n","parseFloat","isNaN","NOOP","hasOwn","isMap","isSymbol","toRawType","isIntegerKey","parseInt","hasChanged","oldValue","def","obj","defineProperty","configurable","enumerable","GLOBALS_WHITE_LISTED","isGloballyWhitelisted","normalizeStyle","res","normalized","parseStringStyle","listDelimiterRE","propertyDelimiterRE","cssText","ret","forEach","tmp","trim","normalizeClass","name","toDisplayString","JSON","stringify","replacer","_key","size","entries","reduce","values","isPlainObject","EMPTY_ARR","NO","remove","el","indexOf","splice","isPromise","then","catch","isReservedProp","camelize","hasSymbol","Symbol","toStringTag","PolySymbol","matchedRouteKey","viewDepthKey","routerKey","routeLocationKey","isBrowser","window","isESModule","__esModule","applyToParams","params","newParams","noop","warn","msg","args","from","arguments","console","apply","concat","TRAILING_SLASH_RE","removeTrailingSlash","path","parseURL","parseQuery","location","currentLocation","query","searchString","hash","searchPos","hashPos","resolveRelativePath","fullPath","stringifyURL","stringifyQuery","stripBase","pathname","base","isSameRouteLocation","aLastIndex","matched","bLastIndex","isSameRouteRecord","isSameRouteLocationParams","aliasOf","isSameRouteLocationParamsValue","isEquivalentArray","every","to","fromSegments","toSegments","toPosition","segment","position","join","NavigationType","NavigationDirection","normalizeBase","baseEl","document","querySelector","getAttribute","BEFORE_HASH_RE","createHref","getElementPosition","offset","docRect","documentElement","getBoundingClientRect","elRect","behavior","left","top","computeScrollPosition","pageXOffset","pageYOffset","scrollToPosition","scrollToOptions","positionEl","isIdSelector","getElementById","style","scrollTo","getScrollKey","delta","history","state","scrollPositions","Map","saveScrollPosition","scrollPosition","getSavedScrollPosition","scroll","get","delete","createBaseLocation","protocol","host","createCurrentLocation","search","pathFromHash","useHistoryListeners","historyState","listeners","teardowns","pauseState","popStateHandler","fromState","listener","type","pop","direction","forward","back","unknown","pauseListeners","listen","callback","push","teardown","index","beforeUnloadListener","replaceState","destroy","removeEventListener","addEventListener","buildState","current","replaced","computeScroll","useHistoryStateNavigation","changeLocation","url","err","data","currentState","createWebHistory","historyNavigation","historyListeners","go","triggerListeners","routerHistory","bind","createWebHashHistory","isRouteLocation","route","isRouteName","START_LOCATION_NORMALIZED","undefined","meta","redirectedFrom","NavigationFailureSymbol","NavigationFailureType","createRouterError","Error","isNavigationFailure","error","BASE_PARAM_PATTERN","BASE_PATH_PARSER_OPTIONS","sensitive","strict","start","end","REGEX_CHARS_RE","tokensToParser","segments","extraOptions","options","score","pattern","segmentScores","tokenIndex","token","subSegmentScore","repeatable","optional","regexp","re","RegExp","message","subPattern","parse","match","avoidDuplicatedSlash","endsWith","param","text","compareScoreArray","diff","comparePathParserScore","aScore","bScore","comp","ROOT_TOKEN","VALID_PARAM_RE","tokenizePath","crash","buffer","previousState","tokens","finalizeSegment","char","customRe","consumeBuffer","addCharToBuffer","createRouteRecordMatcher","record","parent","parser","matcher","children","alias","createRouterMatcher","routes","globalOptions","matchers","matcherMap","getRecordMatcher","addRoute","originalRecord","isRootAdd","mainNormalizedRecord","normalizeRouteRecord","mergeOptions","normalizedRecords","aliases","components","originalMatcher","normalizedRecord","parentPath","connectingSlash","isAliasRecord","removeRoute","insertMatcher","matcherRef","getRoutes","resolve","paramsFromLocation","filter","k","find","m","parentMatcher","unshift","mergeMetaFields","redirect","beforeEnter","props","normalizeRecordProps","instances","leaveGuards","updateGuards","enterCallbacks","default","component","propsObject","defaults","partialOptions","HASH_RE","AMPERSAND_RE","SLASH_RE","EQUAL_RE","IM_RE","ENC_BRACKET_OPEN_RE","ENC_BRACKET_CLOSE_RE","ENC_CARET_RE","ENC_BACKTICK_RE","ENC_CURLY_OPEN_RE","ENC_PIPE_RE","ENC_CURLY_CLOSE_RE","commonEncode","encodeURI","encodeHash","encodeQueryProperty","encodePath","encodeParam","decode","decodeURIComponent","hasLeadingIM","searchParams","rawValue","currentValue","v","normalizeQuery","normalizedQuery","useCallbacks","handlers","add","handler","reset","guardToPromiseFn","guard","enterCallbackArray","Promise","reject","next","valid","guardReturn","guardCall","extractComponentsGuards","guardType","guards","rawComponent","isRouteComponent","__vccOpts","componentPromise","resolved","resolvedComponent","useLink","router","currentRoute","activeRecordIndex","routeMatched","currentMatched","parentRecordPath","getOriginalPath","isActive","includesParams","isExactActive","navigate","e","guardEvent","href","RouterLinkImpl","required","activeClass","exactActiveClass","custom","Boolean","ariaCurrentValue","slots","attrs","link","elClass","getLinkClass","linkActiveClass","linkExactActiveClass","onClick","class","RouterLink","metaKey","altKey","ctrlKey","shiftKey","defaultPrevented","button","currentTarget","target","preventDefault","outer","inner","innerValue","outerValue","some","propClass","globalClass","defaultClass","RouterViewImpl","injectedRoute","depth","matchedRouteRef","viewRef","instance","oldInstance","oldName","flush","matchedRoute","ViewComponent","currentName","Component","routePropsOption","routeProps","onVnodeUnmounted","vnode","isUnmounted","ref","RouterView","createRouter","parseQuery$1","stringifyQuery$1","scrollBehavior","beforeGuards","beforeResolveGuards","afterGuards","pendingLocation","scrollRestoration","normalizeParams","paramValue","encodeParams","decodeParams","parentOrRoute","recordMatcher","routeMatcher","hasRoute","rawLocation","locationNormalized","matcherLocation","locationAsObject","checkCanceledNavigation","pushWithRedirect","targetLocation","force","lastMatched","newTargetLocation","toLocation","failure","handleScroll","triggerError","finalizeNavigation","triggerAfterEach","checkCanceledNavigationAndReject","leavingRecords","updatingRecords","enteringRecords","extractChangingRecords","reverse","canceledNavigationCheck","runGuardQueue","isPush","isFirstNavigation","markAsReady","removeHistoryListener","setupListeners","_from","info","ready","readyHandlers","errorHandlers","isReady","started","installedApps","Set","beforeEach","beforeResolve","afterEach","onError","app","this","config","globalProperties","$router","reactiveRoute","provide","unmountApp","unmount","promise","len","Math","max","recordFrom","recordTo","targetMap","WeakMap","effectStack","activeEffect","ITERATE_KEY","MAP_KEY_ITERATE_KEY","isEffect","_isEffect","raw","effect","createReactiveEffect","lazy","stop","active","onStop","uid","scheduler","includes","enableTracking","resetTracking","id","deps","shouldTrack","trackStack","pauseTracking","last","track","depsMap","dep","has","trigger","newValue","oldTarget","effects","effectsToAdd","allowRecurse","run","builtInSymbols","getOwnPropertyNames","createGetter","shallowGet","readonlyGet","shallowReadonlyGet","arrayInstrumentations","isReadonly","shallow","receiver","readonlyMap","reactiveMap","targetIsArray","Reflect","keyIsSymbol","isRef","shouldUnwrap","readonly","reactive","method","toRaw","l","createSetter","shallowSet","hadKey","Number","result","deleteProperty","ownKeys","mutableHandlers","readonlyHandlers","shallowReactiveHandlers","toReactive","toReadonly","toShallow","getProto","getPrototypeOf","get$1","isShallow","rawTarget","rawKey","wrap","has$1","proto","set$1","deleteEntry","clear","hadItems","createForEach","thisArg","observed","createIterableMethod","targetIsMap","isPair","iterator","isKeyOnly","innerIterator","done","createReadonlyMethod","mutableInstrumentations","shallowInstrumentations","readonlyInstrumentations","iteratorMethods","createInstrumentationGetter","instrumentations","mutableCollectionHandlers","shallowCollectionHandlers","readonlyCollectionHandlers","targetTypeMap","rawType","getTargetType","isExtensible","createReactiveObject","shallowReactive","baseHandlers","collectionHandlers","proxyMap","existingProxy","targetType","proxy","Proxy","isReactive","isProxy","convert","r","__v_isRef","createRef","shallowRef","_rawValue","_shallow","_value","newVal","unref","shallowUnwrapHandlers","proxyRefs","objectWithRefs","ComputedRefImpl","getter","_setter","_dirty","computed","getterOrOptions","setter","stack","appWarnHandler","appContext","warnHandler","trace","getComponentTrace","callWithErrorHandling","formatComponentName","warnArgs","formatTrace","currentVNode","normalizedStack","recurseCount","parentInstance","logs","entry","formatTraceEntry","postfix","isRoot","open","close","formatProps","formatProp","handleError","callWithAsyncErrorHandling","throwInDev","contextVNode","cur","exposedInstance","errorInfo","errorCapturedHooks","ec","appErrorHandler","errorHandler","logError","isFlushing","isFlushPending","queue","flushIndex","pendingPreFlushCbs","activePreFlushCbs","preFlushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","currentFlushPromise","currentPreFlushParentJob","nextTick","p","queueJob","job","queueFlush","flushJobs","invalidateJob","queueCb","cb","activeQueue","pendingQueue","queuePreFlushCb","queuePostFlushCb","flushPreFlushCbs","seen","parentJob","flushPostFlushCbs","deduped","sort","getId","Infinity","event","handlerName","emitted","normalizeEmitsOptions","asMixin","appId","_uid","__emits","cached","emits","hasExtends","extendEmits","mixins","extends","isEmitListener","currentRenderingInstance","setCurrentRenderingInstance","renderComponentRoot","withProxy","propsOptions","emit","render","renderCache","setupState","ctx","fallthroughAttrs","shapeFlag","proxyToUse","normalizeVNode","getFunctionalFallthrough","root","inheritAttrs","filterModelListeners","cloneVNode","dirs","transition","createVNode","Comment","filterSingleRoot","filtered","child","isVNode","shouldUpdateComponent","prevVNode","nextVNode","optimized","prevProps","prevChildren","nextProps","nextChildren","patchFlag","emitsOptions","$stable","hasPropsChanged","dynamicProps","nextKeys","updateHOCHostEl","subTree","isSuspense","__isSuspense","normalizeSuspenseChildren","content","fallback","normalizeSuspenseSlot","s","singleChild","queueEffectWithSuspense","suspense","pendingBranch","isRenderingCompiledSlot","setCompiledSlotRendering","withCtx","renderFnWithContext","openBlock","owner","closeBlock","_c","currentScopeId","scopeIdStack","pushScopeId","popScopeId","withScopeId","isTeleport","__isTeleport","COMPONENTS","resolveComponent","resolveAsset","NULL_DYNAMIC_COMPONENT","warnMissing","currentInstance","selfName","displayName","registry","Fragment","Text","Static","blockStack","currentBlock","disableTracking","createBlock","dynamicChildren","__v_isVNode","isSameVNodeType","n1","n2","InternalObjectKey","normalizeKey","normalizeRef","_createVNode","isBlockNode","cloned","normalizeChildren","isClassComponent","klass","scopeId","ssContent","ssFallback","anchor","targetAnchor","staticCount","extraProps","mergeRef","mergedProps","mergeProps","createTextVNode","flag","cloneIfMounted","slot","slotFlag","_ctx","toMerge","existing","incoming","initProps","rawProps","isStateful","isSSR","setFullProps","updateProps","rawPrevProps","rawCurrentProps","kebabKey","resolvePropValue","propsToUpdate","camelizedKey","needCastKeys","camelKey","opt","hasDefault","defaultValue","Function","setCurrentInstance","normalizePropsOptions","__props","extendProps","normalizedKey","validatePropName","prop","booleanIndex","getTypeIndex","stringIndex","getType","ctor","isSameType","expectedTypes","injectHook","hook","prepend","hooks","wrappedHook","__weh","createHook","lifecycle","isInSSRComponentSetup","onBeforeMount","onMounted","onBeforeUpdate","onUpdated","onBeforeUnmount","onUnmounted","onRenderTriggered","onRenderTracked","onErrorCaptured","useTransitionState","isMounted","isLeaving","isUnmounting","leavingVNodes","TransitionHookValidator","BaseTransitionImpl","mode","appear","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","getCurrentInstance","prevTransitionKey","getTransitionRawChildren","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","setTransitionHooks","oldChild","oldInnerChild","transitionKeyChanged","getTransitionKey","leavingHooks","afterLeave","update","delayLeave","earlyRemove","delayedLeave","leavingVNodesCache","getLeavingNodesForType","_leaveCb","BaseTransition","callHook","leavingVNode","afterHook","cancelHook","called","_enterCb","cancelled","isKeepAlive","clone","keepComment","keyedFragmentCount","__isKeepAlive","getName","matches","onActivated","registerKeepAliveHook","onDeactivated","__wdc","isDeactivated","injectToKeepAliveRoot","keepAliveRoot","injected","resetShapeFlag","getInnerChild","isInternalKey","normalizeSlotValue","normalizeSlot","rawSlot","normalizeObjectSlots","rawSlots","normalizeVNodeSlots","initSlots","updateSlots","needDeletionCheck","deletionComparisonTarget","invokeDirectiveHook","bindings","oldBindings","binding","dir","createAppContext","isNativeTag","performance","optionMergeStrategies","isCustomElement","directives","provides","createAppAPI","hydrate","rootComponent","rootProps","context","installedPlugins","_component","_props","_container","_context","version","plugin","install","mixin","directive","rootContainer","isHydrate","__vue_app__","initFeatureFlags","prodEffectOptions","queuePostRenderEffect","setRef","rawRef","oldRawRef","parentComponent","parentSuspense","oldRef","refs","doSet","createRenderer","baseCreateRenderer","createHydrationFns","insert","hostInsert","hostRemove","patchProp","hostPatchProp","forcePatchProp","hostForcePatchProp","createElement","hostCreateElement","createText","hostCreateText","createComment","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","parentNode","hostParentNode","nextSibling","hostNextSibling","setScopeId","hostSetScopeId","cloneNode","hostCloneNode","insertStaticContent","hostInsertStaticContent","patch","container","isSVG","getNextHostNode","processText","processCommentNode","mountStaticNode","processFragment","processElement","processComponent","process","internals","mountElement","patchElement","vnodeHook","is","mountChildren","unmountChildren","onVnodeBeforeMount","invokeVNodeHook","needCallTransitionHooks","onVnodeMounted","enter","treeOwnerId","__scopeId","oldProps","newProps","onVnodeBeforeUpdate","patchProps","prev","areChildrenSVG","patchBlockChildren","patchChildren","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","traverseStaticChildren","activate","mountComponent","updateComponent","initialVNode","createComponentInstance","renderer","setupComponent","asyncDep","registerDep","setupRenderEffect","placeholder","asyncResolved","updateComponentPreRender","bu","u","originNext","nextTree","prevTree","bm","hydrateNode","c1","prevShapeFlag","c2","patchKeyedChildren","patchUnkeyedChildren","oldLength","newLength","commonLength","min","nextChild","parentAnchor","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","j","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","getSequence","nextIndex","move","moveType","needTransition","leave","performLeave","doRemove","deactivate","shouldInvokeDirs","onVnodeBeforeUnmount","unmountComponent","removeFragment","performRemove","bum","um","suspenseId","pendingId","ch1","ch2","_vnode","mt","mc","pc","pbc","o","createApp","arrI","INITIAL_WATCHER_VALUE","watch","source","doWatch","immediate","deep","onTrack","onTrigger","isRefSource","traverse","cleanup","onInvalidate","baseGetter","runner","recordInstanceBoundEffect","instanceWatch","publicThis","parentProvides","inject","treatDefaultAsFactory","isInBeforeCreate","applyOptions","deferredData","deferredWatch","extendsOptions","dataOptions","computedOptions","methods","watchOptions","provideOptions","injectOptions","beforeMount","mounted","beforeUpdate","updated","activated","deactivated","beforeDestroy","beforeUnmount","destroyed","unmounted","renderTracked","renderTriggered","errorCaptured","globalMixins","callSyncHook","applyMixins","methodHandler","dataFn","resolveData","createWatcher","callHookFromMixins","callHookFromExtends","selfHook","baseHook","chainedMixins","createPathGetter","resolveMergedOptions","__merged","strats","publicPropertiesMap","$","$el","$data","$props","$attrs","$slots","$refs","$parent","$root","$emit","$options","$forceUpdate","$nextTick","$watch","PublicInstanceProxyHandlers","accessCache","normalizedProps","publicGetter","cssModule","__cssModules","RuntimeCompiledPublicInstanceProxyHandlers","unscopables","emptyAppContext","uid$1","setupContext","bc","da","rtg","rtc","compile","setupResult","setupStatefulComponent","setup","createSetupContext","resolvedResult","handleSetupResult","finishComponentSetup","template","delimiters","_rc","classifyRE","classify","__file","inferFromRegistry","defineComponent","h","propsOrChildren","renderList","renderItem","toHandlers","svgNS","doc","tempContainer","tempSVGContainer","nodeOps","insertBefore","removeChild","tag","createElementNS","createTextNode","node","nodeValue","textContent","selector","setAttribute","temp","innerHTML","first","firstChild","patchClass","transitionClasses","_vtc","className","patchStyle","setStyle","removeAttribute","importantRE","setProperty","prefixed","autoPrefix","prefixes","prefixCache","rawName","xlinkNS","patchAttr","removeAttributeNS","setAttributeNS","isBoolean","patchDOMProp","tagName","_getNow","now","createEvent","timeStamp","cachedNow","getNow","patchEvent","prevValue","nextValue","invokers","_vei","existingInvoker","parseName","invoker","createInvoker","optionsModifierRE","initialValue","attached","patchStopImmediatePropagation","originalStop","stopImmediatePropagation","_stopped","nativeOnRE","shouldSetAsProp","_trueValue","_falseValue","TRANSITION","ANIMATION","Transition","resolveTransitionProps","DOMTransitionPropsValidators","css","duration","enterFromClass","enterActiveClass","enterToClass","appearFromClass","appearActiveClass","appearToClass","leaveFromClass","leaveActiveClass","leaveToClass","baseProps","durations","normalizeDuration","enterDuration","leaveDuration","finishEnter","isAppear","removeTransitionClass","finishLeave","makeEnterHook","nextFrame","addTransitionClass","setTimeout","whenTransitionEnds","NumberOf","cls","classList","requestAnimationFrame","expectedType","timeout","propCount","getTransitionInfo","endEvent","ended","onEnd","styles","getComputedStyle","getStyleProperties","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","d","toMs","rendererOptions","ensureRenderer","mount","containerOrSelector","normalizeContainer","g","module","exports","_globalThis","getGlobalThis","globalThis","self","global"],"mappings":"kHAAA,YAOA,SAASA,EAAQC,EAAKC,GAClB,MAAMC,EAAMC,OAAOC,OAAO,MACpBC,EAAOL,EAAIM,MAAM,KACvB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC7BL,EAAIG,EAAKE,KAAM,EAEnB,OAAON,EAAmBQ,KAASP,EAAIO,EAAIC,eAAiBD,KAASP,EAAIO,GAb7E,soBAwFA,MAAME,EAAsB,8EACtBC,EAAqCb,EAAQY,GAgInD,MAAME,EAAY,qlBAUZC,EAAW,qpBAWXC,EAA0BhB,EAAQc,GAClCG,EAAyBjB,EAAQe,GAgDvC,SAASG,EAAmBC,EAAGC,GAC3B,GAAID,EAAEV,SAAWW,EAAEX,OACf,OAAO,EACX,IAAIY,GAAQ,EACZ,IAAK,IAAIb,EAAI,EAAGa,GAASb,EAAIW,EAAEV,OAAQD,IACnCa,EAAQC,EAAWH,EAAEX,GAAIY,EAAEZ,IAE/B,OAAOa,EAEX,SAASC,EAAWH,EAAGC,GACnB,GAAID,IAAMC,EACN,OAAO,EACX,IAAIG,EAAaC,EAAOL,GACpBM,EAAaD,EAAOJ,GACxB,GAAIG,GAAcE,EACd,SAAOF,IAAcE,IAAaN,EAAEO,YAAcN,EAAEM,UAIxD,GAFAH,EAAaI,EAAQR,GACrBM,EAAaE,EAAQP,GACjBG,GAAcE,EACd,SAAOF,IAAcE,IAAaP,EAAmBC,EAAGC,GAI5D,GAFAG,EAAaK,EAAST,GACtBM,EAAaG,EAASR,GAClBG,GAAcE,EAAY,CAE1B,IAAKF,IAAeE,EAChB,OAAO,EAEX,MAAMI,EAAazB,OAAO0B,KAAKX,GAAGV,OAC5BsB,EAAa3B,OAAO0B,KAAKV,GAAGX,OAClC,GAAIoB,IAAeE,EACf,OAAO,EAEX,IAAK,MAAMC,KAAOb,EAAG,CACjB,MAAMc,EAAUd,EAAEe,eAAeF,GAC3BG,EAAUf,EAAEc,eAAeF,GACjC,GAAKC,IAAYE,IACXF,GAAWE,IACZb,EAAWH,EAAEa,GAAMZ,EAAEY,IACtB,OAAO,GAInB,OAAOI,OAAOjB,KAAOiB,OAAOhB,GAEhC,SAASiB,EAAaC,EAAK5B,GACvB,OAAO4B,EAAIC,UAAUC,GAAQlB,EAAWkB,EAAM9B,IAElD,SAAS+B,EAASC,EAAKhC,GACnB,IAAK,IAAI8B,KAAQE,EACb,GAAIpB,EAAWkB,EAAM9B,GACjB,OAAO,EAEf,OAAO,EAOX,MAsCMiC,EAEA,GAOAC,EAAO,YACPC,EAAQb,GAAQY,EAAKE,KAAKd,GAC1Be,EAAmBf,GAAQA,EAAIgB,WAAW,aAC1CC,EAAS7C,OAAO8C,OAShBvB,GAFiBvB,OAAO+C,UAAUjB,eAExBkB,MAAMzB,SAEhB0B,EAAS3C,GAA8B,iBAAtB4C,EAAa5C,GAC9Bc,EAAUd,GAAQA,aAAe6C,KACjCC,EAAc9C,GAAuB,oBAARA,EAC7B+C,EAAY/C,GAAuB,kBAARA,EAE3BkB,EAAYlB,GAAgB,OAARA,GAA+B,kBAARA,EAI3CgD,EAAiBtD,OAAO+C,UAAUQ,SAClCL,EAAgBM,GAAUF,EAAeG,KAAKD,GAa9CE,EAAuBC,IACzB,MAAMC,EAAQ5D,OAAOC,OAAO,MAC5B,OAASJ,IACL,MAAMgE,EAAMD,EAAM/D,GAClB,OAAOgE,IAAQD,EAAM/D,GAAO8D,EAAG9D,MAGjCiE,EAAa,SAObC,GAHWL,EAAqB7D,GAC3BA,EAAImE,QAAQF,EAAY,CAACG,EAAGC,IAAOA,EAAIA,EAAEC,cAAgB,KAEhD,cAIdC,EAAYV,EAAqB7D,GAC5BA,EAAImE,QAAQD,EAAa,OAAOxD,eAKrC8D,EAAaX,EAAqB7D,GAC7BA,EAAIyE,OAAO,GAAGH,cAAgBtE,EAAI0E,MAAM,IAI7CC,EAAiB,CAACC,EAAKC,KACzB,IAAK,IAAItE,EAAI,EAAGA,EAAIqE,EAAIpE,OAAQD,IAC5BqE,EAAIrE,GAAGsE,IAUTC,EAAYrE,IACd,MAAMsE,EAAIC,WAAWvE,GACrB,OAAOwE,MAAMF,GAAKtE,EAAMsE,K,2DC3d5B,scA4VA,MAsCMrC,EAEA,GAEAwC,EAAO,OAQPlC,EAAS7C,OAAO8C,OAOhBhB,EAAiB9B,OAAO+C,UAAUjB,eAClCkD,EAAS,CAAC1E,EAAKsB,IAAQE,EAAe2B,KAAKnD,EAAKsB,GAChDL,EAAUyB,MAAMzB,QAChB0D,EAAS3E,GAA8B,iBAAtB4C,EAAa5C,GAG9B8C,EAAc9C,GAAuB,oBAARA,EAC7B+C,EAAY/C,GAAuB,kBAARA,EAC3B4E,EAAY5E,GAAuB,kBAARA,EAC3BkB,EAAYlB,GAAgB,OAARA,GAA+B,kBAARA,EAI3CgD,EAAiBtD,OAAO+C,UAAUQ,SAClCL,EAAgBM,GAAUF,EAAeG,KAAKD,GAC9C2B,EAAa3B,GACRN,EAAaM,GAAOe,MAAM,GAAI,GAGnCa,EAAgBxD,GAAQyB,EAASzB,IAC3B,QAARA,GACW,MAAXA,EAAI,IACJ,GAAKyD,SAASzD,EAAK,MAAQA,EAKzB8B,EAAuBC,IACzB,MAAMC,EAAQ5D,OAAOC,OAAO,MAC5B,OAASJ,IACL,MAAMgE,EAAMD,EAAM/D,GAClB,OAAOgE,IAAQD,EAAM/D,GAAO8D,EAAG9D,MAGjCiE,EAAa,SAObC,GAHWL,EAAqB7D,GAC3BA,EAAImE,QAAQF,EAAY,CAACG,EAAGC,IAAOA,EAAIA,EAAEC,cAAgB,KAEhD,cAcdmB,GAVY5B,EAAqB7D,GAC5BA,EAAImE,QAAQD,EAAa,OAAOxD,eAKxBmD,EAAqB7D,GAC7BA,EAAIyE,OAAO,GAAGH,cAAgBtE,EAAI0E,MAAM,IAGhC,CAACf,EAAO+B,IAAa/B,IAAU+B,IAAa/B,IAAUA,GAAS+B,IAAaA,IAMzFC,EAAM,CAACC,EAAK7D,EAAK4B,KACnBxD,OAAO0F,eAAeD,EAAK7D,EAAK,CAC5B+D,cAAc,EACdC,YAAY,EACZpC,a,yDCtdR,YAOA,SAAS5D,EAAQC,EAAKC,GAClB,MAAMC,EAAMC,OAAOC,OAAO,MACpBC,EAAOL,EAAIM,MAAM,KACvB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC7BL,EAAIG,EAAKE,KAAM,EAEnB,OAAON,EAAmBQ,KAASP,EAAIO,EAAIC,eAAiBD,KAASP,EAAIO,GAb7E,4/BAsBA,MAgBMuF,EAAuB,4LAGvBC,EAAsClG,EAAQiG,GA4GpD,SAASE,EAAevC,GACpB,GAAIjC,EAAQiC,GAAQ,CAChB,MAAMwC,EAAM,GACZ,IAAK,IAAI5F,EAAI,EAAGA,EAAIoD,EAAMnD,OAAQD,IAAK,CACnC,MAAMgC,EAAOoB,EAAMpD,GACb6F,EAAaF,EAAe1C,EAASjB,GAAQ8D,EAAiB9D,GAAQA,GAC5E,GAAI6D,EACA,IAAK,MAAMrE,KAAOqE,EACdD,EAAIpE,GAAOqE,EAAWrE,GAIlC,OAAOoE,EAEN,GAAIxE,EAASgC,GACd,OAAOA,EAGf,MAAM2C,EAAkB,gBAClBC,EAAsB,QAC5B,SAASF,EAAiBG,GACtB,MAAMC,EAAM,GAOZ,OANAD,EAAQlG,MAAMgG,GAAiBI,QAAQnE,IACnC,GAAIA,EAAM,CACN,MAAMoE,EAAMpE,EAAKjC,MAAMiG,GACvBI,EAAInG,OAAS,IAAMiG,EAAIE,EAAI,GAAGC,QAAUD,EAAI,GAAGC,WAGhDH,EAkBX,SAASI,EAAelD,GACpB,IAAIwC,EAAM,GACV,GAAI3C,EAASG,GACTwC,EAAMxC,OAEL,GAAIjC,EAAQiC,GACb,IAAK,IAAIpD,EAAI,EAAGA,EAAIoD,EAAMnD,OAAQD,IAC9B4F,GAAOU,EAAelD,EAAMpD,IAAM,SAGrC,GAAIoB,EAASgC,GACd,IAAK,MAAMmD,KAAQnD,EACXA,EAAMmD,KACNX,GAAOW,EAAO,KAI1B,OAAOX,EAAIS,OAwIf,MAAMG,EAAmBtG,GACP,MAAPA,EACD,GACAkB,EAASlB,GACLuG,KAAKC,UAAUxG,EAAKyG,EAAU,GAC9B/E,OAAO1B,GAEfyG,EAAW,CAACC,EAAM1G,IAChB2E,EAAM3E,GACC,CACH,CAAC,OAAOA,EAAI2G,SAAU,IAAI3G,EAAI4G,WAAWC,OAAO,CAACD,GAAUtF,EAAKtB,MAC5D4G,EAAWtF,EAAH,OAAetB,EAChB4G,GACR,KAGFjE,EAAM3C,GACJ,CACH,CAAC,OAAOA,EAAI2G,SAAU,IAAI3G,EAAI8G,YAG7B5F,EAASlB,IAASiB,EAAQjB,IAAS+G,EAAc/G,GAGnDA,EAFI0B,OAAO1B,GAgBhBiC,EAEA,GACA+E,EAAY,GACZvC,EAAO,OAIPwC,EAAK,KAAM,EACX/E,EAAO,YACPC,EAAQb,GAAQY,EAAKE,KAAKd,GAC1Be,EAAmBf,GAAQA,EAAIgB,WAAW,aAC1CC,EAAS7C,OAAO8C,OAChB0E,EAAS,CAACtF,EAAKuF,KACjB,MAAMrH,EAAI8B,EAAIwF,QAAQD,GAClBrH,GAAK,GACL8B,EAAIyF,OAAOvH,EAAG,IAGhB0B,EAAiB9B,OAAO+C,UAAUjB,eAClCkD,EAAS,CAAC1E,EAAKsB,IAAQE,EAAe2B,KAAKnD,EAAKsB,GAChDL,EAAUyB,MAAMzB,QAChB0D,EAAS3E,GAA8B,iBAAtB4C,EAAa5C,GAC9B2C,EAAS3C,GAA8B,iBAAtB4C,EAAa5C,GAE9B8C,EAAc9C,GAAuB,oBAARA,EAC7B+C,EAAY/C,GAAuB,kBAARA,EAE3BkB,EAAYlB,GAAgB,OAARA,GAA+B,kBAARA,EAC3CsH,EAAatH,GACRkB,EAASlB,IAAQ8C,EAAW9C,EAAIuH,OAASzE,EAAW9C,EAAIwH,OAE7DxE,EAAiBtD,OAAO+C,UAAUQ,SAClCL,EAAgBM,GAAUF,EAAeG,KAAKD,GAC9C2B,EAAa3B,GACRN,EAAaM,GAAOe,MAAM,GAAI,GAEnC8C,EAAiB/G,GAA8B,oBAAtB4C,EAAa5C,GAKtCyH,EAA+BnI,EAAQ,sHAIvC8D,EAAuBC,IACzB,MAAMC,EAAQ5D,OAAOC,OAAO,MAC5B,OAASJ,IACL,MAAMgE,EAAMD,EAAM/D,GAClB,OAAOgE,IAAQD,EAAM/D,GAAO8D,EAAG9D,MAGjCiE,EAAa,SAIbkE,EAAWtE,EAAqB7D,GAC3BA,EAAImE,QAAQF,EAAY,CAACG,EAAGC,IAAOA,EAAIA,EAAEC,cAAgB,KAE9DJ,EAAc,aAIdK,EAAYV,EAAqB7D,GAC5BA,EAAImE,QAAQD,EAAa,OAAOxD,eAKrC8D,EAAaX,EAAqB7D,GAC7BA,EAAIyE,OAAO,GAAGH,cAAgBtE,EAAI0E,MAAM,IAG7Ce,EAAa,CAAC9B,EAAO+B,IAAa/B,IAAU+B,IAAa/B,IAAUA,GAAS+B,IAAaA,GACzFf,EAAiB,CAACC,EAAKC,KACzB,IAAK,IAAItE,EAAI,EAAGA,EAAIqE,EAAIpE,OAAQD,IAC5BqE,EAAIrE,GAAGsE,IAGTc,EAAM,CAACC,EAAK7D,EAAK4B,KACnBxD,OAAO0F,eAAeD,EAAK7D,EAAK,CAC5B+D,cAAc,EACdC,YAAY,EACZpC,WAGFmB,EAAYrE,IACd,MAAMsE,EAAIC,WAAWvE,GACrB,OAAOwE,MAAMF,GAAKtE,EAAMsE,K,0DC3d5B;;;;;IAOA,MAAMqD,EAA8B,oBAAXC,QAAuD,kBAAvBA,OAAOC,YAC1DC,EAAczB,GAEpBsB,EACMC,OAA2EvB,GACb,OAAUA,EAExE0B,EAAkBD,EAAsF,QAExGE,EAAeF,EAA2E,OAE1FG,EAAYH,EAAgE,KAE5EI,EAAmBJ,EAAwE,MAE3FK,EAA8B,qBAAXC,OAEzB,SAASC,EAAWlD,GAChB,OAAOA,EAAImD,YAAeX,GAAyC,WAA5BxC,EAAIyC,OAAOC,aAEtD,MAAMrF,EAAS9C,OAAO8C,OACtB,SAAS+F,EAAclF,EAAImF,GACvB,MAAMC,EAAY,GAClB,IAAK,MAAMnH,KAAOkH,EAAQ,CACtB,MAAMtF,EAAQsF,EAAOlH,GACrBmH,EAAUnH,GAAOoB,MAAMzB,QAAQiC,GAASA,EAAMzD,IAAI4D,GAAMA,EAAGH,GAE/D,OAAOuF,EAEX,IAAIC,EAAO,OAEX,SAASC,EAAKC,GAEV,MAAMC,EAAOnG,MAAMoG,KAAKC,WAAW9E,MAAM,GACzC+E,QAAQL,KAAKM,MAAMD,QAAS,CAAC,sBAAwBJ,GAAKM,OAAOL,IAGrE,MAAMM,EAAoB,MACpBC,EAAuBC,GAASA,EAAK3F,QAAQyF,EAAmB,IAUtE,SAASG,EAASC,EAAYC,EAAUC,EAAkB,KACtD,IAAIJ,EAAMK,EAAQ,GAAIC,EAAe,GAAIC,EAAO,GAEhD,MAAMC,EAAYL,EAASpC,QAAQ,KAC7B0C,EAAUN,EAASpC,QAAQ,IAAKyC,GAAa,EAAIA,EAAY,GAcnE,OAbIA,GAAa,IACbR,EAAOG,EAASvF,MAAM,EAAG4F,GACzBF,EAAeH,EAASvF,MAAM4F,EAAY,EAAGC,GAAW,EAAIA,EAAUN,EAASzJ,QAC/E2J,EAAQH,EAAWI,IAEnBG,GAAW,IACXT,EAAOA,GAAQG,EAASvF,MAAM,EAAG6F,GAEjCF,EAAOJ,EAASvF,MAAM6F,EAASN,EAASzJ,SAG5CsJ,EAAOU,EAA4B,MAARV,EAAeA,EAAOG,EAAUC,GAEpD,CACHO,SAAUX,GAAQM,GAAgB,KAAOA,EAAeC,EACxDP,OACAK,QACAE,QASR,SAASK,EAAaC,EAAgBV,GAClC,IAAIE,EAAQF,EAASE,MAAQQ,EAAeV,EAASE,OAAS,GAC9D,OAAOF,EAASH,MAAQK,GAAS,KAAOA,GAASF,EAASI,MAAQ,IAStE,SAASO,EAAUC,EAAUC,GAEzB,OAAKA,GAAQD,EAASnK,cAAcmH,QAAQiD,EAAKpK,eACtCmK,EACJA,EAASnG,MAAMoG,EAAKtK,SAAW,IAU1C,SAASuK,EAAoBJ,EAAgBzJ,EAAGC,GAC5C,IAAI6J,EAAa9J,EAAE+J,QAAQzK,OAAS,EAChC0K,EAAa/J,EAAE8J,QAAQzK,OAAS,EACpC,OAAQwK,GAAc,GAClBA,IAAeE,GACfC,EAAkBjK,EAAE+J,QAAQD,GAAa7J,EAAE8J,QAAQC,KACnDE,EAA0BlK,EAAE+H,OAAQ9H,EAAE8H,SACtC0B,EAAezJ,EAAEiJ,SAAWQ,EAAexJ,EAAEgJ,QAC7CjJ,EAAEmJ,OAASlJ,EAAEkJ,KASrB,SAASc,EAAkBjK,EAAGC,GAI1B,OAAQD,EAAEmK,SAAWnK,MAAQC,EAAEkK,SAAWlK,GAE9C,SAASiK,EAA0BlK,EAAGC,GAClC,GAAIhB,OAAO0B,KAAKX,GAAGV,SAAWL,OAAO0B,KAAKV,GAAGX,OACzC,OAAO,EACX,IAAK,IAAIuB,KAAOb,EACZ,IAAKoK,EAA+BpK,EAAEa,GAAMZ,EAAEY,IAC1C,OAAO,EAEf,OAAO,EAEX,SAASuJ,EAA+BpK,EAAGC,GACvC,OAAOgC,MAAMzB,QAAQR,GACfqK,EAAkBrK,EAAGC,GACrBgC,MAAMzB,QAAQP,GACVoK,EAAkBpK,EAAGD,GACrBA,IAAMC,EASpB,SAASoK,EAAkBrK,EAAGC,GAC1B,OAAOgC,MAAMzB,QAAQP,GACfD,EAAEV,SAAWW,EAAEX,QAAUU,EAAEsK,MAAM,CAAC7H,EAAOpD,IAAMoD,IAAUxC,EAAEZ,IAC9C,IAAbW,EAAEV,QAAgBU,EAAE,KAAOC,EAQrC,SAASqJ,EAAoBiB,EAAIlC,GAC7B,GAAIkC,EAAG1I,WAAW,KACd,OAAO0I,EAKX,IAAKA,EACD,OAAOlC,EACX,MAAMmC,EAAenC,EAAKjJ,MAAM,KAC1BqL,EAAaF,EAAGnL,MAAM,KAC5B,IACIsL,EACAC,EAFAC,EAAWJ,EAAalL,OAAS,EAGrC,IAAKoL,EAAa,EAAGA,EAAaD,EAAWnL,OAAQoL,IAGjD,GAFAC,EAAUF,EAAWC,GAEJ,IAAbE,GAA8B,MAAZD,EAAtB,CAEA,GAAgB,OAAZA,EAIA,MAHAC,IAKR,OAAQJ,EAAahH,MAAM,EAAGoH,GAAUC,KAAK,KACzC,IACAJ,EACKjH,MAAMkH,GAAcA,IAAeD,EAAWnL,OAAS,EAAI,IAC3DuL,KAAK,KAGlB,IAAIC,EAKAC,GAJJ,SAAWD,GACPA,EAAe,OAAS,MACxBA,EAAe,QAAU,QAF7B,CAGGA,IAAmBA,EAAiB,KAEvC,SAAWC,GACPA,EAAoB,QAAU,OAC9BA,EAAoB,WAAa,UACjCA,EAAoB,WAAa,GAHrC,CAIGA,IAAwBA,EAAsB,KAYjD,SAASC,EAAcpB,GACnB,IAAKA,EACD,GAAIlC,EAAW,CAEX,MAAMuD,EAASC,SAASC,cAAc,QACtCvB,EAAQqB,GAAUA,EAAOG,aAAa,SAAY,IAElDxB,EAAOA,EAAK3G,QAAQ,kBAAmB,SAGvC2G,EAAO,IAUf,MAJgB,MAAZA,EAAK,IAA0B,MAAZA,EAAK,KACxBA,EAAO,IAAMA,GAGVjB,EAAoBiB,GAG/B,MAAMyB,EAAiB,UACvB,SAASC,EAAW1B,EAAMb,GACtB,OAAOa,EAAK3G,QAAQoI,EAAgB,KAAOtC,EAG/C,SAASwC,EAAmB7E,EAAI8E,GAC5B,MAAMC,EAAUP,SAASQ,gBAAgBC,wBACnCC,EAASlF,EAAGiF,wBAClB,MAAO,CACHE,SAAUL,EAAOK,SACjBC,KAAMF,EAAOE,KAAOL,EAAQK,MAAQN,EAAOM,MAAQ,GACnDC,IAAKH,EAAOG,IAAMN,EAAQM,KAAOP,EAAOO,KAAO,IAGvD,MAAMC,EAAwB,KAAM,CAChCF,KAAMnE,OAAOsE,YACbF,IAAKpE,OAAOuE,cAEhB,SAASC,EAAiBvB,GACtB,IAAIwB,EACJ,GAAI,OAAQxB,EAAU,CAClB,IAAIyB,EAAazB,EAASlE,GAC1B,MAAM4F,EAAqC,kBAAfD,GAA2BA,EAAWxK,WAAW,KAsBzE,EAiBJ,MAAM6E,EAA2B,kBAAf2F,EACZC,EACIpB,SAASqB,eAAeF,EAAW7I,MAAM,IACzC0H,SAASC,cAAckB,GAC3BA,EACN,IAAK3F,EAGD,OAEJ0F,EAAkBb,EAAmB7E,EAAIkE,QAGzCwB,EAAkBxB,EAElB,mBAAoBM,SAASQ,gBAAgBc,MAC7C7E,OAAO8E,SAASL,GAEhBzE,OAAO8E,SAAiC,MAAxBL,EAAgBN,KAAeM,EAAgBN,KAAOnE,OAAOsE,YAAoC,MAAvBG,EAAgBL,IAAcK,EAAgBL,IAAMpE,OAAOuE,aAG7J,SAASQ,EAAa9D,EAAM+D,GACxB,MAAM/B,EAAWgC,QAAQC,MAAQD,QAAQC,MAAMjC,SAAW+B,GAAS,EACnE,OAAO/B,EAAWhC,EAEtB,MAAMkE,EAAkB,IAAIC,IAC5B,SAASC,EAAmBnM,EAAKoM,GAC7BH,EAAgBvL,IAAIV,EAAKoM,GAE7B,SAASC,EAAuBrM,GAC5B,MAAMsM,EAASL,EAAgBM,IAAIvM,GAGnC,OADAiM,EAAgBO,OAAOxM,GAChBsM,EAkBX,IAAIG,EAAqB,IAAMvE,SAASwE,SAAW,KAAOxE,SAASyE,KAKnE,SAASC,EAAsB7D,EAAMb,GACjC,MAAM,SAAEY,EAAQ,OAAE+D,EAAM,KAAEvE,GAASJ,EAE7BM,EAAUO,EAAKjD,QAAQ,KAC7B,GAAI0C,GAAW,EAAG,CAEd,IAAIsE,EAAexE,EAAK3F,MAAM,GAG9B,MAFwB,MAApBmK,EAAa,KACbA,EAAe,IAAMA,GAClBjE,EAAUiE,EAAc,IAEnC,MAAM/E,EAAOc,EAAUC,EAAUC,GACjC,OAAOhB,EAAO8E,EAASvE,EAE3B,SAASyE,EAAoBhE,EAAMiE,EAAc7E,EAAiB/F,GAC9D,IAAI6K,EAAY,GACZC,EAAY,GAGZC,EAAa,KACjB,MAAMC,EAAkB,EAAGpB,YACvB,MAAMtC,EAAKkD,EAAsB7D,EAAMb,UACjCV,EAAOW,EAAgBvG,MACvByL,EAAYL,EAAapL,MAC/B,IAAIkK,EAAQ,EACZ,GAAIE,EAAO,CAIP,GAHA7D,EAAgBvG,MAAQ8H,EACxBsD,EAAapL,MAAQoK,EAEjBmB,GAAcA,IAAe3F,EAE7B,YADA2F,EAAa,MAGjBrB,EAAQuB,EAAYrB,EAAMjC,SAAWsD,EAAUtD,SAAW,OAG1D3H,EAAQsH,GAQZuD,EAAUtI,QAAQ2I,IACdA,EAASnF,EAAgBvG,MAAO4F,EAAM,CAClCsE,QACAyB,KAAMtD,EAAeuD,IACrBC,UAAW3B,EACLA,EAAQ,EACJ5B,EAAoBwD,QACpBxD,EAAoByD,KACxBzD,EAAoB0D,aAItC,SAASC,IACLV,EAAahF,EAAgBvG,MAEjC,SAASkM,EAAOC,GAEZd,EAAUe,KAAKD,GACf,MAAME,EAAW,KACb,MAAMC,EAAQjB,EAAUnH,QAAQiI,GAC5BG,GAAS,GACTjB,EAAUlH,OAAOmI,EAAO,IAGhC,OADAhB,EAAUc,KAAKC,GACRA,EAEX,SAASE,IACL,MAAM,QAAEpC,GAAYjF,OACfiF,EAAQC,OAEbD,EAAQqC,aAAalN,EAAO,GAAI6K,EAAQC,MAAO,CAAEM,OAAQnB,MAA4B,IAEzF,SAASkD,IACL,IAAK,MAAMJ,KAAYf,EACnBe,IACJf,EAAY,GACZpG,OAAOwH,oBAAoB,WAAYlB,GACvCtG,OAAOwH,oBAAoB,eAAgBH,GAK/C,OAFArH,OAAOyH,iBAAiB,WAAYnB,GACpCtG,OAAOyH,iBAAiB,eAAgBJ,GACjC,CACHN,iBACAC,SACAO,WAMR,SAASG,EAAWb,EAAMc,EAASf,EAASgB,GAAW,EAAOC,GAAgB,GAC1E,MAAO,CACHhB,OACAc,UACAf,UACAgB,WACA3E,SAAUjD,OAAOiF,QAAQtN,OACzB6N,OAAQqC,EAAgBxD,IAA0B,MAG1D,SAASyD,EAA0B7F,GAC/B,MAAM,QAAEgD,EAAO,SAAE7D,GAAapB,OAE9B,IAAIqB,EAAkB,CAClBvG,MAAOgL,EAAsB7D,EAAMb,IAEnC8E,EAAe,CAAEpL,MAAOmK,EAAQC,OAepC,SAAS6C,EAAenF,EAAIsC,EAAO5J,GAC/B,MAAM0M,EAAMrC,KAEP1D,EAAKjD,QAAQ,MAAQ,GAAKoC,EAAS2E,OAC9B3E,EAASY,SAAWZ,EAAS2E,OAAS,IACtC9D,GACNW,EACJ,IAGIqC,EAAQ3J,EAAU,eAAiB,aAAa4J,EAAO,GAAI8C,GAC3D9B,EAAapL,MAAQoK,EAEzB,MAAO+C,GACH1H,EAAK,gCAAiC0H,GAEtC7G,EAAS9F,EAAU,UAAY,UAAU0M,IAGjD,SAAS1M,EAAQsH,EAAIsF,GACjB,MAAMhD,EAAQ9K,EAAO,GAAI6K,EAAQC,MAAOwC,EAAWxB,EAAapL,MAAM+L,KAEtEjE,EAAIsD,EAAapL,MAAM8L,SAAS,GAAOsB,EAAM,CAAEjF,SAAUiD,EAAapL,MAAMmI,WAC5E8E,EAAenF,EAAIsC,GAAO,GAC1B7D,EAAgBvG,MAAQ8H,EAE5B,SAASsE,EAAKtE,EAAIsF,GAGd,MAAMC,EAAe/N,EAAO,GAI5B8L,EAAapL,MAAOmK,EAAQC,MAAO,CAC/B0B,QAAShE,EACT4C,OAAQnB,MAOZ0D,EAAeI,EAAaR,QAASQ,GAAc,GACnD,MAAMjD,EAAQ9K,EAAO,GAAIsN,EAAWrG,EAAgBvG,MAAO8H,EAAI,MAAO,CAAEK,SAAUkF,EAAalF,SAAW,GAAKiF,GAC/GH,EAAenF,EAAIsC,GAAO,GAC1B7D,EAAgBvG,MAAQ8H,EAE5B,OA5DKsD,EAAapL,OACdiN,EAAe1G,EAAgBvG,MAAO,CAClC+L,KAAM,KACNc,QAAStG,EAAgBvG,MACzB8L,QAAS,KAET3D,SAAUgC,EAAQtN,OAAS,EAC3BiQ,UAAU,EAGVpC,OAAQ,OACT,GAiDA,CACHpE,SAAUC,EACV6D,MAAOgB,EACPgB,OACA5L,WAQR,SAAS8M,EAAiBnG,GACtBA,EAAOoB,EAAcpB,GACrB,MAAMoG,EAAoBP,EAA0B7F,GAC9CqG,EAAmBrC,EAAoBhE,EAAMoG,EAAkBnD,MAAOmD,EAAkBjH,SAAUiH,EAAkB/M,SAC1H,SAASiN,EAAGvD,EAAOwD,GAAmB,GAC7BA,GACDF,EAAiBvB,iBACrB9B,QAAQsD,GAAGvD,GAEf,MAAMyD,EAAgBrO,EAAO,CAEzBgH,SAAU,GACVa,OACAsG,KACA5E,WAAYA,EAAW+E,KAAK,KAAMzG,IACnCoG,EAAmBC,GAOtB,OANAhR,OAAO0F,eAAeyL,EAAe,WAAY,CAC7ChD,IAAK,IAAM4C,EAAkBjH,SAAStG,QAE1CxD,OAAO0F,eAAeyL,EAAe,QAAS,CAC1ChD,IAAK,IAAM4C,EAAkBnD,MAAMpK,QAEhC2N,EA0GX,SAASE,EAAqB1G,GAW1B,OAPAA,EAAOb,SAASyE,MAAO5D,GAA4Bb,SAASY,SAExDC,EAAKjD,QAAQ,KAAO,IACpBiD,GAAQ,KAILmG,EAAiBnG,GAG5B,SAAS2G,EAAgBC,GACrB,MAAwB,kBAAVA,GAAuBA,GAA0B,kBAAVA,EAEzD,SAASC,EAAY7K,GACjB,MAAuB,kBAATA,GAAqC,kBAATA,EAkB9C,MAAM8K,EAA4B,CAC9B9H,KAAM,IACNhD,UAAM+K,EACN5I,OAAQ,GACRkB,MAAO,GACPE,KAAM,GACNI,SAAU,IACVQ,QAAS,GACT6G,KAAM,GACNC,oBAAgBF,GAGdG,EAA0BzJ,EAA4E,MAK5G,IAAI0J,GACJ,SAAWA,GAKPA,EAAsBA,EAAsB,WAAa,GAAK,UAK9DA,EAAsBA,EAAsB,aAAe,GAAK,YAKhEA,EAAsBA,EAAsB,cAAgB,IAAM,cAftE,CAgBGA,IAA0BA,EAAwB,KAqBrD,SAASC,EAAkB5C,EAAMrG,GAQzB,OAAOhG,EAAO,IAAIkP,MAAS,CACvB7C,OACA,CAAC0C,IAA0B,GAC5B/I,GAGX,SAASmJ,EAAoBC,EAAO/C,GAChC,OAAQ+C,aAAiBF,OACrBH,KAA2BK,IAClB,MAAR/C,MAAmB+C,EAAM/C,KAAOA,IAiBzC,MAAMgD,EAAqB,SACrBC,GAA2B,CAC7BC,WAAW,EACXC,QAAQ,EACRC,OAAO,EACPC,KAAK,GAGHC,GAAiB,sBAQvB,SAASC,GAAeC,EAAUC,GAC9B,MAAMC,EAAU/P,EAAO,GAAIsP,GAA0BQ,GAErD,IAAIE,EAAQ,GAERC,EAAUF,EAAQN,MAAQ,IAAM,GAEpC,MAAM7Q,EAAO,GACb,IAAK,MAAMgK,KAAWiH,EAAU,CAE5B,MAAMK,EAAgBtH,EAAQrL,OAAS,GAAK,CAAC,IAEzCwS,EAAQP,SAAW5G,EAAQrL,SAC3B0S,GAAW,KACf,IAAK,IAAIE,EAAa,EAAGA,EAAavH,EAAQrL,OAAQ4S,IAAc,CAChE,MAAMC,EAAQxH,EAAQuH,GAEtB,IAAIE,EAAkB,IACjBN,EAAQR,UAAY,IAAgC,GACzD,GAAmB,IAAfa,EAAM/D,KAED8D,IACDF,GAAW,KACfA,GAAWG,EAAM1P,MAAMQ,QAAQyO,GAAgB,QAC/CU,GAAmB,QAElB,GAAmB,IAAfD,EAAM/D,KAAwB,CACnC,MAAM,MAAE3L,EAAK,WAAE4P,EAAU,SAAEC,EAAQ,OAAEC,GAAWJ,EAChDxR,EAAKkO,KAAK,CACNjJ,KAAMnD,EACN4P,aACAC,aAEJ,MAAME,EAAKD,GAAkBnB,EAE7B,GAAIoB,IAAOpB,EAAoB,CAC3BgB,GAAmB,GAEnB,IACI,IAAIK,OAAO,IAAID,MAEnB,MAAO5C,GACH,MAAM,IAAIqB,MAAM,oCAAoCxO,OAAW+P,OAC3D5C,EAAI8C,UAIhB,IAAIC,EAAaN,EAAa,OAAOG,YAAaA,QAAW,IAAIA,KAE5DN,IACDS,EAAaL,EAAW,OAAOK,KAAgB,IAAMA,GACrDL,IACAK,GAAc,KAClBX,GAAWW,EACXP,GAAmB,GACfE,IACAF,IAAoB,GACpBC,IACAD,IAAoB,IACb,OAAPI,IACAJ,IAAoB,IAE5BH,EAAcpD,KAAKuD,GAIvBL,EAAMlD,KAAKoD,GAGf,GAAIH,EAAQP,QAAUO,EAAQL,IAAK,CAC/B,MAAMpS,EAAI0S,EAAMzS,OAAS,EACzByS,EAAM1S,GAAG0S,EAAM1S,GAAGC,OAAS,IAAM,kBAGhCwS,EAAQP,SACTS,GAAW,MACXF,EAAQL,IACRO,GAAW,IAENF,EAAQP,SACbS,GAAW,WACf,MAAMQ,EAAK,IAAIC,OAAOT,EAASF,EAAQR,UAAY,GAAK,KACxD,SAASsB,EAAMhK,GACX,MAAMiK,EAAQjK,EAAKiK,MAAML,GACnBzK,EAAS,GACf,IAAK8K,EACD,OAAO,KACX,IAAK,IAAIxT,EAAI,EAAGA,EAAIwT,EAAMvT,OAAQD,IAAK,CACnC,MAAMoD,EAAQoQ,EAAMxT,IAAM,GACpBwB,EAAMF,EAAKtB,EAAI,GACrB0I,EAAOlH,EAAI+E,MAAQnD,GAAS5B,EAAIwR,WAAa5P,EAAMrD,MAAM,KAAOqD,EAEpE,OAAOsF,EAEX,SAAShC,EAAUgC,GACf,IAAIa,EAAO,GAEPkK,GAAuB,EAC3B,IAAK,MAAMnI,KAAWiH,EAAU,CACvBkB,GAAyBlK,EAAKmK,SAAS,OACxCnK,GAAQ,KACZkK,GAAuB,EACvB,IAAK,MAAMX,KAASxH,EAChB,GAAmB,IAAfwH,EAAM/D,KACNxF,GAAQuJ,EAAM1P,WAEb,GAAmB,IAAf0P,EAAM/D,KAAwB,CACnC,MAAM,MAAE3L,EAAK,WAAE4P,EAAU,SAAEC,GAAaH,EAClCa,EAAQvQ,KAASsF,EAASA,EAAOtF,GAAS,GAChD,GAAIR,MAAMzB,QAAQwS,KAAWX,EACzB,MAAM,IAAIpB,MAAM,mBAAmBxO,8DACvC,MAAMwQ,EAAOhR,MAAMzB,QAAQwS,GAASA,EAAMnI,KAAK,KAAOmI,EACtD,IAAKC,EAAM,CACP,IAAIX,EASA,MAAM,IAAIrB,MAAM,2BAA2BxO,MAPvCmG,EAAKmK,SAAS,KACdnK,EAAOA,EAAKpF,MAAM,GAAI,GAGtBsP,GAAuB,EAKnClK,GAAQqK,GAIpB,OAAOrK,EAEX,MAAO,CACH4J,KACAT,QACApR,OACAiS,QACA7M,aAWR,SAASmN,GAAkBlT,EAAGC,GAC1B,IAAIZ,EAAI,EACR,MAAOA,EAAIW,EAAEV,QAAUD,EAAIY,EAAEX,OAAQ,CACjC,MAAM6T,EAAOlT,EAAEZ,GAAKW,EAAEX,GAEtB,GAAI8T,EACA,OAAOA,EACX9T,IAIJ,OAAIW,EAAEV,OAASW,EAAEX,OACO,IAAbU,EAAEV,QAAyB,KAATU,EAAE,IACpB,EACD,EAEDA,EAAEV,OAASW,EAAEX,OACE,IAAbW,EAAEX,QAAyB,KAATW,EAAE,GACrB,GACC,EAEJ,EAQX,SAASmT,GAAuBpT,EAAGC,GAC/B,IAAIZ,EAAI,EACR,MAAMgU,EAASrT,EAAE+R,MACXuB,EAASrT,EAAE8R,MACjB,MAAO1S,EAAIgU,EAAO/T,QAAUD,EAAIiU,EAAOhU,OAAQ,CAC3C,MAAMiU,EAAOL,GAAkBG,EAAOhU,GAAIiU,EAAOjU,IAEjD,GAAIkU,EACA,OAAOA,EACXlU,IAGJ,OAAOiU,EAAOhU,OAAS+T,EAAO/T,OASlC,MAAMkU,GAAa,CACfpF,KAAM,EACN3L,MAAO,IAELgR,GAAiB,eAIvB,SAASC,GAAa9K,GAClB,IAAKA,EACD,MAAO,CAAC,IACZ,GAAa,MAATA,EACA,MAAO,CAAC,CAAC4K,KAEb,IAAK5K,EAAK/G,WAAW,KACjB,MAAM,IAAIoP,MAAM,UAAUrI,kBAAqBA,OAEnD,SAAS+K,EAAMjB,GACX,MAAM,IAAIzB,MAAM,QAAQpE,OAAW+G,OAAYlB,KAEnD,IAAI7F,EAAQ,EACRgH,EAAgBhH,EACpB,MAAMiH,EAAS,GAGf,IAAInJ,EACJ,SAASoJ,IACDpJ,GACAmJ,EAAOjF,KAAKlE,GAChBA,EAAU,GAGd,IAEIqJ,EAFA3U,EAAI,EAIJuU,EAAS,GAETK,EAAW,GACf,SAASC,IACAN,IAES,IAAV/G,EACAlC,EAAQkE,KAAK,CACTT,KAAM,EACN3L,MAAOmR,IAGI,IAAV/G,GACK,IAAVA,GACU,IAAVA,GACIlC,EAAQrL,OAAS,IAAe,MAAT0U,GAAyB,MAATA,IACvCL,EAAM,uBAAuBC,iDACjCjJ,EAAQkE,KAAK,CACTT,KAAM,EACN3L,MAAOmR,EACPrB,OAAQ0B,EACR5B,WAAqB,MAAT2B,GAAyB,MAATA,EAC5B1B,SAAmB,MAAT0B,GAAyB,MAATA,KAI9BL,EAAM,mCAEVC,EAAS,IAEb,SAASO,IACLP,GAAUI,EAEd,MAAO3U,EAAIuJ,EAAKtJ,OAEZ,GADA0U,EAAOpL,EAAKvJ,KACC,OAAT2U,GAA2B,IAAVnH,EAKrB,OAAQA,GACJ,KAAK,EACY,MAATmH,GACIJ,GACAM,IAEJH,KAEc,MAATC,GACLE,IACArH,EAAQ,GAGRsH,IAEJ,MACJ,KAAK,EACDA,IACAtH,EAAQgH,EACR,MACJ,KAAK,EACY,MAATG,GACAnH,EAAQ,EACRoH,EAAW,IAENR,GAAe9R,KAAKqS,GACzBG,KAGAD,IACArH,EAAQ,EAEK,MAATmH,GAAyB,MAATA,GAAyB,MAATA,GAChC3U,KAER,MACJ,KAAK,EAMY,MAAT2U,EAEqC,MAAjCC,EAASA,EAAS3U,OAAS,GAC3B2U,EAAWA,EAASzQ,MAAM,GAAI,GAAKwQ,EAEnCnH,EAAQ,EAGZoH,GAAYD,EAEhB,MACJ,KAAK,EAEDE,IACArH,EAAQ,EAEK,MAATmH,GAAyB,MAATA,GAAyB,MAATA,GAChC3U,IACJ,MACJ,QACIsU,EAAM,iBACN,WAnEJE,EAAgBhH,EAChBA,EAAQ,EA0EhB,OALc,IAAVA,GACA8G,EAAM,uCAAuCC,MACjDM,IACAH,IAEOD,EAGX,SAASM,GAAyBC,EAAQC,EAAQxC,GAC9C,MAAMyC,EAAS5C,GAAe+B,GAAaW,EAAOzL,MAAOkJ,GAUzD,MAAM0C,EAAUzS,EAAOwS,EAAQ,CAC3BF,SACAC,SAEAG,SAAU,GACVC,MAAO,KASX,OAPIJ,IAIKE,EAAQH,OAAOlK,WAAamK,EAAOD,OAAOlK,SAC3CmK,EAAOG,SAAS5F,KAAK2F,GAEtBA,EAUX,SAASG,GAAoBC,EAAQC,GAEjC,MAAMC,EAAW,GACXC,EAAa,IAAIhI,IAEvB,SAASiI,EAAiBpP,GACtB,OAAOmP,EAAW3H,IAAIxH,GAE1B,SAASqP,EAASZ,EAAQC,EAAQY,GAE9B,IAAIC,GAAaD,EACbE,EAAuBC,GAAqBhB,GAEhDe,EAAqBjL,QAAU+K,GAAkBA,EAAeb,OAChE,MAAMvC,EAAUwD,GAAaT,EAAeR,GAEtCkB,EAAoB,CACtBH,GAEJ,GAAI,UAAWf,EAAQ,CACnB,MAAMmB,EAAkC,kBAAjBnB,EAAOK,MAAqB,CAACL,EAAOK,OAASL,EAAOK,MAC3E,IAAK,MAAMA,KAASc,EAChBD,EAAkB1G,KAAK9M,EAAO,GAAIqT,EAAsB,CAGpDK,WAAYP,EACNA,EAAeb,OAAOoB,WACtBL,EAAqBK,WAC3B7M,KAAM8L,EAENvK,QAAS+K,EACHA,EAAeb,OACfe,KAIlB,IAAIZ,EACAkB,EACJ,IAAK,MAAMC,KAAoBJ,EAAmB,CAC9C,IAAI,KAAE3M,GAAS+M,EAIf,GAAIrB,GAAsB,MAAZ1L,EAAK,GAAY,CAC3B,IAAIgN,EAAatB,EAAOD,OAAOzL,KAC3BiN,EAAwD,MAAtCD,EAAWA,EAAWtW,OAAS,GAAa,GAAK,IACvEqW,EAAiB/M,KACb0L,EAAOD,OAAOzL,MAAQA,GAAQiN,EAAkBjN,GAwBxD,GArBA4L,EAAUJ,GAAyBuB,EAAkBrB,EAAQxC,GAKzDoD,EACAA,EAAeR,MAAM7F,KAAK2F,IAO1BkB,EAAkBA,GAAmBlB,EACjCkB,IAAoBlB,GACpBkB,EAAgBhB,MAAM7F,KAAK2F,GAG3BW,GAAad,EAAOzO,OAASkQ,GAActB,IAC3CuB,EAAY1B,EAAOzO,OAEvB,aAAcwP,EAAsB,CACpC,IAAIX,EAAWW,EAAqBX,SACpC,IAAK,IAAIpV,EAAI,EAAGA,EAAIoV,EAASnV,OAAQD,IACjC4V,EAASR,EAASpV,GAAImV,EAASU,GAAkBA,EAAeT,SAASpV,IAKjF6V,EAAiBA,GAAkBV,EACnCwB,EAAcxB,GAElB,OAAOkB,EACD,KAEEK,EAAYL,IAEdzN,EAEV,SAAS8N,EAAYE,GACjB,GAAIxF,EAAYwF,GAAa,CACzB,MAAMzB,EAAUO,EAAW3H,IAAI6I,GAC3BzB,IACAO,EAAW1H,OAAO4I,GAClBnB,EAASlO,OAAOkO,EAASnO,QAAQ6N,GAAU,GAC3CA,EAAQC,SAASjP,QAAQuQ,GACzBvB,EAAQE,MAAMlP,QAAQuQ,QAGzB,CACD,IAAIhH,EAAQ+F,EAASnO,QAAQsP,GACzBlH,GAAS,IACT+F,EAASlO,OAAOmI,EAAO,GACnBkH,EAAW5B,OAAOzO,MAClBmP,EAAW1H,OAAO4I,EAAW5B,OAAOzO,MACxCqQ,EAAWxB,SAASjP,QAAQuQ,GAC5BE,EAAWvB,MAAMlP,QAAQuQ,KAIrC,SAASG,IACL,OAAOpB,EAEX,SAASkB,EAAcxB,GACnB,IAAInV,EAAI,EAER,MAAOA,EAAIyV,EAASxV,QAChB8T,GAAuBoB,EAASM,EAASzV,KAAO,EAChDA,IAGJyV,EAASlO,OAAOvH,EAAG,EAAGmV,GAElBA,EAAQH,OAAOzO,OAASkQ,GAActB,IACtCO,EAAWxT,IAAIiT,EAAQH,OAAOzO,KAAM4O,GAE5C,SAAS2B,EAAQpN,EAAUC,GACvB,IAAIwL,EAEA5L,EACAhD,EAFAmC,EAAS,GAGb,GAAI,SAAUgB,GAAYA,EAASnD,KAAM,CAErC,GADA4O,EAAUO,EAAW3H,IAAIrE,EAASnD,OAC7B4O,EACD,MAAMxD,EAAkB,EAA2B,CAC/CjI,aAERnD,EAAO4O,EAAQH,OAAOzO,KACtBmC,EAAShG,EAETqU,GAAmBpN,EAAgBjB,OAGnCyM,EAAQ7T,KAAK0V,OAAOC,IAAMA,EAAEhE,UAAUtT,IAAIsX,GAAKA,EAAE1Q,OAAQmD,EAAShB,QAElEa,EAAO4L,EAAQzO,UAAUgC,QAExB,GAAI,SAAUgB,EAGfH,EAAOG,EAASH,KAIhB4L,EAAUM,EAASyB,KAAKC,GAAKA,EAAEhE,GAAG7Q,KAAKiH,IAEnC4L,IAGAzM,EAASyM,EAAQ5B,MAAMhK,GACvBhD,EAAO4O,EAAQH,OAAOzO,UAIzB,CAKD,GAHA4O,EAAUxL,EAAgBpD,KACpBmP,EAAW3H,IAAIpE,EAAgBpD,MAC/BkP,EAASyB,KAAKC,GAAKA,EAAEhE,GAAG7Q,KAAKqH,EAAgBJ,QAC9C4L,EACD,MAAMxD,EAAkB,EAA2B,CAC/CjI,WACAC,oBAERpD,EAAO4O,EAAQH,OAAOzO,KAGtBmC,EAAShG,EAAO,GAAIiH,EAAgBjB,OAAQgB,EAAShB,QACrDa,EAAO4L,EAAQzO,UAAUgC,GAE7B,MAAMgC,EAAU,GAChB,IAAI0M,EAAgBjC,EACpB,MAAOiC,EAEH1M,EAAQ2M,QAAQD,EAAcpC,QAC9BoC,EAAgBA,EAAcnC,OAElC,MAAO,CACH1O,OACAgD,OACAb,SACAgC,UACA6G,KAAM+F,GAAgB5M,IAK9B,OAjMA8K,EAAgBS,GAAa,CAAE/D,QAAQ,EAAOE,KAAK,EAAMH,WAAW,GAASuD,GAgM7ED,EAAOpP,QAAQgL,GAASyE,EAASzE,IAC1B,CAAEyE,WAAUkB,UAASJ,cAAaG,YAAWlB,oBAExD,SAASoB,GAAmBrO,EAAQpH,GAChC,IAAIqH,EAAY,GAChB,IAAK,IAAInH,KAAOF,EACRE,KAAOkH,IACPC,EAAUnH,GAAOkH,EAAOlH,IAEhC,OAAOmH,EAQX,SAASqN,GAAqBhB,GAC1B,MAAO,CACHzL,KAAMyL,EAAOzL,KACbgO,SAAUvC,EAAOuC,SACjBhR,KAAMyO,EAAOzO,KACbgL,KAAMyD,EAAOzD,MAAQ,GACrBzG,aAASwG,EACTkG,YAAaxC,EAAOwC,YACpBC,MAAOC,GAAqB1C,GAC5BI,SAAUJ,EAAOI,UAAY,GAC7BuC,UAAW,GACXC,YAAa,GACbC,aAAc,GACdC,eAAgB,GAChB1B,WAAY,eAAgBpB,EACtBA,EAAOoB,YAAc,GACrB,CAAE2B,QAAS/C,EAAOgD,YAQhC,SAASN,GAAqB1C,GAC1B,MAAMiD,EAAc,GAEdR,EAAQzC,EAAOyC,QAAS,EAC9B,GAAI,cAAezC,EACfiD,EAAYF,QAAUN,OAKtB,IAAK,IAAIlR,KAAQyO,EAAOoB,WACpB6B,EAAY1R,GAAyB,mBAAVkR,EAAsBA,EAAQA,EAAMlR,GAEvE,OAAO0R,EAMX,SAASxB,GAAczB,GACnB,MAAOA,EAAQ,CACX,GAAIA,EAAOA,OAAOlK,QACd,OAAO,EACXkK,EAASA,EAAOC,OAEpB,OAAO,EAOX,SAASqC,GAAgB5M,GACrB,OAAOA,EAAQ3D,OAAO,CAACwK,EAAMyD,IAAWtS,EAAO6O,EAAMyD,EAAOzD,MAAO,IAEvE,SAAS0E,GAAaiC,EAAUC,GAC5B,IAAI1F,EAAU,GACd,IAAK,IAAIjR,KAAO0W,EACZzF,EAAQjR,GACJA,KAAO2W,EAAiBA,EAAe3W,GAAO0W,EAAS1W,GAE/D,OAAOiR,EAyCX,MAAM2F,GAAU,KACVC,GAAe,KACfC,GAAW,MACXC,GAAW,KACXC,GAAQ,MACRC,GAAsB,OACtBC,GAAuB,OACvBC,GAAe,OACfC,GAAkB,OAClBC,GAAoB,OACpBC,GAAc,OACdC,GAAqB,OAS3B,SAASC,GAAapF,GAClB,OAAOqF,UAAU,GAAKrF,GACjBhQ,QAAQkV,GAAa,KACrBlV,QAAQ6U,GAAqB,KAC7B7U,QAAQ8U,GAAsB,KAQvC,SAASQ,GAAWtF,GAChB,OAAOoF,GAAapF,GACfhQ,QAAQiV,GAAmB,KAC3BjV,QAAQmV,GAAoB,KAC5BnV,QAAQ+U,GAAc,KAS/B,SAASQ,GAAoBvF,GACzB,OAAOoF,GAAapF,GACfhQ,QAAQwU,GAAS,OACjBxU,QAAQyU,GAAc,OACtBzU,QAAQ2U,GAAU,OAClB3U,QAAQgV,GAAiB,KACzBhV,QAAQiV,GAAmB,KAC3BjV,QAAQmV,GAAoB,KAC5BnV,QAAQ+U,GAAc,KAQ/B,SAASS,GAAWxF,GAChB,OAAOoF,GAAapF,GAAMhQ,QAAQwU,GAAS,OAAOxU,QAAQ4U,GAAO,OAUrE,SAASa,GAAYzF,GACjB,OAAOwF,GAAWxF,GAAMhQ,QAAQ0U,GAAU,OAS9C,SAASgB,GAAO1F,GACZ,IACI,OAAO2F,mBAAmB,GAAK3F,GAEnC,MAAOrD,IAGP,MAAO,GAAKqD,EAYhB,SAASnK,GAAW4E,GAChB,MAAMzE,EAAQ,GAGd,GAAe,KAAXyE,GAA4B,MAAXA,EACjB,OAAOzE,EACX,MAAM4P,EAA6B,MAAdnL,EAAO,GACtBoL,GAAgBD,EAAenL,EAAOlK,MAAM,GAAKkK,GAAQtO,MAAM,KACrE,IAAK,IAAIC,EAAI,EAAGA,EAAIyZ,EAAaxZ,SAAUD,EAAG,CAC1C,IAAKwB,EAAKkY,GAAYD,EAAazZ,GAAGD,MAAM,KAC5CyB,EAAM8X,GAAO9X,GAEb,IAAI4B,EAAoB,MAAZsW,EAAmB,KAAOJ,GAAOI,GAC7C,GAAIlY,KAAOoI,EAAO,CAEd,IAAI+P,EAAe/P,EAAMpI,GACpBoB,MAAMzB,QAAQwY,KACfA,EAAe/P,EAAMpI,GAAO,CAACmY,IAEjCA,EAAanK,KAAKpM,QAGlBwG,EAAMpI,GAAO4B,EAGrB,OAAOwG,EAWX,SAASQ,GAAeR,GACpB,IAAIyE,EAAS,GACb,IAAK,IAAI7M,KAAOoI,EAAO,CACfyE,EAAOpO,SACPoO,GAAU,KACd,MAAMjL,EAAQwG,EAAMpI,GAEpB,GADAA,EAAM2X,GAAoB3X,GACb,MAAT4B,EAAe,MAEDkO,IAAVlO,IACAiL,GAAU7M,GACd,SAGJ,IAAIwF,EAASpE,MAAMzB,QAAQiC,GACrBA,EAAMzD,IAAIia,GAAKA,GAAKT,GAAoBS,IACxC,CAACxW,GAAS+V,GAAoB/V,IACpC,IAAK,IAAIpD,EAAI,EAAGA,EAAIgH,EAAO/G,OAAQD,IAE/BqO,IAAWrO,EAAI,IAAM,IAAMwB,EACV,MAAbwF,EAAOhH,KACPqO,GAAW,IAAMrH,EAAOhH,IAGpC,OAAOqO,EAUX,SAASwL,GAAejQ,GACpB,MAAMkQ,EAAkB,GACxB,IAAK,IAAItY,KAAOoI,EAAO,CACnB,IAAIxG,EAAQwG,EAAMpI,QACJ8P,IAAVlO,IACA0W,EAAgBtY,GAAOoB,MAAMzB,QAAQiC,GAC/BA,EAAMzD,IAAIia,GAAW,MAALA,EAAY,KAAO,GAAKA,GAC/B,MAATxW,EACIA,EACA,GAAKA,GAGvB,OAAO0W,EAMX,SAASC,KACL,IAAIC,EAAW,GACf,SAASC,EAAIC,GAET,OADAF,EAASxK,KAAK0K,GACP,KACH,MAAMla,EAAIga,EAAS1S,QAAQ4S,GACvBla,GAAK,GACLga,EAASzS,OAAOvH,EAAG,IAG/B,SAASma,IACLH,EAAW,GAEf,MAAO,CACHC,MACAna,KAAM,IAAMka,EACZG,SA2DR,SAASC,GAAiBC,EAAOnP,EAAIlC,EAAMgM,EAAQzO,GAE/C,MAAM+T,EAAqBtF,IAEtBA,EAAO8C,eAAevR,GAAQyO,EAAO8C,eAAevR,IAAS,IAClE,MAAO,IAAM,IAAIgU,QAAQ,CAACzD,EAAS0D,KAC/B,MAAMC,EAAQC,KACI,IAAVA,EACAF,EAAO7I,EAAkB,EAA4B,CACjD3I,OACAkC,QAECwP,aAAiB9I,MACtB4I,EAAOE,GAEFxJ,EAAgBwJ,GACrBF,EAAO7I,EAAkB,EAAmC,CACxD3I,KAAMkC,EACNA,GAAIwP,MAIJJ,GAEAtF,EAAO8C,eAAevR,KAAU+T,GACf,oBAAVI,GACPJ,EAAmB9K,KAAKkL,GAC5B5D,MAIF6D,EAAcN,EAAMhX,KAAK2R,GAAUA,EAAO2C,UAAUpR,GAAO2E,EAAIlC,EAAsFyR,GAC3J,IAAIG,EAAYL,QAAQzD,QAAQ6D,GAC5BN,EAAMpa,OAAS,IACf2a,EAAYA,EAAUnT,KAAKgT,IAuB/BG,EAAUlT,MAAM6I,GAAOiK,EAAOjK,MActC,SAASsK,GAAwBnQ,EAASoQ,EAAW5P,EAAIlC,GACrD,MAAM+R,EAAS,GACf,IAAK,MAAM/F,KAAUtK,EACjB,IAAK,MAAMnE,KAAQyO,EAAOoB,WAAY,CAClC,IAAI4E,EAAehG,EAAOoB,WAAW7P,GAQrC,GAAkB,qBAAduU,GAAqC9F,EAAO2C,UAAUpR,GAE1D,GAAI0U,GAAiBD,GAAe,CAEhC,IAAIvI,EAAUuI,EAAaE,WAAaF,EACxC,MAAMX,EAAQ5H,EAAQqI,GACtBT,GAASU,EAAOvL,KAAK4K,GAAiBC,EAAOnP,EAAIlC,EAAMgM,EAAQzO,QAE9D,CAED,IAAI4U,EAAmBH,IAMnBG,EAAmBA,EAAiBzT,MAAM,IAAM,MAEpDqT,EAAOvL,KAAK,IAAM2L,EAAiB1T,KAAK2T,IACpC,IAAKA,EACD,OAAOb,QAAQC,OAAO,IAAI5I,MAAM,+BAA+BrL,0CAA6CyO,EAAOzL,UACvH,MAAM8R,EAAoB9S,EAAW6S,GAC/BA,EAASrD,QACTqD,EAENpG,EAAOoB,WAAW7P,GAAQ8U,EAE1B,MAAMhB,EAAQgB,EAAkBP,GAChC,OAAOT,GAASD,GAAiBC,EAAOnP,EAAIlC,EAAMgM,EAAQzO,EAA1C6T,OAKhC,OAAOW,EAMX,SAASE,GAAiBjD,GACtB,MAA6B,kBAAdA,GACX,gBAAiBA,GACjB,UAAWA,GACX,cAAeA,EAKvB,SAASsD,GAAQ7D,GACb,MAAM8D,EAAS,eAAOpT,GAChBqT,EAAe,eAAOpT,GACtB+I,EAAQ,eAAS,IAAMoK,EAAOzE,QAAQ,eAAMW,EAAMvM,MAClDuQ,EAAoB,eAAS,KAC/B,IAAI,QAAE/Q,GAAYyG,EAAM/N,OACpB,OAAEnD,GAAWyK,EACjB,MAAMgR,EAAehR,EAAQzK,EAAS,GACtC,IAAI0b,EAAiBH,EAAa9Q,QAClC,IAAKgR,IAAiBC,EAAe1b,OACjC,OAAQ,EACZ,IAAIyP,EAAQiM,EAAe5Z,UAAU6I,EAAkBoG,KAAK,KAAM0K,IAClE,GAAIhM,GAAS,EACT,OAAOA,EAEX,IAAIkM,EAAmBC,GAAgBnR,EAAQzK,EAAS,IACxD,OAEAA,EAAS,GAIL4b,GAAgBH,KAAkBE,GAElCD,EAAeA,EAAe1b,OAAS,GAAGsJ,OAASqS,EACjDD,EAAe5Z,UAAU6I,EAAkBoG,KAAK,KAAMtG,EAAQzK,EAAS,KACvEyP,IAEJoM,EAAW,eAAS,IAAML,EAAkBrY,OAAS,GACvD2Y,GAAeP,EAAa9S,OAAQyI,EAAM/N,MAAMsF,SAC9CsT,EAAgB,eAAS,IAAMP,EAAkBrY,OAAS,GAC5DqY,EAAkBrY,QAAUoY,EAAa9Q,QAAQzK,OAAS,GAC1D4K,EAA0B2Q,EAAa9S,OAAQyI,EAAM/N,MAAMsF,SAC/D,SAASuT,EAASC,EAAI,IAClB,OAAIC,GAAWD,GACJX,EAAO,eAAM9D,EAAM7T,SAAW,UAAY,QAAQ,eAAM6T,EAAMvM,KAClEqP,QAAQzD,UAEnB,MAAO,CACH3F,QACAiL,KAAM,eAAS,IAAMjL,EAAM/N,MAAMgZ,MACjCN,WACAE,gBACAC,YAGR,MAAMI,GAAiB,eAAgB,CACnC9V,KAAM,aACNkR,MAAO,CACHvM,GAAI,CACA6D,KAAM,CAACnN,OAAQhC,QACf0c,UAAU,GAEdC,YAAa3a,OAEb4a,iBAAkB5a,OAClB6a,OAAQC,QACRC,iBAAkB,CACd5N,KAAMnN,OACNmW,QAAS,SAGjB,MAAMN,GAAO,MAAEmF,EAAK,MAAEC,IAClB,MAAMC,EAAO,eAASxB,GAAQ7D,KACxB,QAAEhF,GAAY,eAAOtK,GACrB4U,EAAU,eAAS,KAAM,CAC3B,CAACC,GAAavF,EAAM8E,YAAa9J,EAAQwK,gBAAiB,uBAAwBH,EAAKhB,SAMvF,CAACkB,GAAavF,EAAM+E,iBAAkB/J,EAAQyK,qBAAsB,6BAA8BJ,EAAKd,iBAE3G,MAAO,KACH,MAAM5G,EAAWwH,EAAM7E,SAAW6E,EAAM7E,QAAQ+E,GAChD,OAAOrF,EAAMgF,OACPrH,EACA,eAAE,IAAK1S,EAAO,CACZ,eAAgBoa,EAAKd,cACfvE,EAAMkF,iBACN,KACNQ,QAASL,EAAKb,SACdG,KAAMU,EAAKV,MACZS,EAAO,CACNO,MAAOL,EAAQ3Z,QACfgS,OASdiI,GAAahB,GACnB,SAASF,GAAWD,GAEhB,KAAIA,EAAEoB,SAAWpB,EAAEqB,QAAUrB,EAAEsB,SAAWtB,EAAEuB,YAGxCvB,EAAEwB,wBAGWpM,IAAb4K,EAAEyB,QAAqC,IAAbzB,EAAEyB,QAAhC,CAIA,GAAIzB,EAAE0B,eAAiB1B,EAAE0B,cAAc7R,aAAc,CAEjD,MAAM8R,EAAS3B,EAAE0B,cAAc7R,aAAa,UAC5C,GAAI,cAAczJ,KAAKub,GACnB,OAKR,OAFI3B,EAAE4B,gBACF5B,EAAE4B,kBACC,GAEX,SAAS/B,GAAegC,EAAOC,GAC3B,IAAK,IAAIxc,KAAOwc,EAAO,CACnB,IAAIC,EAAaD,EAAMxc,GACnB0c,EAAaH,EAAMvc,GACvB,GAA0B,kBAAfyc,GACP,GAAIA,IAAeC,EACf,OAAO,OAGX,IAAKtb,MAAMzB,QAAQ+c,IACfA,EAAWje,SAAWge,EAAWhe,QACjCge,EAAWE,KAAK,CAAC/a,EAAOpD,IAAMoD,IAAU8a,EAAWle,IACnD,OAAO,EAGnB,OAAO,EAMX,SAAS6b,GAAgB7G,GACrB,OAAOA,EAAUA,EAAOlK,QAAUkK,EAAOlK,QAAQvB,KAAOyL,EAAOzL,KAAQ,GAQ3E,IAAIyT,GAAe,CAACoB,EAAWC,EAAaC,IAA8B,MAAbF,EACvDA,EACe,MAAfC,EACIA,EACAC,EAEV,MAAMC,GAAiB,eAAgB,CACnChY,KAAM,aACNkR,MAAO,CACHlR,KAAM,CACFwI,KAAMnN,OACNmW,QAAS,WAEb5G,MAAOvR,QAEX,MAAM6X,GAAO,MAAEoF,EAAK,MAAED,IAElB,MAAM4B,EAAgB,eAAOpW,GACvBqW,EAAQ,eAAOvW,EAAc,GAC7BwW,EAAkB,eAAS,KAAOjH,EAAMtG,OAASqN,GAAe9T,QAAQ+T,IAC9E,eAAQvW,EAAcuW,EAAQ,GAC9B,eAAQxW,EAAiByW,GACzB,MAAMC,EAAU,iBAyBhB,OAtBA,eAAM,IAAM,CAACA,EAAQvb,MAAOsb,EAAgBtb,MAAOqU,EAAMlR,MAAO,EAAEqY,EAAU1T,EAAI3E,IAAQsY,EAAa7V,EAAM8V,MAEnG5T,IAGAA,EAAGyM,UAAUpR,GAAQqY,EAGjB5V,GAAQ4V,IAAaC,IACrB3T,EAAG0M,YAAc5O,EAAK4O,YACtB1M,EAAG2M,aAAe7O,EAAK6O,gBAI3B+G,IACA1T,GAGElC,GAAS4B,EAAkBM,EAAIlC,IAAU6V,IAC1C3T,EAAG4M,eAAevR,IAAS,IAAIJ,QAAQoJ,GAAYA,EAASqP,KAElE,CAAEG,MAAO,SACL,KACH,MAAM5N,EAAQsG,EAAMtG,OAASqN,EACvBQ,EAAeN,EAAgBtb,MAC/B6b,EAAgBD,GAAgBA,EAAa5I,WAAWqB,EAAMlR,MAG9D2Y,EAAczH,EAAMlR,KAC1B,IAAK0Y,EACD,OAAOrC,EAAM7E,QACP6E,EAAM7E,QAAQ,CAAEoH,UAAWF,EAAe9N,UAC1C,KAGV,MAAMiO,EAAmBJ,EAAavH,MAAMA,EAAMlR,MAC5C8Y,EAAaD,GACQ,IAArBA,EACIjO,EAAMzI,OACsB,oBAArB0W,EACHA,EAAiBjO,GACjBiO,EACR,KACAE,EAAmBC,IAEjBA,EAAMvH,UAAUwH,cAChBR,EAAarH,UAAUuH,GAAe,OAGxClH,EAAY,eAAEiH,EAAevc,EAAO,GAAI2c,EAAYxC,EAAO,CAC7DyC,mBACAG,IAAKd,KAET,OAGA/B,EAAM7E,QACA6E,EAAM7E,QAAQ,CAAEoH,UAAWnH,EAAW7G,UACtC6G,MASZ0H,GAAanB,GAwBnB,SAASoB,GAAalN,GAClB,MAAM0C,EAAUG,GAAoB7C,EAAQ8C,OAAQ9C,GACpD,IAAImN,EAAenN,EAAQhJ,YAAcA,GACrCoW,EAAmBpN,EAAQrI,gBAAkBA,IAC7C,eAAE0V,GAAmBrN,EACrB1B,EAAgB0B,EAAQlF,QAC5B,MAAMwS,EAAehG,KACfiG,EAAsBjG,KACtBkG,EAAclG,KACdyB,EAAe,eAAWnK,GAChC,IAAI6O,EAAkB7O,EAElBhJ,GAAayX,GAAkB,sBAAuBvS,UACtDA,QAAQ4S,kBAAoB,UAEhC,MAAMC,EAAkB3X,EAAcuI,KAAK,KAAMqP,GAAc,GAAKA,GAC9DC,EAAe7X,EAAcuI,KAAK,KAAMqI,IACxCkH,EAAe9X,EAAcuI,KAAK,KAAMsI,IAC9C,SAAS1D,EAAS4K,EAAerP,GAC7B,IAAI8D,EACAD,EAQJ,OAPI5D,EAAYoP,IACZvL,EAASE,EAAQQ,iBAAiB6K,GAClCxL,EAAS7D,GAGT6D,EAASwL,EAENrL,EAAQS,SAASZ,EAAQC,GAEpC,SAASyB,EAAYnQ,GACjB,IAAIka,EAAgBtL,EAAQQ,iBAAiBpP,GACzCka,GACAtL,EAAQuB,YAAY+J,GAM5B,SAAS5J,IACL,OAAO1B,EAAQ0B,YAAYlX,IAAI+gB,GAAgBA,EAAa1L,QAEhE,SAAS2L,EAASpa,GACd,QAAS4O,EAAQQ,iBAAiBpP,GAEtC,SAASuQ,EAAQ8J,EAAajX,GAI1B,GADAA,EAAkBjH,EAAO,GAAIiH,GAAmB6R,EAAapY,OAClC,kBAAhBwd,EAA0B,CACjC,IAAIC,EAAqBrX,EAASoW,EAAcgB,EAAajX,EAAgBJ,MACzEyV,EAAe7J,EAAQ2B,QAAQ,CAAEvN,KAAMsX,EAAmBtX,MAAQI,GAClEyS,EAAOrL,EAAc9E,WAAW4U,EAAmB3W,UASvD,OAAOxH,EAAOme,EAAoB7B,EAAc,CAC5CtW,OAAQ6X,EAAavB,EAAatW,QAClC8I,oBAAgBF,EAChB8K,SAGR,IAAI0E,EAEA,SAAUF,EAOVE,EAAkBpe,EAAO,GAAIke,EAAa,CACtCrX,KAAMC,EAASoW,EAAcgB,EAAYrX,KAAMI,EAAgBJ,MAAMA,QAKzEuX,EAAkBpe,EAAO,GAAIke,EAAa,CACtClY,OAAQ4X,EAAaM,EAAYlY,UAIrCiB,EAAgBjB,OAAS4X,EAAa3W,EAAgBjB,SAE1D,IAAIsW,EAAe7J,EAAQ2B,QAAQgK,EAAiBnX,GACpD,MAAMG,EAAOoP,GAAW0H,EAAY9W,MAAQ,IAM5CkV,EAAatW,OAAS0X,EAAgBG,EAAavB,EAAatW,SAChE,MAAMwB,EAAWC,EAAa0V,EAAkBnd,EAAO,GAAIke,EAAa,CACpE9W,OACAP,KAAMyV,EAAazV,QAEvB,IAAI6S,EAAOrL,EAAc9E,WAAW/B,GAQpC,OAAOxH,EAAO,CACVwH,WAGAJ,OACAF,MAMAiW,IAAqBzV,GACfyP,GAAe+G,EAAYhX,OAC3BgX,EAAYhX,OACnBoV,EAAc,CACbxN,oBAAgBF,EAChB8K,SAGR,SAAS2E,EAAiB7V,GACtB,MAAqB,kBAAPA,EAAkB,CAAE3B,KAAM2B,GAAOxI,EAAO,GAAIwI,GAE9D,SAAS8V,EAAwB9V,EAAIlC,GACjC,GAAIkX,IAAoBhV,EACpB,OAAOyG,EAAkB,EAA8B,CACnD3I,OACAkC,OAIZ,SAASsE,EAAKtE,GACV,OAAO+V,EAAiB/V,GAE5B,SAAStH,EAAQsH,GACb,OAAOsE,EAAK9M,EAAOqe,EAAiB7V,GAAK,CAAEtH,SAAS,KAExD,SAASqd,EAAiB/V,EAAIsG,GAC1B,MAAM0P,EAAkBhB,EAAkBpJ,EAAQ5L,GAC5ClC,EAAOwS,EAAapY,MACpBoN,EAAOtF,EAAGsC,MACV2T,EAAQjW,EAAGiW,MAEXvd,GAAyB,IAAfsH,EAAGtH,QACbwd,EAAcF,EAAexW,QAAQwW,EAAexW,QAAQzK,OAAS,GAC3E,GAAImhB,GAAeA,EAAY7J,SAAU,CACrC,MAAM,SAAEA,GAAa6J,EAErB,IAAIC,EAAoBN,EAAqC,oBAAbxJ,EAA0BA,EAAS2J,GAAkB3J,GAOrG,OAAO0J,EAAiBve,EAAO,CAC3BkH,MAAOsX,EAAetX,MACtBE,KAAMoX,EAAepX,KACrBpB,OAAQwY,EAAexY,QACxB2Y,EAAmB,CAClB7T,MAAOgD,EACP2Q,QACAvd,YAGJ4N,GAAkB0P,GAGtB,MAAMI,EAAaJ,EAEnB,IAAIK,EAYJ,OAbAD,EAAW9P,eAAiBA,GAEvB2P,GAAS3W,EAAoBqV,EAAkB7W,EAAMkY,KACtDK,EAAU5P,EAAkB,GAAgC,CAAEzG,GAAIoW,EAAYtY,SAE9EwY,GAAaxY,EAAMA,GAGnB,GAGA,KAEIuY,EAAUhH,QAAQzD,QAAQyK,GAAWtF,EAASqF,EAAYtY,IAC7DtB,MAAOoK,GACJD,EAAoBC,EAAO,IAGpBA,EAGJ2P,EAAa3P,IAEnBrK,KAAM8Z,IACP,GAAIA,GACA,GAAI1P,EAAoB0P,EAAS,GAc7B,OAAON,EAEPve,EAAOqe,EAAiBQ,EAAQrW,IAAK,CACjCsC,MAAOgD,EACP2Q,QACAvd,YAGJ4N,GAAkB8P,QAKtBC,EAAUG,EAAmBJ,EAAYtY,GAAM,EAAMpF,EAAS4M,GAGlE,OADAmR,EAAiBL,EAAYtY,EAAMuY,GAC5BA,IAQf,SAASK,EAAiC1W,EAAIlC,GAC1C,MAAM8I,EAAQkP,EAAwB9V,EAAIlC,GAC1C,OAAO8I,EAAQyI,QAAQC,OAAO1I,GAASyI,QAAQzD,UAGnD,SAASmF,EAAS/Q,EAAIlC,GAClB,IAAI+R,EACJ,MAAO8G,EAAgBC,EAAiBC,GAAoBC,GAAuB9W,EAAIlC,GAEvF+R,EAASF,GAAwBgH,EAAeI,UAAW,mBAAoB/W,EAAIlC,GAEnF,IAAK,MAAMgM,KAAU6M,EACjB,IAAK,MAAMxH,KAASrF,EAAO4C,YACvBmD,EAAOvL,KAAK4K,GAAiBC,EAAOnP,EAAIlC,IAGhD,MAAMkZ,EAA0BN,EAAiC5Q,KAAK,KAAM9F,EAAIlC,GAGhF,OAFA+R,EAAOvL,KAAK0S,GAEJC,GAAcpH,GACjBtT,KAAK,KAENsT,EAAS,GACT,IAAK,MAAMV,KAAS0F,EAAajgB,OAC7Bib,EAAOvL,KAAK4K,GAAiBC,EAAOnP,EAAIlC,IAG5C,OADA+R,EAAOvL,KAAK0S,GACLC,GAAcpH,KAEpBtT,KAAK,KAENsT,EAASF,GAAwBiH,EAAiB,oBAAqB5W,EAAIlC,GAC3E,IAAK,MAAMgM,KAAU8M,EACjB,IAAK,MAAMzH,KAASrF,EAAO6C,aACvBkD,EAAOvL,KAAK4K,GAAiBC,EAAOnP,EAAIlC,IAKhD,OAFA+R,EAAOvL,KAAK0S,GAELC,GAAcpH,KAEpBtT,KAAK,KAENsT,EAAS,GACT,IAAK,MAAM/F,KAAU9J,EAAGR,QAEpB,GAAIsK,EAAOwC,aAAexO,EAAK0B,QAAQpD,QAAQ0N,GAAU,EACrD,GAAIpS,MAAMzB,QAAQ6T,EAAOwC,aACrB,IAAK,MAAMA,KAAexC,EAAOwC,YAC7BuD,EAAOvL,KAAK4K,GAAiB5C,EAAatM,EAAIlC,SAGlD+R,EAAOvL,KAAK4K,GAAiBpF,EAAOwC,YAAatM,EAAIlC,IAMjE,OAFA+R,EAAOvL,KAAK0S,GAELC,GAAcpH,KAEpBtT,KAAK,KAGNyD,EAAGR,QAAQvE,QAAQ6O,GAAWA,EAAO8C,eAAiB,IAEtDiD,EAASF,GAAwBkH,EAAiB,mBAAoB7W,EAAIlC,GAC1E+R,EAAOvL,KAAK0S,GAELC,GAAcpH,KAEpBtT,KAAK,KAENsT,EAAS,GACT,IAAK,MAAMV,KAAS2F,EAAoBlgB,OACpCib,EAAOvL,KAAK4K,GAAiBC,EAAOnP,EAAIlC,IAG5C,OADA+R,EAAOvL,KAAK0S,GACLC,GAAcpH,KAGpBrT,MAAM6I,GAAOsB,EAAoBtB,EAAK,GACrCA,EACAgK,QAAQC,OAAOjK,IAEzB,SAASoR,EAAiBzW,EAAIlC,EAAMuY,GAGhC,IAAK,MAAMlH,KAAS4F,EAAYngB,OAC5Bua,EAAMnP,EAAIlC,EAAMuY,GAOxB,SAASG,EAAmBJ,EAAYtY,EAAMoZ,EAAQxe,EAAS4M,GAE3D,MAAMsB,EAAQkP,EAAwBM,EAAYtY,GAClD,GAAI8I,EACA,OAAOA,EAEX,MAAMuQ,EAAoBrZ,IAASqI,EAC7B7D,EAASnF,EAAiBkF,QAAQC,MAAb,GAGvB4U,IAGIxe,GAAWye,EACXtR,EAAcnN,QAAQ0d,EAAWpX,SAAUxH,EAAO,CAC9CoL,OAAQuU,GAAqB7U,GAASA,EAAMM,QAC7C0C,IAEHO,EAAcvB,KAAK8R,EAAWpX,SAAUsG,IAGhDgL,EAAapY,MAAQke,EACrBE,GAAaF,EAAYtY,EAAMoZ,EAAQC,GACvCC,KAEJ,IAAIC,EAEJ,SAASC,IACLD,EAAwBxR,EAAczB,OAAO,CAACpE,EAAIuX,EAAOC,KAErD,MAAMpB,EAAaxK,EAAQ5L,GAC3BgV,EAAkBoB,EAClB,MAAMtY,EAAOwS,EAAapY,MAEtBiF,GACAsF,EAAmBN,EAAarE,EAAKkB,SAAUwY,EAAKpV,OAAQX,KAEhEsP,EAASqF,EAAYtY,GAChBtB,MAAOoK,GACJD,EAAoBC,EAAO,IACpBA,EAEPD,EAAoBC,EAAO,IAEvB4Q,EAAKpV,OACLyD,EAAcF,IAAI6R,EAAKpV,OAAO,GAGlC2T,EAAiBnP,EAAM5G,GAAIoW,GAEzB5Z,MAAMkB,GAED2R,QAAQC,WAGfkI,EAAKpV,OACLyD,EAAcF,IAAI6R,EAAKpV,OAAO,GAE3BmU,EAAa3P,KAEnBrK,KAAM8Z,IACPA,EACIA,GACIG,EAEAJ,EAAYtY,GAAM,GAEtBuY,GAAWmB,EAAKpV,OAChByD,EAAcF,IAAI6R,EAAKpV,OAAO,GAClCqU,EAAiBL,EAAYtY,EAAMuY,KAElC7Z,MAAMkB,KAInB,IAEI+Z,EAFAC,EAAgB7I,KAChB8I,EAAgB9I,KAOpB,SAAS0H,EAAa3P,GAGlB,OAFAwQ,GAAYxQ,GACZ+Q,EAAc/iB,OAAOqG,QAAQ+T,GAAWA,EAAQpI,IACzCyI,QAAQC,OAAO1I,GAE1B,SAASgR,IACL,OAAIH,GAASnH,EAAapY,QAAUiO,EACzBkJ,QAAQzD,UACZ,IAAIyD,QAAQ,CAACzD,EAAS0D,KACzBoI,EAAc3I,IAAI,CAACnD,EAAS0D,MAQpC,SAAS8H,GAAY/R,GACboS,IAEJA,GAAQ,EACRH,IACAI,EACK9iB,OACAqG,QAAQ,EAAE2Q,EAAS0D,KAAajK,EAAMiK,EAAOjK,GAAOuG,KACzD8L,EAAczI,SAGlB,SAASqH,GAAatW,EAAIlC,EAAMoZ,EAAQC,GACpC,IAAKha,IAAcyX,EACf,OAAOvF,QAAQzD,UACnB,IAAIlJ,GAAmBwU,GAAUvU,EAAuBR,EAAanC,EAAGhB,SAAU,MAC5EmY,IAAsBD,IACpB7U,QAAQC,OACRD,QAAQC,MAAMM,QAClB,KACJ,OAAO,iBACFrG,KAAK,IAAMqY,EAAe5U,EAAIlC,EAAM4E,IACpCnG,KAAK8D,GAAYA,GAAYuB,EAAiBvB,IAC9C7D,MAAM+Z,GAEf,MAAM5Q,GAAMvD,GAAUyD,EAAcF,GAAGvD,GACvC,IAAIyV,GACJ,MAAMC,GAAgB,IAAIC,IACpB1H,GAAS,CACXC,eACA5F,WACAc,cACAiK,WACA9J,YACAC,UACArE,UACAjD,OACA5L,UACAiN,MACA1B,KAAM,IAAM0B,IAAI,GAChB3B,QAAS,IAAM2B,GAAG,GAClBqS,WAAYnD,EAAa9F,IACzBkJ,cAAenD,EAAoB/F,IACnCmJ,UAAWnD,EAAYhG,IACvBoJ,QAASR,EAAc5I,IACvB6I,UACA,QAAQQ,GACJ,MAAM/H,EAASgI,KACfD,EAAItL,UAAU,aAAcqF,IAC5BiG,EAAItL,UAAU,aAAc0H,IAC5B4D,EAAIE,OAAOC,iBAAiBC,QAAUnI,EACtC3b,OAAO0F,eAAege,EAAIE,OAAOC,iBAAkB,SAAU,CACzD1V,IAAK,IAAM,eAAMyN,KAKjBnT,IAGC0a,IACDvH,EAAapY,QAAUiO,IAEvB0R,IAAU,EACVvT,EAAKuB,EAAcrH,UAAUhC,MAAM6I,IAC3B,KAIZ,MAAMoT,EAAgB,GACtB,IAAK,IAAIniB,KAAO6P,EAEZsS,EAAcniB,GAAO,eAAS,IAAMga,EAAapY,MAAM5B,IAE3D8hB,EAAIM,QAAQzb,EAAWoT,GACvB+H,EAAIM,QAAQxb,EAAkB,eAASub,IACvC,IAAIE,EAAaP,EAAIQ,QACrBd,GAAc/I,IAAIqJ,GAClBA,EAAIQ,QAAU,WACVd,GAAchV,OAAOsV,GACjBN,GAAcnc,KAAO,IACrB0b,IACA/G,EAAapY,MAAQiO,EACrB0R,IAAU,EACVJ,GAAQ,GAEZkB,EAAWxgB,KAAKkgB,KAAMta,cAIlC,OAAOsS,GAEX,SAAS4G,GAAcpH,GACnB,OAAOA,EAAOhU,OAAO,CAACgd,EAAS1J,IAAU0J,EAAQtc,KAAK,IAAM4S,KAAUE,QAAQzD,WAElF,SAASkL,GAAuB9W,EAAIlC,GAChC,MAAM6Y,EAAiB,GACjBC,EAAkB,GAClBC,EAAkB,GAClBiC,EAAMC,KAAKC,IAAIlb,EAAK0B,QAAQzK,OAAQiL,EAAGR,QAAQzK,QACrD,IAAK,IAAID,EAAI,EAAGA,EAAIgkB,EAAKhkB,IAAK,CAC1B,MAAMmkB,EAAanb,EAAK0B,QAAQ1K,GAC5BmkB,IACIjZ,EAAGR,QAAQpD,QAAQ6c,GAAc,EACjCtC,EAAerS,KAAK2U,GAEpBrC,EAAgBtS,KAAK2U,IAE7B,MAAMC,EAAWlZ,EAAGR,QAAQ1K,GACxBokB,GAEIpb,EAAK0B,QAAQpD,QAAQ8c,GAAY,GACjCrC,EAAgBvS,KAAK4U,GAGjC,MAAO,CAACvC,EAAgBC,EAAiBC,K,mlCCnqF7C,MAAMsC,EAAY,IAAIC,QAChBC,EAAc,GACpB,IAAIC,EACJ,MAAMC,EAAc3c,OAA6D,IAC3E4c,EAAsB5c,OAAqE,IACjG,SAAS6c,EAASphB,GACd,OAAOA,IAAuB,IAAjBA,EAAGqhB,UAEpB,SAAS,EAAOrhB,EAAIkP,EAAU,QACtBkS,EAASphB,KACTA,EAAKA,EAAGshB,KAEZ,MAAMC,EAASC,EAAqBxhB,EAAIkP,GAIxC,OAHKA,EAAQuS,MACTF,IAEGA,EAEX,SAASG,EAAKH,GACNA,EAAOI,SACP,EAAQJ,GACJA,EAAOrS,QAAQ0S,QACfL,EAAOrS,QAAQ0S,SAEnBL,EAAOI,QAAS,GAGxB,IAAIE,EAAM,EACV,SAASL,EAAqBxhB,EAAIkP,GAC9B,MAAMqS,EAAS,WACX,IAAKA,EAAOI,OACR,OAAOzS,EAAQ4S,eAAY/T,EAAY/N,IAE3C,IAAKghB,EAAYe,SAASR,GAAS,CAC/B,EAAQA,GACR,IAII,OAHAS,IACAhB,EAAY/U,KAAKsV,GACjBN,EAAeM,EACRvhB,IAEX,QACIghB,EAAYvV,MACZwW,IACAhB,EAAeD,EAAYA,EAAYtkB,OAAS,MAU5D,OANA6kB,EAAOW,GAAKL,IACZN,EAAOF,WAAY,EACnBE,EAAOI,QAAS,EAChBJ,EAAOD,IAAMthB,EACbuhB,EAAOY,KAAO,GACdZ,EAAOrS,QAAUA,EACVqS,EAEX,SAAS,EAAQA,GACb,MAAM,KAAEY,GAASZ,EACjB,GAAIY,EAAKzlB,OAAQ,CACb,IAAK,IAAID,EAAI,EAAGA,EAAI0lB,EAAKzlB,OAAQD,IAC7B0lB,EAAK1lB,GAAGgO,OAAO8W,GAEnBY,EAAKzlB,OAAS,GAGtB,IAAI0lB,GAAc,EAClB,MAAMC,EAAa,GACnB,SAASC,IACLD,EAAWpW,KAAKmW,GAChBA,GAAc,EAElB,SAASJ,IACLK,EAAWpW,KAAKmW,GAChBA,GAAc,EAElB,SAASH,IACL,MAAMM,EAAOF,EAAW5W,MACxB2W,OAAuBrU,IAATwU,GAA4BA,EAE9C,SAASC,EAAMlI,EAAQ9O,EAAMvN,GACzB,IAAKmkB,QAAgCrU,IAAjBkT,EAChB,OAEJ,IAAIwB,EAAU3B,EAAUtW,IAAI8P,GACvBmI,GACD3B,EAAUniB,IAAI2b,EAASmI,EAAU,IAAItY,KAEzC,IAAIuY,EAAMD,EAAQjY,IAAIvM,GACjBykB,GACDD,EAAQ9jB,IAAIV,EAAMykB,EAAM,IAAIhD,KAE3BgD,EAAIC,IAAI1B,KACTyB,EAAIhM,IAAIuK,GACRA,EAAakB,KAAKlW,KAAKyW,IAW/B,SAASE,EAAQtI,EAAQ9O,EAAMvN,EAAK4kB,EAAUjhB,EAAUkhB,GACpD,MAAML,EAAU3B,EAAUtW,IAAI8P,GAC9B,IAAKmI,EAED,OAEJ,MAAMM,EAAU,IAAIrD,IACdhJ,EAAOsM,IACLA,GACAA,EAAapgB,QAAQ2e,KACbA,IAAWN,GAAgBM,EAAOrS,QAAQ+T,eAC1CF,EAAQrM,IAAI6K,MAK5B,GAAa,UAAT/V,EAGAiX,EAAQ7f,QAAQ8T,QAEf,GAAY,WAARzY,GAAoB,eAAQqc,GACjCmI,EAAQ7f,QAAQ,CAAC8f,EAAKzkB,MACN,WAARA,GAAoBA,GAAO4kB,IAC3BnM,EAAIgM,UAUZ,YAJY,IAARzkB,GACAyY,EAAI+L,EAAQjY,IAAIvM,IAGZuN,GACJ,IAAK,MACI,eAAQ8O,GAMJ,eAAarc,IAElByY,EAAI+L,EAAQjY,IAAI,YAPhBkM,EAAI+L,EAAQjY,IAAI0W,IACZ,eAAM5G,IACN5D,EAAI+L,EAAQjY,IAAI2W,KAOxB,MACJ,IAAK,SACI,eAAQ7G,KACT5D,EAAI+L,EAAQjY,IAAI0W,IACZ,eAAM5G,IACN5D,EAAI+L,EAAQjY,IAAI2W,KAGxB,MACJ,IAAK,MACG,eAAM7G,IACN5D,EAAI+L,EAAQjY,IAAI0W,IAEpB,MAGZ,MAAMgC,EAAO3B,IAYLA,EAAOrS,QAAQ4S,UACfP,EAAOrS,QAAQ4S,UAAUP,GAGzBA,KAGRwB,EAAQngB,QAAQsgB,GAGpB,MAAMC,EAAiB,IAAIzD,IAAIrjB,OAAO+mB,oBAAoB7e,QACrDnI,IAAI6B,GAAOsG,OAAOtG,IAClBwV,OAAO,SACN,EAAoB4P,IACpBC,EAA2BD,GAAa,GAAO,GAC/CE,EAA4BF,GAAa,GACzCG,EAAmCH,GAAa,GAAM,GACtDI,EAAwB,GA4B9B,SAASJ,EAAaK,GAAa,EAAOC,GAAU,GAChD,OAAO,SAAarJ,EAAQrc,EAAK2lB,GAC7B,GAAY,mBAAR3lB,EACA,OAAQylB,EAEP,GAAY,mBAARzlB,EACL,OAAOylB,EAEN,GAAY,YAARzlB,GACL2lB,KAAcF,EAAaG,GAAcC,IAAatZ,IAAI8P,GAC1D,OAAOA,EAEX,MAAMyJ,EAAgB,eAAQzJ,GAC9B,GAAIyJ,GAAiB,eAAON,EAAuBxlB,GAC/C,OAAO+lB,QAAQxZ,IAAIiZ,EAAuBxlB,EAAK2lB,GAEnD,MAAMvhB,EAAM2hB,QAAQxZ,IAAI8P,EAAQrc,EAAK2lB,GAC/BK,EAAc,eAAShmB,GAC7B,GAAIgmB,EACEd,EAAeR,IAAI1kB,GACX,cAARA,GAA+B,cAARA,EACzB,OAAOoE,EAKX,GAHKqhB,GACDlB,EAAMlI,EAAQ,MAAiBrc,GAE/B0lB,EACA,OAAOthB,EAEX,GAAI6hB,GAAM7hB,GAAM,CAEZ,MAAM8hB,GAAgBJ,IAAkB,eAAa9lB,GACrD,OAAOkmB,EAAe9hB,EAAIxC,MAAQwC,EAEtC,OAAI,eAASA,GAIFqhB,EAAaU,GAAS/hB,GAAOgiB,GAAShiB,GAE1CA,GAnEf,CAAC,WAAY,UAAW,eAAeO,QAAQ3E,IAC3C,MAAMqmB,EAASjlB,MAAMD,UAAUnB,GAC/BwlB,EAAsBxlB,GAAO,YAAauH,GACtC,MAAMjH,EAAMgmB,GAAMvE,MAClB,IAAK,IAAIvjB,EAAI,EAAG+nB,EAAIxE,KAAKtjB,OAAQD,EAAI+nB,EAAG/nB,IACpC+lB,EAAMjkB,EAAK,MAAiB9B,EAAI,IAGpC,MAAM4F,EAAMiiB,EAAO1e,MAAMrH,EAAKiH,GAC9B,OAAa,IAATnD,IAAsB,IAARA,EAEPiiB,EAAO1e,MAAMrH,EAAKiH,EAAKpJ,IAAImoB,KAG3BliB,KAInB,CAAC,OAAQ,MAAO,QAAS,UAAW,UAAUO,QAAQ3E,IAClD,MAAMqmB,EAASjlB,MAAMD,UAAUnB,GAC/BwlB,EAAsBxlB,GAAO,YAAauH,GACtC8c,IACA,MAAMjgB,EAAMiiB,EAAO1e,MAAMoa,KAAMxa,GAE/B,OADAwc,IACO3f,KA8Cf,MAAM,EAAoBoiB,IACpBC,EAA2BD,GAAa,GAC9C,SAASA,EAAad,GAAU,GAC5B,OAAO,SAAarJ,EAAQrc,EAAK4B,EAAO+jB,GACpC,MAAMhiB,EAAW0Y,EAAOrc,GACxB,IAAK0lB,IACD9jB,EAAQ0kB,GAAM1kB,IACT,eAAQya,IAAW4J,GAAMtiB,KAAcsiB,GAAMrkB,IAE9C,OADA+B,EAAS/B,MAAQA,GACV,EAGf,MAAM8kB,EAAS,eAAQrK,IAAW,eAAarc,GACzC2mB,OAAO3mB,GAAOqc,EAAO5d,OACrB,eAAO4d,EAAQrc,GACf4mB,EAASb,QAAQrlB,IAAI2b,EAAQrc,EAAK4B,EAAO+jB,GAU/C,OARItJ,IAAWiK,GAAMX,KACZe,EAGI,eAAW9kB,EAAO+B,IACvBghB,EAAQtI,EAAQ,MAAiBrc,EAAK4B,EAAO+B,GAH7CghB,EAAQtI,EAAQ,MAAiBrc,EAAK4B,IAMvCglB,GAGf,SAASC,EAAexK,EAAQrc,GAC5B,MAAM0mB,EAAS,eAAOrK,EAAQrc,GACxB2D,EAAW0Y,EAAOrc,GAClB4mB,EAASb,QAAQc,eAAexK,EAAQrc,GAI9C,OAHI4mB,GAAUF,GACV/B,EAAQtI,EAAQ,SAAuBrc,OAAK8P,EAAWnM,GAEpDijB,EAEX,SAAS,EAAIvK,EAAQrc,GACjB,MAAM4mB,EAASb,QAAQrB,IAAIrI,EAAQrc,GAInC,OAHK,eAASA,IAASklB,EAAeR,IAAI1kB,IACtCukB,EAAMlI,EAAQ,MAAiBrc,GAE5B4mB,EAEX,SAASE,EAAQzK,GAEb,OADAkI,EAAMlI,EAAQ,UAAyB4G,GAChC8C,QAAQe,QAAQzK,GAE3B,MAAM0K,EAAkB,CACpBxa,IAAG,EACH7L,IAAG,EACHmmB,iBACAnC,IAAG,EACHoC,WAEEE,EAAmB,CACrBza,IAAK+Y,EACL,IAAIjJ,EAAQrc,GAIR,OAAO,GAEX,eAAeqc,EAAQrc,GAInB,OAAO,IAGTinB,EAA0B,eAAO,GAAIF,EAAiB,CACxDxa,IAAK8Y,EACL3kB,IAAK+lB,IASHS,GAJ0B,eAAO,GAAIF,EAAkB,CACzDza,IAAKgZ,IAGW3jB,GAAU,eAASA,GAASwkB,GAASxkB,GAASA,GAC5DulB,EAAcvlB,GAAU,eAASA,GAASukB,GAASvkB,GAASA,EAC5DwlB,EAAaxlB,GAAUA,EACvBylB,EAAYjP,GAAM2N,QAAQuB,eAAelP,GAC/C,SAASmP,EAAMlL,EAAQrc,EAAKylB,GAAa,EAAO+B,GAAY,GAGxDnL,EAASA,EAAO,WAChB,MAAMoL,EAAYnB,GAAMjK,GAClBqL,EAASpB,GAAMtmB,GACjBA,IAAQ0nB,IACPjC,GAAclB,EAAMkD,EAAW,MAAiBznB,IAEpDylB,GAAclB,EAAMkD,EAAW,MAAiBC,GACjD,MAAM,IAAEhD,GAAQ2C,EAASI,GACnBE,EAAOlC,EAAa0B,EAAaK,EAAYJ,EAAYF,EAC/D,OAAIxC,EAAI7iB,KAAK4lB,EAAWznB,GACb2nB,EAAKtL,EAAO9P,IAAIvM,IAElB0kB,EAAI7iB,KAAK4lB,EAAWC,GAClBC,EAAKtL,EAAO9P,IAAImb,SADtB,EAIT,SAASE,EAAM5nB,EAAKylB,GAAa,GAC7B,MAAMpJ,EAAS0F,KAAK,WACd0F,EAAYnB,GAAMjK,GAClBqL,EAASpB,GAAMtmB,GAKrB,OAJIA,IAAQ0nB,IACPjC,GAAclB,EAAMkD,EAAW,MAAiBznB,IAEpDylB,GAAclB,EAAMkD,EAAW,MAAiBC,GAC1C1nB,IAAQ0nB,EACTrL,EAAOqI,IAAI1kB,GACXqc,EAAOqI,IAAI1kB,IAAQqc,EAAOqI,IAAIgD,GAExC,SAASriB,EAAKgX,EAAQoJ,GAAa,GAG/B,OAFApJ,EAASA,EAAO,YACfoJ,GAAclB,EAAM+B,GAAMjK,GAAS,UAAyB4G,GACtD8C,QAAQxZ,IAAI8P,EAAQ,OAAQA,GAEvC,SAAS,EAAIza,GACTA,EAAQ0kB,GAAM1kB,GACd,MAAMya,EAASiK,GAAMvE,MACf8F,EAAQR,EAAShL,GACjBqK,EAASmB,EAAMnD,IAAI7iB,KAAKwa,EAAQza,GAChCglB,EAASvK,EAAO5D,IAAI7W,GAI1B,OAHK8kB,GACD/B,EAAQtI,EAAQ,MAAiBza,EAAOA,GAErCglB,EAEX,SAASkB,EAAM9nB,EAAK4B,GAChBA,EAAQ0kB,GAAM1kB,GACd,MAAMya,EAASiK,GAAMvE,OACf,IAAE2C,EAAG,IAAEnY,GAAQ8a,EAAShL,GAC9B,IAAIqK,EAAShC,EAAI7iB,KAAKwa,EAAQrc,GACzB0mB,IACD1mB,EAAMsmB,GAAMtmB,GACZ0mB,EAAShC,EAAI7iB,KAAKwa,EAAQrc,IAK9B,MAAM2D,EAAW4I,EAAI1K,KAAKwa,EAAQrc,GAC5B4mB,EAASvK,EAAO3b,IAAIV,EAAK4B,GAO/B,OANK8kB,EAGI,eAAW9kB,EAAO+B,IACvBghB,EAAQtI,EAAQ,MAAiBrc,EAAK4B,EAAO+B,GAH7CghB,EAAQtI,EAAQ,MAAiBrc,EAAK4B,GAKnCglB,EAEX,SAASmB,EAAY/nB,GACjB,MAAMqc,EAASiK,GAAMvE,OACf,IAAE2C,EAAG,IAAEnY,GAAQ8a,EAAShL,GAC9B,IAAIqK,EAAShC,EAAI7iB,KAAKwa,EAAQrc,GACzB0mB,IACD1mB,EAAMsmB,GAAMtmB,GACZ0mB,EAAShC,EAAI7iB,KAAKwa,EAAQrc,IAK9B,MAAM2D,EAAW4I,EAAMA,EAAI1K,KAAKwa,EAAQrc,QAAO8P,EAEzC8W,EAASvK,EAAO7P,OAAOxM,GAI7B,OAHI0mB,GACA/B,EAAQtI,EAAQ,SAAuBrc,OAAK8P,EAAWnM,GAEpDijB,EAEX,SAASoB,IACL,MAAM3L,EAASiK,GAAMvE,MACfkG,EAA2B,IAAhB5L,EAAOhX,KAClBwf,OAIA/U,EAEA8W,EAASvK,EAAO2L,QAItB,OAHIC,GACAtD,EAAQtI,EAAQ,aAAqBvM,OAAWA,EAAW+U,GAExD+B,EAEX,SAASsB,EAAczC,EAAY+B,GAC/B,OAAO,SAAiBzZ,EAAUoa,GAC9B,MAAMC,EAAWrG,KACX1F,EAAS+L,EAAS,WAClBX,EAAYnB,GAAMjK,GAClBsL,EAAOlC,EAAa0B,EAAaK,EAAYJ,EAAYF,EAE/D,OADCzB,GAAclB,EAAMkD,EAAW,UAAyBxE,GAClD5G,EAAO1X,QAAQ,CAAC/C,EAAO5B,IAInB+N,EAASlM,KAAKsmB,EAASR,EAAK/lB,GAAQ+lB,EAAK3nB,GAAMooB,KAIlE,SAASC,EAAqBhC,EAAQZ,EAAY+B,GAC9C,OAAO,YAAajgB,GAChB,MAAM8U,EAAS0F,KAAK,WACd0F,EAAYnB,GAAMjK,GAClBiM,EAAc,eAAMb,GACpBc,EAAoB,YAAXlC,GAAyBA,IAAW/f,OAAOkiB,UAAYF,EAChEG,EAAuB,SAAXpC,GAAqBiC,EACjCI,EAAgBrM,EAAOgK,MAAW9e,GAClCogB,EAAOlC,EAAa0B,EAAaK,EAAYJ,EAAYF,EAK/D,OAJCzB,GACGlB,EAAMkD,EAAW,UAAyBgB,EAAYvF,EAAsBD,GAGzE,CAEH,OACI,MAAM,MAAErhB,EAAK,KAAE+mB,GAASD,EAAczP,OACtC,OAAO0P,EACD,CAAE/mB,QAAO+mB,QACT,CACE/mB,MAAO2mB,EAAS,CAACZ,EAAK/lB,EAAM,IAAK+lB,EAAK/lB,EAAM,KAAO+lB,EAAK/lB,GACxD+mB,SAIZ,CAACriB,OAAOkiB,YACJ,OAAOzG,QAKvB,SAAS6G,EAAqBrb,GAC1B,OAAO,YAAahG,GAKhB,MAAgB,WAATgG,GAAyCwU,MAGxD,MAAM8G,EAA0B,CAC5B,IAAI7oB,GACA,OAAOunB,EAAMxF,KAAM/hB,IAEvB,WACI,OAAOqF,EAAK0c,OAEhB2C,IAAKkD,EACLnP,IAAG,EACH/X,IAAKonB,EACLtb,OAAQub,EACRC,QACArjB,QAASujB,GAAc,GAAO,IAE5BY,EAA0B,CAC5B,IAAI9oB,GACA,OAAOunB,EAAMxF,KAAM/hB,GAAK,GAAO,IAEnC,WACI,OAAOqF,EAAK0c,OAEhB2C,IAAKkD,EACLnP,IAAG,EACH/X,IAAKonB,EACLtb,OAAQub,EACRC,QACArjB,QAASujB,GAAc,GAAO,IAE5Ba,GAA2B,CAC7B,IAAI/oB,GACA,OAAOunB,EAAMxF,KAAM/hB,GAAK,IAE5B,WACI,OAAOqF,EAAK0c,MAAM,IAEtB,IAAI/hB,GACA,OAAO4nB,EAAM/lB,KAAKkgB,KAAM/hB,GAAK,IAEjCyY,IAAKmQ,EAAqB,OAC1BloB,IAAKkoB,EAAqB,OAC1Bpc,OAAQoc,EAAqB,UAC7BZ,MAAOY,EAAqB,SAC5BjkB,QAASujB,GAAc,GAAM,IAE3Bc,GAAkB,CAAC,OAAQ,SAAU,UAAW1iB,OAAOkiB,UAM7D,SAASS,GAA4BxD,EAAYC,GAC7C,MAAMwD,EAAmBxD,EACnBoD,EACArD,EACIsD,GACAF,EACV,MAAO,CAACxM,EAAQrc,EAAK2lB,IACL,mBAAR3lB,GACQylB,EAEK,mBAARzlB,EACEylB,EAEM,YAARzlB,EACEqc,EAEJ0J,QAAQxZ,IAAI,eAAO2c,EAAkBlpB,IAAQA,KAAOqc,EACrD6M,EACA7M,EAAQrc,EAAK2lB,GAvB3BqD,GAAgBrkB,QAAQ0hB,IACpBwC,EAAwBxC,GAAUgC,EAAqBhC,GAAQ,GAAO,GACtE0C,GAAyB1C,GAAUgC,EAAqBhC,GAAQ,GAAM,GACtEyC,EAAwBzC,GAAUgC,EAAqBhC,GAAQ,GAAO,KAuB1E,MAAM8C,GAA4B,CAC9B5c,IAAK0c,IAA4B,GAAO,IAEtCG,GAA4B,CAC9B7c,IAAK0c,IAA4B,GAAO,IAEtCI,GAA6B,CAC/B9c,IAAK0c,IAA4B,GAAM,IAc3C,MAAMpD,GAAc,IAAI/C,QAClB8C,GAAc,IAAI9C,QACxB,SAASwG,GAAcC,GACnB,OAAQA,GACJ,IAAK,SACL,IAAK,QACD,OAAO,EACX,IAAK,MACL,IAAK,MACL,IAAK,UACL,IAAK,UACD,OAAO,EACX,QACI,OAAO,GAGnB,SAASC,GAAc5nB,GACnB,OAAOA,EAAM,cAA2BxD,OAAOqrB,aAAa7nB,GACtD,EACA0nB,GAAc,eAAU1nB,IAElC,SAASwkB,GAAS/J,GAEd,OAAIA,GAAUA,EAAO,kBACVA,EAEJqN,GAAqBrN,GAAQ,EAAO0K,EAAiBoC,IAKhE,SAASQ,GAAgBtN,GACrB,OAAOqN,GAAqBrN,GAAQ,EAAO4K,EAAyBmC,IAExE,SAASjD,GAAS9J,GACd,OAAOqN,GAAqBrN,GAAQ,EAAM2K,EAAkBqC,IAShE,SAASK,GAAqBrN,EAAQoJ,EAAYmE,EAAcC,GAC5D,IAAK,eAASxN,GAIV,OAAOA,EAIX,GAAIA,EAAO,cACLoJ,IAAcpJ,EAAO,mBACvB,OAAOA,EAGX,MAAMyN,EAAWrE,EAAaG,GAAcC,GACtCkE,EAAgBD,EAASvd,IAAI8P,GACnC,GAAI0N,EACA,OAAOA,EAGX,MAAMC,EAAaR,GAAcnN,GACjC,GAAmB,IAAf2N,EACA,OAAO3N,EAEX,MAAM4N,EAAQ,IAAIC,MAAM7N,EAAuB,IAAf2N,EAAoCH,EAAqBD,GAEzF,OADAE,EAASppB,IAAI2b,EAAQ4N,GACdA,EAEX,SAASE,GAAWvoB,GAChB,OAAI,GAAWA,GACJuoB,GAAWvoB,EAAM,eAElBA,IAASA,EAAM,mBAE7B,SAAS,GAAWA,GAChB,SAAUA,IAASA,EAAM,mBAE7B,SAASwoB,GAAQxoB,GACb,OAAOuoB,GAAWvoB,IAAU,GAAWA,GAE3C,SAAS0kB,GAAM8B,GACX,OAASA,GAAY9B,GAAM8B,EAAS,aAA0BA,EAOlE,MAAMiC,GAAW3rB,GAAQ,eAASA,GAAO0nB,GAAS1nB,GAAOA,EACzD,SAASunB,GAAMqE,GACX,OAAOpP,QAAQoP,IAAqB,IAAhBA,EAAEC,WAE1B,SAAS,GAAI3oB,GACT,OAAO4oB,GAAU5oB,GAErB,SAAS6oB,GAAW7oB,GAChB,OAAO4oB,GAAU5oB,GAAO,GAE5B,MAAM,GACF,YAAY8oB,EAAWC,GAAW,GAC9B5I,KAAK2I,UAAYA,EACjB3I,KAAK4I,SAAWA,EAChB5I,KAAKwI,WAAY,EACjBxI,KAAK6I,OAASD,EAAWD,EAAYL,GAAQK,GAEjD,YAEI,OADAnG,EAAM+B,GAAMvE,MAAO,MAAiB,SAC7BA,KAAK6I,OAEhB,UAAUC,GACF,eAAWvE,GAAMuE,GAAS9I,KAAK2I,aAC/B3I,KAAK2I,UAAYG,EACjB9I,KAAK6I,OAAS7I,KAAK4I,SAAWE,EAASR,GAAQQ,GAC/ClG,EAAQ2B,GAAMvE,MAAO,MAAiB,QAAS8I,KAI3D,SAASL,GAAUtS,EAAUwN,GAAU,GACnC,OAAIO,GAAM/N,GACCA,EAEJ,IAAI,GAAQA,EAAUwN,GAKjC,SAASoF,GAAM7M,GACX,OAAOgI,GAAMhI,GAAOA,EAAIrc,MAAQqc,EAEpC,MAAM8M,GAAwB,CAC1Bxe,IAAK,CAAC8P,EAAQrc,EAAK2lB,IAAamF,GAAM/E,QAAQxZ,IAAI8P,EAAQrc,EAAK2lB,IAC/DjlB,IAAK,CAAC2b,EAAQrc,EAAK4B,EAAO+jB,KACtB,MAAMhiB,EAAW0Y,EAAOrc,GACxB,OAAIimB,GAAMtiB,KAAcsiB,GAAMrkB,IAC1B+B,EAAS/B,MAAQA,GACV,GAGAmkB,QAAQrlB,IAAI2b,EAAQrc,EAAK4B,EAAO+jB,KAInD,SAASqF,GAAUC,GACf,OAAOd,GAAWc,GACZA,EACA,IAAIf,MAAMe,EAAgBF,IAgDpC,MAAMG,GACF,YAAYC,EAAQC,EAAS3F,GACzB1D,KAAKqJ,QAAUA,EACfrJ,KAAKsJ,QAAS,EACdtJ,KAAKwI,WAAY,EACjBxI,KAAKuB,OAAS,EAAO6H,EAAQ,CACzB3H,MAAM,EACNK,UAAW,KACF9B,KAAKsJ,SACNtJ,KAAKsJ,QAAS,EACd1G,EAAQ2B,GAAMvE,MAAO,MAAiB,aAIlDA,KAAK,kBAAsC0D,EAE/C,YAMI,OALI1D,KAAKsJ,SACLtJ,KAAK6I,OAAS7I,KAAKuB,SACnBvB,KAAKsJ,QAAS,GAElB9G,EAAM+B,GAAMvE,MAAO,MAAiB,SAC7BA,KAAK6I,OAEhB,UAAUhG,GACN7C,KAAKqJ,QAAQxG,IAGrB,SAAS0G,GAASC,GACd,IAAIJ,EACAK,EAaJ,OAZI,eAAWD,IACXJ,EAASI,EACTC,EAIM,SAGNL,EAASI,EAAgBhf,IACzBif,EAASD,EAAgB7qB,KAEtB,IAAIwqB,GAAgBC,EAAQK,EAAQ,eAAWD,KAAqBA,EAAgB7qB,K,iBCt0B/F,MAAM+qB,GAAQ,GAOd,SAASpkB,GAAKC,KAAQC,GAGlB8c,IACA,MAAMjH,EAAWqO,GAAMhtB,OAASgtB,GAAMA,GAAMhtB,OAAS,GAAG+X,UAAY,KAC9DkV,EAAiBtO,GAAYA,EAASuO,WAAW3J,OAAO4J,YACxDC,EAAQC,KACd,GAAIJ,EACAK,GAAsBL,EAAgBtO,EAAU,GAA2B,CACvE9V,EAAMC,EAAKyC,KAAK,IAChBoT,GAAYA,EAAS6M,MACrB4B,EACK1tB,IAAI,EAAG4f,WAAY,OAAOiO,GAAoB5O,EAAUW,EAAMxQ,UAC9DvD,KAAK,MACV6hB,QAGH,CACD,MAAMI,EAAW,CAAC,eAAe3kB,KAAUC,GAEvCskB,EAAMptB,QAGNwtB,EAASje,KAAK,QAASke,GAAYL,IAEvCnkB,QAAQL,QAAQ4kB,GAEpBjI,IAEJ,SAAS8H,KACL,IAAIK,EAAeV,GAAMA,GAAMhtB,OAAS,GACxC,IAAK0tB,EACD,MAAO,GAKX,MAAMC,EAAkB,GACxB,MAAOD,EAAc,CACjB,MAAM7H,EAAO8H,EAAgB,GACzB9H,GAAQA,EAAKvG,QAAUoO,EACvB7H,EAAK+H,eAGLD,EAAgBpe,KAAK,CACjB+P,MAAOoO,EACPE,aAAc,IAGtB,MAAMC,EAAiBH,EAAa3V,WAAa2V,EAAa3V,UAAU/C,OACxE0Y,EAAeG,GAAkBA,EAAevO,MAEpD,OAAOqO,EAGX,SAASF,GAAYL,GACjB,MAAMU,EAAO,GAIb,OAHAV,EAAMlnB,QAAQ,CAAC6nB,EAAOhuB,KAClB+tB,EAAKve,QAAe,IAANxP,EAAU,GAAK,CAAC,SAAWiuB,GAAiBD,MAEvDD,EAEX,SAASE,IAAiB,MAAE1O,EAAK,aAAEsO,IAC/B,MAAMK,EAAUL,EAAe,EAAI,QAAQA,qBAAkC,GACvEM,IAAS5O,EAAMvH,WAAsC,MAA1BuH,EAAMvH,UAAU/C,OAC3CmZ,EAAO,QAAQZ,GAAoBjO,EAAMvH,UAAWuH,EAAMxQ,KAAMof,GAChEE,EAAQ,IAAMH,EACpB,OAAO3O,EAAM9H,MACP,CAAC2W,KAASE,GAAY/O,EAAM9H,OAAQ4W,GACpC,CAACD,EAAOC,GAGlB,SAASC,GAAY7W,GACjB,MAAM7R,EAAM,GACNtE,EAAO1B,OAAO0B,KAAKmW,GAOzB,OANAnW,EAAK6C,MAAM,EAAG,GAAGgC,QAAQ3E,IACrBoE,EAAI4J,QAAQ+e,GAAW/sB,EAAKiW,EAAMjW,OAElCF,EAAKrB,OAAS,GACd2F,EAAI4J,KAAK,QAEN5J,EAGX,SAAS2oB,GAAW/sB,EAAK4B,EAAOyhB,GAC5B,OAAI,gBAASzhB,IACTA,EAAQqD,KAAKC,UAAUtD,GAChByhB,EAAMzhB,EAAQ,CAAC,GAAG5B,KAAO4B,MAEV,kBAAVA,GACK,mBAAVA,GACE,MAATA,EACOyhB,EAAMzhB,EAAQ,CAAC,GAAG5B,KAAO4B,KAE3BqkB,GAAMrkB,IACXA,EAAQmrB,GAAW/sB,EAAKsmB,GAAM1kB,EAAMA,QAAQ,GACrCyhB,EAAMzhB,EAAQ,CAAI5B,EAAH,QAAe4B,EAAO,MAEvC,gBAAWA,GACT,CAAC,GAAG5B,OAAS4B,EAAMmD,KAAO,IAAInD,EAAMmD,QAAU,OAGrDnD,EAAQ0kB,GAAM1kB,GACPyhB,EAAMzhB,EAAQ,CAAI5B,EAAH,IAAW4B,IAmCzC,SAASmqB,GAAsBhqB,EAAIqb,EAAU7P,EAAMhG,GAC/C,IAAInD,EACJ,IACIA,EAAMmD,EAAOxF,KAAMwF,GAAQxF,IAE/B,MAAOgN,GACHie,GAAYje,EAAKqO,EAAU7P,GAE/B,OAAOnJ,EAEX,SAAS6oB,GAA2BlrB,EAAIqb,EAAU7P,EAAMhG,GACpD,GAAI,gBAAWxF,GAAK,CAChB,MAAMqC,EAAM2nB,GAAsBhqB,EAAIqb,EAAU7P,EAAMhG,GAMtD,OALInD,GAAO,gBAAUA,IACjBA,EAAI8B,MAAM6I,IACNie,GAAYje,EAAKqO,EAAU7P,KAG5BnJ,EAEX,MAAMoB,EAAS,GACf,IAAK,IAAIhH,EAAI,EAAGA,EAAIuD,EAAGtD,OAAQD,IAC3BgH,EAAOwI,KAAKif,GAA2BlrB,EAAGvD,GAAI4e,EAAU7P,EAAMhG,IAElE,OAAO/B,EAEX,SAASwnB,GAAYje,EAAKqO,EAAU7P,EAAM2f,GAAa,GACnD,MAAMC,EAAe/P,EAAWA,EAASW,MAAQ,KACjD,GAAIX,EAAU,CACV,IAAIgQ,EAAMhQ,EAAS3J,OAEnB,MAAM4Z,EAAkBjQ,EAAS6M,MAE3BqD,EAA+E/f,EACrF,MAAO6f,EAAK,CACR,MAAMG,EAAqBH,EAAII,GAC/B,GAAID,EACA,IAAK,IAAI/uB,EAAI,EAAGA,EAAI+uB,EAAmB9uB,OAAQD,IAC3C,GAAI+uB,EAAmB/uB,GAAGuQ,EAAKse,EAAiBC,GAC5C,OAIZF,EAAMA,EAAI3Z,OAGd,MAAMga,EAAkBrQ,EAASuO,WAAW3J,OAAO0L,aACnD,GAAID,EAEA,YADA1B,GAAsB0B,EAAiB,KAAM,GAA4B,CAAC1e,EAAKse,EAAiBC,IAIxGK,GAAS5e,EAAKxB,EAAM4f,EAAcD,GAEtC,SAASS,GAAS5e,EAAKxB,EAAM4f,EAAcD,GAAa,GAoBhDxlB,QAAQ4I,MAAMvB,GAItB,IAAI6e,IAAa,EACbC,IAAiB,EACrB,MAAMC,GAAQ,GACd,IAAIC,GAAa,EACjB,MAAMC,GAAqB,GAC3B,IAAIC,GAAoB,KACpBC,GAAgB,EACpB,MAAMC,GAAsB,GAC5B,IAAIC,GAAqB,KACrBC,GAAiB,EACrB,MAAMC,GAAkBvV,QAAQzD,UAChC,IAAIiZ,GAAsB,KACtBC,GAA2B,KAE/B,SAASC,GAAS1sB,GACd,MAAM2sB,EAAIH,IAAuBD,GACjC,OAAOvsB,EAAK2sB,EAAEzoB,KAAKlE,GAAM2sB,EAE7B,SAASC,GAASC,GAORd,GAAMrvB,QACPqvB,GAAMhK,SAAS8K,EAAKhB,IAAcgB,EAAI5J,aAAe+I,GAAa,EAAIA,KACvEa,IAAQJ,KACRV,GAAM9f,KAAK4gB,GACXC,MAGR,SAASA,KACAjB,IAAeC,KAChBA,IAAiB,EACjBU,GAAsBD,GAAgBroB,KAAK6oB,KAGnD,SAASC,GAAcH,GACnB,MAAMpwB,EAAIsvB,GAAMhoB,QAAQ8oB,GACpBpwB,GAAK,IACLsvB,GAAMtvB,GAAK,MAGnB,SAASwwB,GAAQC,EAAIC,EAAaC,EAAcjhB,GACvC,gBAAQ+gB,GAUTE,EAAanhB,QAAQihB,GAThBC,GACAA,EAAYpL,SAASmL,EAAIA,EAAGjK,aAAe9W,EAAQ,EAAIA,IACxDihB,EAAanhB,KAAKihB,GAS1BJ,KAEJ,SAASO,GAAgBH,GACrBD,GAAQC,EAAIhB,GAAmBD,GAAoBE,IAEvD,SAASmB,GAAiBJ,GACtBD,GAAQC,EAAIb,GAAoBD,GAAqBE,IAEzD,SAASiB,GAAiBC,EAAMC,EAAY,MACxC,GAAIxB,GAAmBvvB,OAAQ,CAO3B,IANA+vB,GAA2BgB,EAC3BvB,GAAoB,IAAI,IAAIxM,IAAIuM,KAChCA,GAAmBvvB,OAAS,EAIvByvB,GAAgB,EAAGA,GAAgBD,GAAkBxvB,OAAQyvB,KAI9DD,GAAkBC,MAEtBD,GAAoB,KACpBC,GAAgB,EAChBM,GAA2B,KAE3Bc,GAAiBC,EAAMC,IAG/B,SAASC,GAAkBF,GACvB,GAAIpB,GAAoB1vB,OAAQ,CAC5B,MAAMixB,EAAU,IAAI,IAAIjO,IAAI0M,KAG5B,GAFAA,GAAoB1vB,OAAS,EAEzB2vB,GAEA,YADAA,GAAmBpgB,QAAQ0hB,GAQ/B,IALAtB,GAAqBsB,EAIrBtB,GAAmBuB,KAAK,CAACxwB,EAAGC,IAAMwwB,GAAMzwB,GAAKywB,GAAMxwB,IAC9CivB,GAAiB,EAAGA,GAAiBD,GAAmB3vB,OAAQ4vB,KAIjED,GAAmBC,MAEvBD,GAAqB,KACrBC,GAAiB,GAGzB,MAAMuB,GAAShB,GAAkB,MAAVA,EAAI3K,GAAa4L,IAAWjB,EAAI3K,GACvD,SAAS6K,GAAUS,GACf1B,IAAiB,EACjBD,IAAa,EAIb0B,GAAiBC,GAUjBzB,GAAM6B,KAAK,CAACxwB,EAAGC,IAAMwwB,GAAMzwB,GAAKywB,GAAMxwB,IACtC,IACI,IAAK2uB,GAAa,EAAGA,GAAaD,GAAMrvB,OAAQsvB,KAAc,CAC1D,MAAMa,EAAMd,GAAMC,IACda,GAIA7C,GAAsB6C,EAAK,KAAM,KAI7C,QACIb,GAAa,EACbD,GAAMrvB,OAAS,EACfgxB,GAAkBF,GAClB3B,IAAa,EACbW,GAAsB,MAGlBT,GAAMrvB,QAAU0vB,GAAoB1vB,SACpCqwB,GAAUS,IAyBK,IAAI9N,IAoBnB,IAAIvV,IAkIhB,SAAS,GAAKkR,EAAU0S,KAAUvoB,GAC9B,MAAM0O,EAAQmH,EAASW,MAAM9H,OAAS,QAwBtC,IAAI8Z,EAAc,KAAK,gBAAWD,GAC9BpX,EAAUzC,EAAM8Z,GAOpB,IAJKrX,GAAWoX,EAAM9uB,WAAW,aAC7B+uB,EAAc,KAAK,gBAAW,gBAAUD,IACxCpX,EAAUzC,EAAM8Z,KAEfrX,EAED,GADAA,EAAUzC,EAAM8Z,EAAc,QACzB3S,EAAS4S,SAGT,GAAI5S,EAAS4S,QAAQD,GACtB,YAHC3S,EAAS4S,QAAU,IAAID,IAAe,EAM3CrX,GACAuU,GAA2BvU,EAAS0E,EAAU,EAAiC7V,GAGvF,SAAS0oB,GAAsBvd,EAAMiZ,EAAYuE,GAAU,GACvD,MAAMC,EAAQxE,EAAW7J,IAAM6J,EAAW7J,IAAIsO,MAAQ,EAChDpuB,EAAQ0Q,EAAK2d,UAAY3d,EAAK2d,QAAU,IACxCC,EAAStuB,EAAMmuB,GACrB,QAAergB,IAAXwgB,EACA,OAAOA,EAEX,MAAMjN,EAAM3Q,EAAK6d,MACjB,IAAIlsB,EAAa,GAEbmsB,GAAa,EACjB,IAA4B,gBAAW9d,GAAO,CAC1C,MAAM+d,EAAepN,IACjBmN,GAAa,EACb,gBAAOnsB,EAAY4rB,GAAsB5M,EAAKsI,GAAY,MAEzDuE,GAAWvE,EAAW+E,OAAOjyB,QAC9BktB,EAAW+E,OAAO/rB,QAAQ8rB,GAE1B/d,EAAKie,SACLF,EAAY/d,EAAKie,SAEjBje,EAAKge,QACLhe,EAAKge,OAAO/rB,QAAQ8rB,GAG5B,OAAKpN,GAAQmN,GAGT,gBAAQnN,GACRA,EAAI1e,QAAQ3E,GAAQqE,EAAWrE,GAAO,MAGtC,gBAAOqE,EAAYgf,GAEfrhB,EAAMmuB,GAAS9rB,GARXrC,EAAMmuB,GAAS,KAa/B,SAASS,GAAe3f,EAASjR,GAC7B,SAAKiR,IAAY,gBAAKjR,MAGtBA,EAAMA,EAAIoC,QAAQ,QAAS,IACnB,gBAAO6O,EAASjR,EAAI,GAAGrB,cAAgBqB,EAAI2C,MAAM,KACrD,gBAAOsO,EAASjR,EAAI2C,MAAM,KAKlC,IAAIkuB,GAA2B,KAC/B,SAASC,GAA4B1T,GACjCyT,GAA2BzT,EAS/B,SAAS2T,GAAoB3T,GACzB,MAAQ7P,KAAMoQ,EAAS,MAAEI,EAAK,MAAEkM,EAAK,UAAE+G,EAAS,MAAE/a,EAAOgb,cAAeA,GAAa,MAAE7V,EAAK,MAAEC,EAAK,KAAE6V,EAAI,OAAEC,EAAM,YAAEC,EAAW,KAAEpiB,EAAI,WAAEqiB,EAAU,IAAEC,GAAQlU,EAC1J,IAAIwJ,EACJiK,GAA2BzT,EAI3B,IACI,IAAImU,EACJ,GAAsB,EAAlBxT,EAAMyT,UAAwC,CAG9C,MAAMC,EAAaT,GAAa/G,EAChCrD,EAAS8K,GAAeP,EAAOtvB,KAAK4vB,EAAYA,EAAYL,EAAanb,EAAOob,EAAYriB,EAAMsiB,IAClGC,EAAmBlW,MAElB,CAED,MAAM8V,EAASxT,EAEX,EAGJiJ,EAAS8K,GAAeP,EAAO1yB,OAAS,EAClC0yB,EAAOlb,EASH,CAAEoF,QAAOD,QAAO8V,SACpBC,EAAOlb,EAAO,OACpBsb,EAAmB5T,EAAU1H,MACvBoF,EACAsW,GAAyBtW,GAKnC,IAAIuW,EAAOhL,EAMX,IAA+B,IAA3BjJ,EAAUkU,cAA0BN,EAAkB,CACtD,MAAMzxB,EAAO1B,OAAO0B,KAAKyxB,IACnB,UAAEC,GAAcI,EAClB9xB,EAAKrB,SACW,EAAZ+yB,GACY,EAAZA,KACIP,GAAgBnxB,EAAK6c,KAAK,WAK1B4U,EAAmBO,GAAqBP,EAAkBN,IAE9DW,EAAOG,GAAWH,EAAML,IAsChCxT,EAAMiU,OAKNJ,EAAKI,KAAOjU,EAAMiU,MAGlBjU,EAAMkU,aAKNL,EAAKK,WAAalU,EAAMkU,YAMxBrL,EAASgL,EAGjB,MAAO7iB,GACHie,GAAYje,EAAKqO,EAAU,GAC3BwJ,EAASsL,GAAYC,IAGzB,OADAtB,GAA2B,KACpBjK,EAkCX,SAASwL,GAAiBxe,GACtB,MAAMye,EAAWze,EAAS4B,OAAO8c,KACpBC,GAAQD,IACbA,EAAM/kB,OAAS4kB,IACI,SAAnBG,EAAM1e,WAEd,OAA2B,IAApBye,EAAS5zB,QAAgB8zB,GAAQF,EAAS,IAAMA,EAAS,GAAK,KAEzE,MAAMV,GAA4BtW,IAC9B,IAAIjX,EACJ,IAAK,MAAMpE,KAAOqb,GACF,UAARrb,GAA2B,UAARA,GAAmB,gBAAKA,OAC1CoE,IAAQA,EAAM,KAAKpE,GAAOqb,EAAMrb,IAGzC,OAAOoE,GAEL0tB,GAAuB,CAACzW,EAAOpF,KACjC,MAAM7R,EAAM,GACZ,IAAK,MAAMpE,KAAOqb,EACT,gBAAgBrb,IAAUA,EAAI2C,MAAM,KAAMsT,IAC3C7R,EAAIpE,GAAOqb,EAAMrb,IAGzB,OAAOoE,GAQX,SAASouB,GAAsBC,EAAWC,EAAWC,GACjD,MAAQ1c,MAAO2c,EAAWhf,SAAUif,EAAY,UAAErc,GAAcic,GACxDxc,MAAO6c,EAAWlf,SAAUmf,EAAY,UAAEC,GAAcN,EAC1DnC,EAAQ/Z,EAAUyc,aAQxB,GAAIP,EAAUV,MAAQU,EAAUT,WAC5B,OAAO,EAEX,KAAIU,GAAaK,EAAY,GA2BzB,SAAIH,IAAgBE,GACXA,GAAiBA,EAAaG,UAInCN,IAAcE,IAGbF,GAGAE,GAGEK,GAAgBP,EAAWE,EAAWvC,KALhCuC,GAnCb,GAAgB,KAAZE,EAGA,OAAO,EAEX,GAAgB,GAAZA,EACA,OAAKJ,EAIEO,GAAgBP,EAAWE,EAAWvC,KAHhCuC,EAKZ,GAAgB,EAAZE,EAA2B,CAChC,MAAMI,EAAeV,EAAUU,aAC/B,IAAK,IAAI50B,EAAI,EAAGA,EAAI40B,EAAa30B,OAAQD,IAAK,CAC1C,MAAMwB,EAAMozB,EAAa50B,GACzB,GAAIs0B,EAAU9yB,KAAS4yB,EAAU5yB,KAC5B4wB,GAAeL,EAAOvwB,GACvB,OAAO,GAwBvB,OAAO,EAEX,SAASmzB,GAAgBP,EAAWE,EAAWG,GAC3C,MAAMI,EAAWj1B,OAAO0B,KAAKgzB,GAC7B,GAAIO,EAAS50B,SAAWL,OAAO0B,KAAK8yB,GAAWn0B,OAC3C,OAAO,EAEX,IAAK,IAAID,EAAI,EAAGA,EAAI60B,EAAS50B,OAAQD,IAAK,CACtC,MAAMwB,EAAMqzB,EAAS70B,GACrB,GAAIs0B,EAAU9yB,KAAS4yB,EAAU5yB,KAC5B4wB,GAAeqC,EAAcjzB,GAC9B,OAAO,EAGf,OAAO,EAEX,SAASszB,IAAgB,MAAEvV,EAAK,OAAEtK,GAAU5N,GAExC,MAAO4N,GAAUA,EAAO8f,UAAYxV,GAC/BA,EAAQtK,EAAOsK,OAAOlY,GAAKA,EAC5B4N,EAASA,EAAOA,OAIxB,MAAM+f,GAAcjmB,GAASA,EAAKkmB,aA6WlC,SAASC,GAA0B3V,GAC/B,MAAM,UAAEyT,EAAS,SAAE5d,GAAamK,EAChC,IAAI4V,EACAC,EASJ,OARgB,GAAZpC,GACAmC,EAAUE,GAAsBjgB,EAAS2C,SACzCqd,EAAWC,GAAsBjgB,EAASggB,YAG1CD,EAAUE,GAAsBjgB,GAChCggB,EAAWlC,GAAe,OAEvB,CACHiC,UACAC,YAGR,SAASC,GAAsBC,GAI3B,GAHI,gBAAWA,KACXA,EAAIA,KAEJ,gBAAQA,GAAI,CACZ,MAAMC,EAAc3B,GAAiB0B,GACjC,EAGJA,EAAIC,EAER,OAAOrC,GAAeoC,GAE1B,SAASE,GAAwBjyB,EAAIkyB,GAC7BA,GAAYA,EAASC,cACjB,gBAAQnyB,GACRkyB,EAASnP,QAAQ9W,QAAQjM,GAGzBkyB,EAASnP,QAAQ9W,KAAKjM,GAI1BstB,GAAiBttB,GAezB,IAAIoyB,GAA0B,EAC9B,MAAMC,GAA4BpxB,GAAOmxB,IAA2BnxB,EAiCpE,SAASqxB,GAAQtyB,EAAIuvB,EAAMT,IACvB,IAAKS,EACD,OAAOvvB,EACX,MAAMuyB,EAAsB,IAAI/sB,KAIvB4sB,IACDI,IAAU,GAEd,MAAMC,EAAQ3D,GACdC,GAA4BQ,GAC5B,MAAMltB,EAAMrC,KAAMwF,GAKlB,OAJAupB,GAA4B0D,GACvBL,IACDM,KAEGrwB,GAGX,OADAkwB,EAAoBI,IAAK,EAClBJ,EAIX,IAAIK,GAAiB,KACrB,MAAMC,GAAe,GAIrB,SAASC,GAAY5Q,GACjB2Q,GAAa5mB,KAAM2mB,GAAiB1Q,GAKxC,SAAS6Q,KACLF,GAAapnB,MACbmnB,GAAiBC,GAAaA,GAAan2B,OAAS,IAAM,KAK9D,SAASs2B,GAAY9Q,GACjB,OAASliB,GAAOsyB,IAAQ,WACpBQ,GAAY5Q,GACZ,MAAM7f,EAAMrC,EAAG4F,MAAMoa,KAAMta,WAE3B,OADAqtB,KACO1wB,KAIf,MAAM4wB,GAAcznB,GAASA,EAAK0nB,aAwLlC,MAEMC,GAAa,aAKnB,SAASC,GAAiBpwB,GACtB,OAAOqwB,GAAaF,GAAYnwB,IAASA,EAE7C,MAAMswB,GAAyB/uB,SAoB/B,SAAS8uB,GAAa7nB,EAAMxI,EAAMuwB,GAAc,GAC5C,MAAMlY,EAAWyT,IAA4B0E,GAC7C,GAAInY,EAAU,CACV,MAAMO,EAAYP,EAAS7P,KAE3B,GAAIA,IAAS2nB,GAAY,CACrB,MAAMM,EAAW7X,EAAU8X,aAAe9X,EAAU5Y,KACpD,GAAIywB,IACCA,IAAazwB,GACVywB,IAAa,gBAASzwB,IACtBywB,IAAa,gBAAW,gBAASzwB,KACrC,OAAO4Y,EAGf,MAAMvZ,EAGNkR,GAAQ8H,EAAS7P,IAASoQ,EAAUpQ,GAAOxI,IAEvCuQ,GAAQ8H,EAASuO,WAAWpe,GAAOxI,GAIvC,OAAOX,GAOf,SAASkR,GAAQogB,EAAU3wB,GACvB,OAAQ2wB,IACHA,EAAS3wB,IACN2wB,EAAS,gBAAS3wB,KAClB2wB,EAAS,gBAAW,gBAAS3wB,MAGzC,MAAM4wB,GAAWrvB,YAA8DwJ,GACzE8lB,GAAOtvB,YAA0DwJ,GACjEqiB,GAAU7rB,YAA6DwJ,GACvE+lB,GAASvvB,YAA4DwJ,GAMrEgmB,GAAa,GACnB,IAAIC,GAAe,KAiBnB,SAASxB,GAAUyB,GAAkB,GACjCF,GAAW9nB,KAAM+nB,GAAeC,EAAkB,KAAO,IAE7D,SAASvB,KACLqB,GAAWtoB,MACXuoB,GAAeD,GAAWA,GAAWr3B,OAAS,IAAM,KAMxD,IAAI,GAAc,EA2BlB,SAASw3B,GAAY1oB,EAAM0I,EAAOrC,EAAUof,EAAWI,GACnD,MAAMrV,EAAQmU,GAAY3kB,EAAM0I,EAAOrC,EAAUof,EAAWI,GAAc,GAU1E,OARArV,EAAMmY,gBAAkBH,IAAgB,QAExCtB,KAGI,GAAc,GAAKsB,IACnBA,GAAa/nB,KAAK+P,GAEfA,EAEX,SAASwU,GAAQ3wB,GACb,QAAOA,IAA8B,IAAtBA,EAAMu0B,YAEzB,SAASC,GAAgBC,EAAIC,GAOzB,OAAOD,EAAG9oB,OAAS+oB,EAAG/oB,MAAQ8oB,EAAGr2B,MAAQs2B,EAAGt2B,IAYhD,MAKMu2B,GAAoB,cACpBC,GAAe,EAAGx2B,SAAiB,MAAPA,EAAcA,EAAM,KAChDy2B,GAAe,EAAGxY,SACL,MAAPA,EACF,gBAAQA,GACJA,EACA,CAAEzf,EAAGqyB,GAA0BvG,EAAGrM,GACtC,KAEJiU,GAEAwE,GACN,SAASA,GAAanpB,EAAM0I,EAAQ,KAAMrC,EAAW,KAAMof,EAAY,EAAGI,EAAe,KAAMuD,GAAc,GAOzG,GANKppB,GAAQA,IAAS8nB,KAIlB9nB,EAAO4kB,IAEPI,GAAQhlB,GAAO,CAIf,MAAMqpB,EAAS7E,GAAWxkB,EAAM0I,GAAO,GAIvC,OAHIrC,GACAijB,GAAkBD,EAAQhjB,GAEvBgjB,EAOX,GAJIE,GAAiBvpB,KACjBA,EAAOA,EAAKmM,WAGZzD,EAAO,EAEHmU,GAAQnU,IAAUsgB,MAAqBtgB,KACvCA,EAAQ,gBAAO,GAAIA,IAEvB,IAAM2F,MAAOmb,EAAK,MAAEprB,GAAUsK,EAC1B8gB,IAAU,gBAASA,KACnB9gB,EAAM2F,MAAQ,gBAAemb,IAE7B,gBAASprB,KAGLye,GAAQze,KAAW,gBAAQA,KAC3BA,EAAQ,gBAAO,GAAIA,IAEvBsK,EAAMtK,MAAQ,gBAAeA,IAIrC,MAAM6lB,EAAY,gBAASjkB,GACrB,EACCimB,GAAWjmB,GACR,IACAynB,GAAWznB,GACP,GACA,gBAASA,GACL,EACA,gBAAWA,GACP,EACA,EAQtB,MAAMwQ,EAAQ,CACVoY,aAAa,EACb,CAAC,aAAwB,EACzB5oB,OACA0I,QACAjW,IAAKiW,GAASugB,GAAavgB,GAC3BgI,IAAKhI,GAASwgB,GAAaxgB,GAC3B+gB,QAASrC,GACT/gB,SAAU,KACV4C,UAAW,KACXyd,SAAU,KACVgD,UAAW,KACXC,WAAY,KACZlF,KAAM,KACNC,WAAY,KACZpsB,GAAI,KACJsxB,OAAQ,KACR9a,OAAQ,KACR+a,aAAc,KACdC,YAAa,EACb7F,YACAwB,YACAI,eACA8C,gBAAiB,KACjBvK,WAAY,MAQhB,GAFAkL,GAAkB9Y,EAAOnK,GAER,IAAZ4d,EAAgC,CACjC,MAAM,QAAEmC,EAAO,SAAEC,GAAaF,GAA0B3V,GACxDA,EAAMkZ,UAAYtD,EAClB5V,EAAMmZ,WAAatD,EAiBvB,OAfI,GAAc,IAEb+C,GAEDZ,KAKC/C,EAAY,GAAiB,EAAZxB,IAGJ,KAAdwB,GACA+C,GAAa/nB,KAAK+P,GAEfA,EAEX,SAASgU,GAAWhU,EAAOuZ,EAAYC,GAAW,GAG9C,MAAM,MAAEthB,EAAK,IAAEgI,EAAG,UAAE+U,GAAcjV,EAC5ByZ,EAAcF,EAAaG,GAAWxhB,GAAS,GAAIqhB,GAAcrhB,EACvE,MAAO,CACHkgB,aAAa,EACb,CAAC,aAAwB,EACzB5oB,KAAMwQ,EAAMxQ,KACZ0I,MAAOuhB,EACPx3B,IAAKw3B,GAAehB,GAAagB,GACjCvZ,IAAKqZ,GAAcA,EAAWrZ,IAItBsZ,GAAYtZ,EACN,gBAAQA,GACJA,EAAIrW,OAAO6uB,GAAaa,IACxB,CAACrZ,EAAKwY,GAAaa,IACvBb,GAAaa,GACrBrZ,EACN+Y,QAASjZ,EAAMiZ,QACfpjB,SAAUmK,EAAMnK,SAChByI,OAAQ0B,EAAM1B,OACd+a,aAAcrZ,EAAMqZ,aACpBC,YAAatZ,EAAMsZ,YACnB7F,UAAWzT,EAAMyT,UAKjBwB,UAAWsE,GAAcvZ,EAAMxQ,OAASooB,IACnB,IAAf3C,EACI,GACY,GAAZA,EACJA,EACNI,aAAcrV,EAAMqV,aACpB8C,gBAAiBnY,EAAMmY,gBACvBvK,WAAY5N,EAAM4N,WAClBqG,KAAMjU,EAAMiU,KACZC,WAAYlU,EAAMkU,WAKlBzb,UAAWuH,EAAMvH,UACjByd,SAAUlW,EAAMkW,SAChBgD,UAAWlZ,EAAMkZ,WAAalF,GAAWhU,EAAMkZ,WAC/CC,WAAYnZ,EAAMmZ,YAAcnF,GAAWhU,EAAMmZ,YACjDrxB,GAAIkY,EAAMlY,GACVsxB,OAAQpZ,EAAMoZ,QAMtB,SAASO,GAAgBtlB,EAAO,IAAKulB,EAAO,GACxC,OAAOzF,GAAY0D,GAAM,KAAMxjB,EAAMulB,GAuBzC,SAASjG,GAAeY,GACpB,OAAa,MAATA,GAAkC,mBAAVA,EAEjBJ,GAAYC,IAEd,gBAAQG,GAENJ,GAAYyD,GAAU,KAAMrD,GAEb,kBAAVA,EAGQ,OAAbA,EAAMzsB,GAAcysB,EAAQP,GAAWO,GAIvCJ,GAAY0D,GAAM,KAAMx1B,OAAOkyB,IAI9C,SAASsF,GAAetF,GACpB,OAAoB,OAAbA,EAAMzsB,GAAcysB,EAAQP,GAAWO,GAElD,SAASuE,GAAkB9Y,EAAOnK,GAC9B,IAAIrG,EAAO,EACX,MAAM,UAAEikB,GAAczT,EACtB,GAAgB,MAAZnK,EACAA,EAAW,UAEV,GAAI,gBAAQA,GACbrG,EAAO,QAEN,GAAwB,kBAAbqG,EAAuB,CACnC,GAAgB,EAAZ4d,GAA2C,GAAZA,EAA+B,CAE9D,MAAMqG,EAAOjkB,EAAS2C,QAOtB,YANIshB,IAEAA,EAAKnD,IAAMN,GAAyB,GACpCyC,GAAkB9Y,EAAO8Z,KACzBA,EAAKnD,IAAMN,IAA0B,KAIxC,CACD7mB,EAAO,GACP,MAAMuqB,EAAWlkB,EAASvR,EACrBy1B,GAAcvB,MAAqB3iB,EAGlB,IAAbkkB,GAAkCjH,KAGQ,KAA3CA,GAAyB9S,MAAMiV,WAC/Bpf,EAASvR,EAAI,EACb0b,EAAMiV,WAAa,MAGnBpf,EAASvR,EAAI,GAVjBuR,EAASmkB,KAAOlH,SAenB,gBAAWjd,IAChBA,EAAW,CAAE2C,QAAS3C,EAAUmkB,KAAMlH,IACtCtjB,EAAO,KAGPqG,EAAWxT,OAAOwT,GAEF,GAAZ4d,GACAjkB,EAAO,GACPqG,EAAW,CAAC8jB,GAAgB9jB,KAG5BrG,EAAO,GAGfwQ,EAAMnK,SAAWA,EACjBmK,EAAMyT,WAAajkB,EAEvB,SAASkqB,MAAclwB,GACnB,MAAM7C,EAAM,gBAAO,GAAI6C,EAAK,IAC5B,IAAK,IAAI/I,EAAI,EAAGA,EAAI+I,EAAK9I,OAAQD,IAAK,CAClC,MAAMw5B,EAAUzwB,EAAK/I,GACrB,IAAK,MAAMwB,KAAOg4B,EACd,GAAY,UAARh4B,EACI0E,EAAIkX,QAAUoc,EAAQpc,QACtBlX,EAAIkX,MAAQ,gBAAe,CAAClX,EAAIkX,MAAOoc,EAAQpc,cAGlD,GAAY,UAAR5b,EACL0E,EAAIiH,MAAQ,gBAAe,CAACjH,EAAIiH,MAAOqsB,EAAQrsB,aAE9C,GAAI,gBAAK3L,GAAM,CAChB,MAAMi4B,EAAWvzB,EAAI1E,GACfk4B,EAAWF,EAAQh4B,GACrBi4B,IAAaC,IACbxzB,EAAI1E,GAAOi4B,EACL,GAAGrwB,OAAOqwB,EAAUD,EAAQh4B,IAC5Bk4B,QAIVxzB,EAAI1E,GAAOg4B,EAAQh4B,GAI/B,OAAO0E,EAGX,SAASyzB,GAAU/a,EAAUgb,EAAUC,EACvCC,GAAQ,GACJ,MAAMriB,EAAQ,GACRoF,EAAQ,GACd,gBAAIA,EAAOkb,GAAmB,GAC9BgC,GAAanb,EAAUgb,EAAUniB,EAAOoF,GAKpCgd,EAEAjb,EAASnH,MAAQqiB,EAAQriB,EAAQ0T,GAAgB1T,GAG5CmH,EAAS7P,KAAK0I,MAMfmH,EAASnH,MAAQA,EAJjBmH,EAASnH,MAAQoF,EAOzB+B,EAAS/B,MAAQA,EAErB,SAASmd,GAAYpb,EAAUgb,EAAUK,EAAc9F,GACnD,MAAM,MAAE1c,EAAK,MAAEoF,EAAO0C,OAAO,UAAEiV,IAAgB5V,EACzCsb,EAAkBpS,GAAMrQ,IACvBhF,GAAWmM,EAAS6T,aAC3B,KAGK0B,GAAaK,EAAY,IACZ,GAAZA,EA0BD,CAKD,IAAI2F,EAHJJ,GAAanb,EAAUgb,EAAUniB,EAAOoF,GAIxC,IAAK,MAAMrb,KAAO04B,EACTN,IAEC,gBAAOA,EAAUp4B,KAGb24B,EAAW,gBAAU34B,MAAUA,GAAQ,gBAAOo4B,EAAUO,MAC1D1nB,GACIwnB,QAEuB3oB,IAAtB2oB,EAAaz4B,SAEiB8P,IAA3B2oB,EAAaE,KACjB1iB,EAAMjW,GAAO44B,GAAiB3nB,EAASmnB,GAAY,QAAWp4B,OAAK8P,EAAWsN,WAI3EnH,EAAMjW,IAMzB,GAAIqb,IAAUqd,EACV,IAAK,MAAM14B,KAAOqb,EACT+c,GAAa,gBAAOA,EAAUp4B,WACxBqb,EAAMrb,QAzDzB,GAAgB,EAAZgzB,EAA2B,CAG3B,MAAM6F,EAAgBzb,EAASW,MAAMqV,aACrC,IAAK,IAAI50B,EAAI,EAAGA,EAAIq6B,EAAcp6B,OAAQD,IAAK,CAC3C,MAAMwB,EAAM64B,EAAcr6B,GAEpBoD,EAAQw2B,EAASp4B,GACvB,GAAIiR,EAGA,GAAI,gBAAOoK,EAAOrb,GACdqb,EAAMrb,GAAO4B,MAEZ,CACD,MAAMk3B,EAAe,gBAAS94B,GAC9BiW,EAAM6iB,GAAgBF,GAAiB3nB,EAASynB,EAAiBI,EAAcl3B,EAAOwb,QAI1F/B,EAAMrb,GAAO4B,GA2C7B+iB,EAAQvH,EAAU,MAAiB,UAKvC,SAASmb,GAAanb,EAAUgb,EAAUniB,EAAOoF,GAC7C,MAAOpK,EAAS8nB,GAAgB3b,EAAS6T,aACzC,GAAImH,EACA,IAAK,MAAMp4B,KAAOo4B,EAAU,CACxB,MAAMx2B,EAAQw2B,EAASp4B,GAEvB,GAAI,gBAAeA,GACf,SAIJ,IAAIg5B,EACA/nB,GAAW,gBAAOA,EAAU+nB,EAAW,gBAASh5B,IAChDiW,EAAM+iB,GAAYp3B,EAEZgvB,GAAexT,EAAS6V,aAAcjzB,KAI5Cqb,EAAMrb,GAAO4B,GAIzB,GAAIm3B,EAAc,CACd,MAAML,EAAkBpS,GAAMrQ,GAC9B,IAAK,IAAIzX,EAAI,EAAGA,EAAIu6B,EAAat6B,OAAQD,IAAK,CAC1C,MAAMwB,EAAM+4B,EAAav6B,GACzByX,EAAMjW,GAAO44B,GAAiB3nB,EAASynB,EAAiB14B,EAAK04B,EAAgB14B,GAAMod,KAI/F,SAASwb,GAAiB3nB,EAASgF,EAAOjW,EAAK4B,EAAOwb,GAClD,MAAM6b,EAAMhoB,EAAQjR,GACpB,GAAW,MAAPi5B,EAAa,CACb,MAAMC,EAAa,gBAAOD,EAAK,WAE/B,GAAIC,QAAwBppB,IAAVlO,EAAqB,CACnC,MAAMu3B,EAAeF,EAAI1iB,QACrB0iB,EAAI1rB,OAAS6rB,UAAY,gBAAWD,IACpCE,GAAmBjc,GACnBxb,EAAQu3B,EAAaljB,GACrBojB,GAAmB,OAGnBz3B,EAAQu3B,EAIZF,EAAI,KACC,gBAAOhjB,EAAOjW,IAASk5B,GAGnBD,EAAI,IACE,KAAVr3B,GAAgBA,IAAU,gBAAU5B,KACrC4B,GAAQ,GAJRA,GAAQ,GAQpB,OAAOA,EAEX,SAAS03B,GAAsB5mB,EAAMiZ,EAAYuE,GAAU,GACvD,MAAMC,EAAQxE,EAAW7J,IAAM6J,EAAW7J,IAAIsO,MAAQ,EAChDpuB,EAAQ0Q,EAAK6mB,UAAY7mB,EAAK6mB,QAAU,IACxCjJ,EAAStuB,EAAMmuB,GACrB,GAAIG,EACA,OAAOA,EAEX,MAAMjN,EAAM3Q,EAAKuD,MACX5R,EAAa,GACb00B,EAAe,GAErB,IAAIvI,GAAa,EACjB,IAA4B,gBAAW9d,GAAO,CAC1C,MAAM8mB,EAAenW,IACjBmN,GAAa,EACb,MAAOva,EAAOnW,GAAQw5B,GAAsBjW,EAAKsI,GAAY,GAC7D,gBAAOtnB,EAAY4R,GACfnW,GACAi5B,EAAa/qB,QAAQlO,KAExBowB,GAAWvE,EAAW+E,OAAOjyB,QAC9BktB,EAAW+E,OAAO/rB,QAAQ60B,GAE1B9mB,EAAKie,SACL6I,EAAY9mB,EAAKie,SAEjBje,EAAKge,QACLhe,EAAKge,OAAO/rB,QAAQ60B,GAG5B,IAAKnW,IAAQmN,EACT,OAAQxuB,EAAMmuB,GAAS,QAE3B,GAAI,gBAAQ9M,GACR,IAAK,IAAI7kB,EAAI,EAAGA,EAAI6kB,EAAI5kB,OAAQD,IAAK,CAC7B,EAGJ,MAAMi7B,EAAgB,gBAASpW,EAAI7kB,IAC/Bk7B,GAAiBD,KACjBp1B,EAAWo1B,GAAiB,cAInC,GAAIpW,EAAK,CACN,EAGJ,IAAK,MAAMrjB,KAAOqjB,EAAK,CACnB,MAAMoW,EAAgB,gBAASz5B,GAC/B,GAAI05B,GAAiBD,GAAgB,CACjC,MAAMR,EAAM5V,EAAIrjB,GACV25B,EAAQt1B,EAAWo1B,GACrB,gBAAQR,IAAQ,gBAAWA,GAAO,CAAE1rB,KAAM0rB,GAAQA,EACtD,GAAIU,EAAM,CACN,MAAMC,EAAeC,GAAa3e,QAASye,EAAKpsB,MAC1CusB,EAAcD,GAAaz5B,OAAQu5B,EAAKpsB,MAC9CosB,EAAK,GAAsBC,GAAgB,EAC3CD,EAAK,GACDG,EAAc,GAAKF,EAAeE,GAElCF,GAAgB,GAAK,gBAAOD,EAAM,aAClCZ,EAAa/qB,KAAKyrB,MAMtC,OAAQz3B,EAAMmuB,GAAS,CAAC9rB,EAAY00B,GAIxC,SAASgB,GAAQC,GACb,MAAMhoB,EAAQgoB,GAAQA,EAAKr4B,WAAWqQ,MAAM,sBAC5C,OAAOA,EAAQA,EAAM,GAAK,GAE9B,SAASioB,GAAW96B,EAAGC,GACnB,OAAO26B,GAAQ56B,KAAO46B,GAAQ36B,GAElC,SAASy6B,GAAatsB,EAAM2sB,GACxB,GAAI,gBAAQA,IACR,IAAK,IAAI17B,EAAI,EAAGgkB,EAAM0X,EAAcz7B,OAAQD,EAAIgkB,EAAKhkB,IACjD,GAAIy7B,GAAWC,EAAc17B,GAAI+O,GAC7B,OAAO/O,OAId,GAAI,gBAAW07B,GAChB,OAAOD,GAAWC,EAAe3sB,GAAQ,GAAK,EAElD,OAAQ,EAkBZ,SAASmsB,GAAiB15B,GACtB,MAAe,MAAXA,EAAI,GA2HZ,SAASm6B,GAAW5sB,EAAM6sB,EAAM/d,EAASkZ,GAAiB8E,GAAU,GAChE,GAAIhe,EAAQ,CACR,MAAMie,EAAQje,EAAO9O,KAAU8O,EAAO9O,GAAQ,IAIxCgtB,EAAcH,EAAKI,QACpBJ,EAAKI,MAAQ,IAAIjzB,KACd,GAAI8U,EAAO2B,YACP,OAIJqG,IAIAgV,GAAmBhd,GACnB,MAAMjY,EAAM6oB,GAA2BmN,EAAM/d,EAAQ9O,EAAMhG,GAG3D,OAFA8xB,GAAmB,MACnBrV,IACO5f,IAQf,OANIi2B,EACAC,EAAMzkB,QAAQ0kB,GAGdD,EAAMtsB,KAAKusB,GAERA,GAYf,MAAME,GAAcC,GAAc,CAACN,EAAM/d,EAASkZ,MAEjDoF,IAAyBR,GAAWO,EAAWN,EAAM/d,GAChDue,GAAgBH,GAAW,MAC3BI,GAAYJ,GAAW,KACvBK,GAAiBL,GAAW,MAC5BM,GAAYN,GAAW,KACvBO,GAAkBP,GAAW,OAC7BQ,GAAcR,GAAW,MACzBS,GAAoBT,GAAW,OAC/BU,GAAkBV,GAAW,OAC7BW,GAAkB,CAAChB,EAAM/d,EAASkZ,MACpC4E,GAAW,KAA2BC,EAAM/d,IAGhD,SAASgf,KACL,MAAMrvB,EAAQ,CACVsvB,WAAW,EACXC,WAAW,EACXC,cAAc,EACdC,cAAe,IAAIvvB,KAQvB,OANA2uB,GAAU,KACN7uB,EAAMsvB,WAAY,IAEtBN,GAAgB,KACZhvB,EAAMwvB,cAAe,IAElBxvB,EAEX,MAAM0vB,GAA0B,CAACtC,SAAUh4B,OACrCu6B,GAAqB,CACvB52B,KAAM,iBACNkR,MAAO,CACH2lB,KAAMx7B,OACNy7B,OAAQ3gB,QACR4gB,UAAW5gB,QAEX6gB,cAAeL,GACfM,QAASN,GACTO,aAAcP,GACdQ,iBAAkBR,GAElBS,cAAeT,GACfU,QAASV,GACTW,aAAcX,GACdY,iBAAkBZ,GAElBa,eAAgBb,GAChBc,SAAUd,GACVe,cAAef,GACfgB,kBAAmBhB,IAEvB,MAAMzlB,GAAO,MAAEmF,IACX,MAAMgC,EAAWuf,KACX3wB,EAAQqvB,KACd,IAAIuB,EACJ,MAAO,KACH,MAAMhpB,EAAWwH,EAAM7E,SAAWsmB,GAAyBzhB,EAAM7E,WAAW,GAC5E,IAAK3C,IAAaA,EAASnV,OACvB,OASJ,MAAM25B,EAAW9R,GAAMrQ,IACjB,KAAE2lB,GAASxD,EAMjB,MAAM9F,EAAQ1e,EAAS,GACvB,GAAI5H,EAAMuvB,UACN,OAAOuB,GAAiBxK,GAI5B,MAAMyK,EAAaC,GAAkB1K,GACrC,IAAKyK,EACD,OAAOD,GAAiBxK,GAE5B,MAAM2K,EAAaC,GAAuBH,EAAY3E,EAAUpsB,EAAOoR,GACvE+f,GAAmBJ,EAAYE,GAC/B,MAAMG,EAAWhgB,EAASmW,QACpB8J,EAAgBD,GAAYJ,GAAkBI,GACpD,IAAIE,GAAuB,EAC3B,MAAM,iBAAEC,GAAqBR,EAAWxvB,KACxC,GAAIgwB,EAAkB,CAClB,MAAMv9B,EAAMu9B,SACcztB,IAAtB8sB,EACAA,EAAoB58B,EAEfA,IAAQ48B,IACbA,EAAoB58B,EACpBs9B,GAAuB,GAI/B,GAAID,GACAA,EAAc9vB,OAAS4kB,MACrBiE,GAAgB2G,EAAYM,IAAkBC,GAAuB,CACvE,MAAME,EAAeN,GAAuBG,EAAejF,EAAUpsB,EAAOoR,GAI5E,GAFA+f,GAAmBE,EAAeG,GAErB,WAAT5B,EAOA,OANA5vB,EAAMuvB,WAAY,EAElBiC,EAAaC,WAAa,KACtBzxB,EAAMuvB,WAAY,EAClBne,EAASsgB,UAENZ,GAAiBxK,GAEV,WAATsJ,IACL4B,EAAaG,WAAa,CAAC93B,EAAI+3B,EAAaC,KACxC,MAAMC,EAAqBC,GAAuB/xB,EAAOqxB,GACzDS,EAAmB19B,OAAOi9B,EAAcr9B,MAAQq9B,EAEhDx3B,EAAGm4B,SAAW,KACVJ,IACA/3B,EAAGm4B,cAAWluB,SACPmtB,EAAWY,cAEtBZ,EAAWY,aAAeA,IAItC,OAAOvL,KAMb2L,GAAiBtC,GACvB,SAASoC,GAAuB/xB,EAAO+R,GACnC,MAAM,cAAE0d,GAAkBzvB,EAC1B,IAAI8xB,EAAqBrC,EAAclvB,IAAIwR,EAAMxQ,MAKjD,OAJKuwB,IACDA,EAAqB1/B,OAAOC,OAAO,MACnCo9B,EAAc/6B,IAAIqd,EAAMxQ,KAAMuwB,IAE3BA,EAIX,SAASZ,GAAuBnf,EAAO9H,EAAOjK,EAAOoR,GACjD,MAAM,OAAEye,EAAM,KAAED,EAAI,UAAEE,GAAY,EAAK,cAAEC,EAAa,QAAEC,EAAO,aAAEC,EAAY,iBAAEC,EAAgB,cAAEC,EAAa,QAAEC,EAAO,aAAEC,EAAY,iBAAEC,EAAgB,eAAEC,EAAc,SAAEC,EAAQ,cAAEC,EAAa,kBAAEC,GAAsBzmB,EAClNjW,EAAMI,OAAO2d,EAAM/d,KACnB89B,EAAqBC,GAAuB/xB,EAAO+R,GACnDmgB,EAAW,CAAC9D,EAAM7yB,KACpB6yB,GACInN,GAA2BmN,EAAMhd,EAAU,EAAyB7V,IAEtE+yB,EAAQ,CACVsB,OACAE,YACA,YAAYj2B,GACR,IAAIu0B,EAAO2B,EACX,IAAK/vB,EAAMsvB,UAAW,CAClB,IAAIO,EAIA,OAHAzB,EAAOmC,GAAkBR,EAO7Bl2B,EAAGm4B,UACHn4B,EAAGm4B,UAAS,GAGhB,MAAMG,EAAeL,EAAmB99B,GACpCm+B,GACA/H,GAAgBrY,EAAOogB,IACvBA,EAAat4B,GAAGm4B,UAEhBG,EAAat4B,GAAGm4B,WAEpBE,EAAS9D,EAAM,CAACv0B,KAEpB,MAAMA,GACF,IAAIu0B,EAAO4B,EACPoC,EAAYnC,EACZoC,EAAanC,EACjB,IAAKlwB,EAAMsvB,UAAW,CAClB,IAAIO,EAMA,OALAzB,EAAOoC,GAAYR,EACnBoC,EAAY3B,GAAiBR,EAC7BoC,EAAa3B,GAAqBR,EAM1C,IAAIoC,GAAS,EACb,MAAM3V,EAAQ9iB,EAAG04B,SAAYC,IACrBF,IAEJA,GAAS,EAELJ,EADAM,EACSH,EAGAD,EAHY,CAACv4B,IAKtBy0B,EAAMuD,cACNvD,EAAMuD,eAEVh4B,EAAG04B,cAAWzuB,IAEdsqB,GACAA,EAAKv0B,EAAI8iB,GACLyR,EAAK37B,QAAU,GACfkqB,KAIJA,KAGR,MAAM9iB,EAAID,GACN,MAAM5F,EAAMI,OAAO2d,EAAM/d,KAIzB,GAHI6F,EAAG04B,UACH14B,EAAG04B,UAAS,GAEZvyB,EAAMwvB,aACN,OAAO51B,IAEXs4B,EAAS/B,EAAe,CAACt2B,IACzB,IAAIy4B,GAAS,EACb,MAAM3V,EAAQ9iB,EAAGm4B,SAAYQ,IACrBF,IAEJA,GAAS,EACT14B,IAEIs4B,EADAM,EACSlC,EAGAD,EAHkB,CAACx2B,IAKhCA,EAAGm4B,cAAWluB,EACVguB,EAAmB99B,KAAS+d,UACrB+f,EAAmB99B,KAGlC89B,EAAmB99B,GAAO+d,EACtBqe,GACAA,EAAQv2B,EAAI8iB,GACRyT,EAAQ39B,QAAU,GAClBkqB,KAIJA,KAGR,MAAM5K,GACF,OAAOmf,GAAuBnf,EAAO9H,EAAOjK,EAAOoR,KAG3D,OAAOkd,EAMX,SAASwC,GAAiB/e,GACtB,GAAI0gB,GAAY1gB,GAGZ,OAFAA,EAAQgU,GAAWhU,GACnBA,EAAMnK,SAAW,KACVmK,EAGf,SAASif,GAAkBjf,GACvB,OAAO0gB,GAAY1gB,GACbA,EAAMnK,SACFmK,EAAMnK,SAAS,QACf9D,EACJiO,EAEV,SAASof,GAAmBpf,EAAOuc,GACT,EAAlBvc,EAAMyT,WAAiCzT,EAAMvH,UAC7C2mB,GAAmBpf,EAAMvH,UAAU+c,QAAS+G,GAEpB,IAAlBvc,EAAMyT,WACZzT,EAAMkZ,UAAUhF,WAAaqI,EAAMoE,MAAM3gB,EAAMkZ,WAC/ClZ,EAAMmZ,WAAWjF,WAAaqI,EAAMoE,MAAM3gB,EAAMmZ,aAGhDnZ,EAAMkU,WAAaqI,EAG3B,SAASuC,GAAyBjpB,EAAU+qB,GAAc,GACtD,IAAIj6B,EAAM,GACNk6B,EAAqB,EACzB,IAAK,IAAIpgC,EAAI,EAAGA,EAAIoV,EAASnV,OAAQD,IAAK,CACtC,MAAM8zB,EAAQ1e,EAASpV,GAEnB8zB,EAAM/kB,OAASooB,IACO,IAAlBrD,EAAMU,WACN4L,IACJl6B,EAAMA,EAAIkD,OAAOi1B,GAAyBvK,EAAM1e,SAAU+qB,MAGrDA,GAAerM,EAAM/kB,OAAS4kB,KACnCztB,EAAIsJ,KAAKskB,GAOjB,GAAIsM,EAAqB,EACrB,IAAK,IAAIpgC,EAAI,EAAGA,EAAIkG,EAAIjG,OAAQD,IAC5BkG,EAAIlG,GAAGw0B,WAAa,EAG5B,OAAOtuB,EAGX,MAAM+5B,GAAe1gB,GAAUA,EAAMxQ,KAAKsxB,cAShBjtB,OACAA,OAoL1B,SAASktB,GAAQpsB,GACb,OAAOA,EAAK+iB,aAAe/iB,EAAK3N,KAEpC,SAASg6B,GAAQ5tB,EAASpM,GACtB,OAAI,gBAAQoM,GACDA,EAAQwL,KAAM+R,GAAMqQ,GAAQrQ,EAAG3pB,IAEjC,gBAASoM,GACPA,EAAQ5S,MAAM,KAAKuH,QAAQf,IAAS,IAEtCoM,EAAQrQ,MACNqQ,EAAQrQ,KAAKiE,GAK5B,SAASi6B,GAAY5E,EAAM/d,GACvB4iB,GAAsB7E,EAAM,IAAqB/d,GAErD,SAAS6iB,GAAc9E,EAAM/d,GACzB4iB,GAAsB7E,EAAM,KAAwB/d,GAExD,SAAS4iB,GAAsB7E,EAAM7sB,EAAM8O,EAASkZ,IAIhD,MAAMgF,EAAcH,EAAK+E,QACpB/E,EAAK+E,MAAQ,KAEV,IAAI1wB,EAAU4N,EACd,MAAO5N,EAAS,CACZ,GAAIA,EAAQ2wB,cACR,OAEJ3wB,EAAUA,EAAQgF,OAEtB2mB,MAQR,GANAD,GAAW5sB,EAAMgtB,EAAale,GAM1BA,EAAQ,CACR,IAAI5N,EAAU4N,EAAO5I,OACrB,MAAOhF,GAAWA,EAAQgF,OAClBgrB,GAAYhwB,EAAQgF,OAAOsK,QAC3BshB,GAAsB9E,EAAahtB,EAAM8O,EAAQ5N,GAErDA,EAAUA,EAAQgF,QAI9B,SAAS4rB,GAAsBjF,EAAM7sB,EAAM8O,EAAQijB,GAG/C,MAAMC,EAAWpF,GAAW5sB,EAAM6sB,EAAMkF,GAAe,GACvDrE,GAAY,KACR,gBAAOqE,EAAc/xB,GAAOgyB,IAC7BljB,GAEP,SAASmjB,GAAezhB,GACpB,IAAIyT,EAAYzT,EAAMyT,UACN,IAAZA,IACAA,GAAa,KAED,IAAZA,IACAA,GAAa,KAEjBzT,EAAMyT,UAAYA,EAEtB,SAASiO,GAAc1hB,GACnB,OAAyB,IAAlBA,EAAMyT,UAAiCzT,EAAMkZ,UAAYlZ,EAGpE,MAAM2hB,GAAiB1/B,GAAmB,MAAXA,EAAI,IAAsB,YAARA,EAC3C2/B,GAAsB/9B,GAAU,gBAAQA,GACxCA,EAAMzD,IAAIuzB,IACV,CAACA,GAAe9vB,IAChBg+B,GAAgB,CAAC5/B,EAAK6/B,EAASvO,IAAQ+C,GAASpe,GAM3C0pB,GAAmBE,EAAQ5pB,IACnCqb,GACGwO,GAAuB,CAACC,EAAU3kB,KACpC,MAAMkW,EAAMyO,EAAShI,KACrB,IAAK,MAAM/3B,KAAO+/B,EAAU,CACxB,GAAIL,GAAc1/B,GACd,SACJ,MAAM4B,EAAQm+B,EAAS//B,GACvB,GAAI,gBAAW4B,GACXwZ,EAAMpb,GAAO4/B,GAAc5/B,EAAK4B,EAAO0vB,QAEtC,GAAa,MAAT1vB,EAAe,CAChB,EAIJ,MAAMyC,EAAas7B,GAAmB/9B,GACtCwZ,EAAMpb,GAAO,IAAMqE,KAIzB27B,GAAsB,CAAC5iB,EAAUxJ,KAKnC,MAAMvP,EAAas7B,GAAmB/rB,GACtCwJ,EAAShC,MAAM7E,QAAU,IAAMlS,GAE7B47B,GAAY,CAAC7iB,EAAUxJ,KACzB,GAA+B,GAA3BwJ,EAASW,MAAMyT,UAAqC,CACpD,MAAMjkB,EAAOqG,EAASvR,EAClBkL,GACA6P,EAAShC,MAAQxH,EAEjB,gBAAIA,EAAU,IAAKrG,IAGnBuyB,GAAqBlsB,EAAWwJ,EAAShC,MAAQ,SAIrDgC,EAAShC,MAAQ,GACbxH,GACAosB,GAAoB5iB,EAAUxJ,GAGtC,gBAAIwJ,EAAShC,MAAOmb,GAAmB,IAErC2J,GAAc,CAAC9iB,EAAUxJ,KAC3B,MAAM,MAAEmK,EAAK,MAAE3C,GAAUgC,EACzB,IAAI+iB,GAAoB,EACpBC,EAA2B,QAC/B,GAAsB,GAAlBriB,EAAMyT,UAAqC,CAC3C,MAAMjkB,EAAOqG,EAASvR,EAClBkL,EAOkB,IAATA,EAGL4yB,GAAoB,EAKpB,gBAAO/kB,EAAOxH,IAIlBusB,GAAqBvsB,EAASsf,QAC9B4M,GAAqBlsB,EAAUwH,IAEnCglB,EAA2BxsB,OAEtBA,IAELosB,GAAoB5iB,EAAUxJ,GAC9BwsB,EAA2B,CAAE7pB,QAAS,IAG1C,GAAI4pB,EACA,IAAK,MAAMngC,KAAOob,EACTskB,GAAc1/B,IAAUA,KAAOogC,UACzBhlB,EAAMpb,IAsD7B,SAASqgC,GAAoBtiB,EAAO0U,EAAWrV,EAAUrY,GACrD,MAAMu7B,EAAWviB,EAAMiU,KACjBuO,EAAc9N,GAAaA,EAAUT,KAC3C,IAAK,IAAIxzB,EAAI,EAAGA,EAAI8hC,EAAS7hC,OAAQD,IAAK,CACtC,MAAMgiC,EAAUF,EAAS9hC,GACrB+hC,IACAC,EAAQ78B,SAAW48B,EAAY/hC,GAAGoD,OAEtC,MAAMw4B,EAAOoG,EAAQC,IAAI17B,GACrBq1B,GACAnN,GAA2BmN,EAAMhd,EAAU,EAAwB,CAC/DW,EAAMlY,GACN26B,EACAziB,EACA0U,KAMhB,SAASiO,KACL,MAAO,CACH5e,IAAK,KACLE,OAAQ,CACJ2e,YAAa,QACbC,aAAa,EACb3e,iBAAkB,GAClB4e,sBAAuB,GACvBC,gBAAiB,QACjBpT,kBAAc5d,EACd8b,iBAAa9b,GAEjB4gB,OAAQ,GACR9b,WAAY,GACZmsB,WAAY,GACZC,SAAU5iC,OAAOC,OAAO,OAGhC,IAAI,GAAM,EACV,SAAS4iC,GAAa9P,EAAQ+P,GAC1B,OAAO,SAAmBC,EAAeC,EAAY,MAChC,MAAbA,GAAsB,gBAASA,KAE/BA,EAAY,MAEhB,MAAMC,EAAUX,KACVY,EAAmB,IAAI7f,IAC7B,IAAI6Z,GAAY,EAChB,MAAMxZ,EAAOuf,EAAQvf,IAAM,CACvBsO,KAAM,KACNmR,WAAYJ,EACZK,OAAQJ,EACRK,WAAY,KACZC,SAAUL,EACVM,WACA,aACI,OAAON,EAAQrf,QAEnB,WAAW5J,GACH,GAIR,IAAIwpB,KAAW3wB,GAgBX,OAfIqwB,EAAiB5c,IAAIkd,KAGhBA,GAAU,gBAAWA,EAAOC,UACjCP,EAAiB7oB,IAAImpB,GACrBA,EAAOC,QAAQ/f,KAAQ7Q,IAElB,gBAAW2wB,KAChBN,EAAiB7oB,IAAImpB,GACrBA,EAAO9f,KAAQ7Q,KAMZ6Q,GAEX,MAAMggB,GAaF,OAXST,EAAQ3Q,OAAO5M,SAASge,IACzBT,EAAQ3Q,OAAO1iB,KAAK8zB,GAUrBhgB,GAEX,UAAU/c,EAAMyR,GAIZ,OAAKA,GAML6qB,EAAQzsB,WAAW7P,GAAQyR,EACpBsL,GANIuf,EAAQzsB,WAAW7P,IAQlC,UAAUA,EAAMg9B,GAIZ,OAAKA,GAMLV,EAAQN,WAAWh8B,GAAQg9B,EACpBjgB,GANIuf,EAAQN,WAAWh8B,IAQlC,MAAMi9B,EAAeC,GACjB,IAAK3G,EAAW,CACZ,MAAMvd,EAAQmU,GAAYiP,EAAeC,GAsBzC,OAnBArjB,EAAM4N,WAAa0V,EAOfY,GAAaf,EACbA,EAAQnjB,EAAOikB,GAGf7Q,EAAOpT,EAAOikB,GAElB1G,GAAY,EACZxZ,EAAI2f,WAAaO,EACjBA,EAAcE,YAAcpgB,EAIrB/D,EAAMvH,UAAUyT,QAS/B,UACQqR,GACAnK,EAAO,KAAMrP,EAAI2f,aASzB,QAAQzhC,EAAK4B,GAQT,OADAy/B,EAAQL,SAAShhC,GAAO4B,EACjBkgB,IAGf,OAAOA,GAwVf,SAASqgB,MAkBT,MAAMC,GAAoB,CACtBve,UAAW8K,GAEX3J,cAAc,GAUlB,MAAMqd,GAAyBrO,GAEzBsO,GAAS,CAACC,EAAQC,EAAWC,EAAiBC,EAAgB3kB,KAChE,GAAI,gBAAQwkB,GAER,YADAA,EAAO59B,QAAQ,CAAC2lB,EAAG9rB,IAAM8jC,GAAOhY,EAAGkY,IAAc,gBAAQA,GAAaA,EAAUhkC,GAAKgkC,GAAYC,EAAiBC,EAAgB3kB,IAGtI,IAAInc,EAMIA,EALHmc,EAIqB,EAAlBA,EAAMyT,UACEzT,EAAMvH,UAAUyT,MAGhBlM,EAAMlY,GAPV,KAUZ,MAAQrH,EAAGg2B,EAAOlK,EAAGrM,GAAQskB,EAM7B,MAAMI,EAASH,GAAaA,EAAUlY,EAChCsY,EAAOpO,EAAMoO,OAAS,QAAapO,EAAMoO,KAAO,GAAMpO,EAAMoO,KAC5DvR,EAAamD,EAAMnD,WAazB,GAXc,MAAVsR,GAAkBA,IAAW1kB,IACzB,gBAAS0kB,IACTC,EAAKD,GAAU,KACX,gBAAOtR,EAAYsR,KACnBtR,EAAWsR,GAAU,OAGpB1c,GAAM0c,KACXA,EAAO/gC,MAAQ,OAGnB,gBAASqc,GAAM,CACf,MAAM4kB,EAAQ,KACVD,EAAK3kB,GAAOrc,EACR,gBAAOyvB,EAAYpT,KACnBoT,EAAWpT,GAAOrc,IAMtBA,GACAihC,EAAM5e,IAAM,EACZoe,GAAsBQ,EAAOH,IAG7BG,SAGH,GAAI5c,GAAMhI,GAAM,CACjB,MAAM4kB,EAAQ,KACV5kB,EAAIrc,MAAQA,GAEZA,GACAihC,EAAM5e,IAAM,EACZoe,GAAsBQ,EAAOH,IAG7BG,SAGC,gBAAW5kB,IAChB8N,GAAsB9N,EAAKwkB,EAAiB,GAAuB,CAC/D7gC,EACAghC,KAsBZ,SAASE,GAAe7xB,GACpB,OAAO8xB,GAAmB9xB,GAS9B,SAAS8xB,GAAmB9xB,EAAS+xB,GAG7Bb,KAEJ,MAAQc,OAAQC,EAAYt9B,OAAQu9B,EAAYC,UAAWC,EAAeC,eAAgBC,EAAoBC,cAAeC,EAAmBC,WAAYC,EAAgBC,cAAeC,EAAmBC,QAASC,EAAaC,eAAgBC,EAAoBC,WAAYC,EAAgBC,YAAaC,EAAiBC,WAAYC,EAAiB,QAAMC,UAAWC,EAAeC,oBAAqBC,GAA4B1zB,EAG1a2zB,EAAQ,CAACvO,EAAIC,EAAIuO,EAAW1N,EAAS,KAAMsL,EAAkB,KAAMC,EAAiB,KAAMoC,GAAQ,EAAOnS,GAAY,KAEnH0D,IAAOD,GAAgBC,EAAIC,KAC3Ba,EAAS4N,EAAgB1O,GACzB/T,EAAQ+T,EAAIoM,EAAiBC,GAAgB,GAC7CrM,EAAK,OAEa,IAAlBC,EAAGtD,YACHL,GAAY,EACZ2D,EAAGJ,gBAAkB,MAEzB,MAAM,KAAE3oB,EAAI,IAAE0Q,EAAG,UAAEuT,GAAc8E,EACjC,OAAQ/oB,GACJ,KAAKqoB,GACDoP,EAAY3O,EAAIC,EAAIuO,EAAW1N,GAC/B,MACJ,KAAKhF,GACD8S,EAAmB5O,EAAIC,EAAIuO,EAAW1N,GACtC,MACJ,KAAKtB,GACS,MAANQ,GACA6O,EAAgB5O,EAAIuO,EAAW1N,EAAQ2N,GAK3C,MACJ,KAAKnP,GACDwP,EAAgB9O,EAAIC,EAAIuO,EAAW1N,EAAQsL,EAAiBC,EAAgBoC,EAAOnS,GACnF,MACJ,QACoB,EAAZnB,EACA4T,EAAe/O,EAAIC,EAAIuO,EAAW1N,EAAQsL,EAAiBC,EAAgBoC,EAAOnS,GAEjE,EAAZnB,EACL6T,EAAiBhP,EAAIC,EAAIuO,EAAW1N,EAAQsL,EAAiBC,EAAgBoC,EAAOnS,IAEnE,GAAZnB,GAGa,IAAZA,IAFNjkB,EAAK+3B,QAAQjP,EAAIC,EAAIuO,EAAW1N,EAAQsL,EAAiBC,EAAgBoC,EAAOnS,EAAW4S,GAU5F,MAAPtnB,GAAewkB,GACfH,GAAOrkB,EAAKoY,GAAMA,EAAGpY,IAAKwkB,EAAiBC,EAAgBpM,IAG7D0O,EAAc,CAAC3O,EAAIC,EAAIuO,EAAW1N,KACpC,GAAU,MAANd,EACA6M,EAAY5M,EAAGzwB,GAAK89B,EAAerN,EAAG1iB,UAAYixB,EAAW1N,OAE5D,CACD,MAAMtxB,EAAMywB,EAAGzwB,GAAKwwB,EAAGxwB,GACnBywB,EAAG1iB,WAAayiB,EAAGziB,UACnBmwB,EAAYl+B,EAAIywB,EAAG1iB,YAIzBqxB,EAAqB,CAAC5O,EAAIC,EAAIuO,EAAW1N,KACjC,MAANd,EACA6M,EAAY5M,EAAGzwB,GAAKg+B,EAAkBvN,EAAG1iB,UAAY,IAAMixB,EAAW1N,GAItEb,EAAGzwB,GAAKwwB,EAAGxwB,IAGbq/B,EAAkB,CAAC5O,EAAIuO,EAAW1N,EAAQ2N,MAC3CxO,EAAGzwB,GAAIywB,EAAGa,QAAUwN,EAAwBrO,EAAG1iB,SAAUixB,EAAW1N,EAAQ2N,IA2C3EM,EAAiB,CAAC/O,EAAIC,EAAIuO,EAAW1N,EAAQsL,EAAiBC,EAAgBoC,EAAOnS,KACvFmS,EAAQA,GAAqB,QAAZxO,EAAG/oB,KACV,MAAN8oB,EACAmP,EAAalP,EAAIuO,EAAW1N,EAAQsL,EAAiBC,EAAgBoC,EAAOnS,GAG5E8S,EAAapP,EAAIC,EAAImM,EAAiBC,EAAgBoC,EAAOnS,IAG/D6S,EAAe,CAACznB,EAAO8mB,EAAW1N,EAAQsL,EAAiBC,EAAgBoC,EAAOnS,KACpF,IAAI9sB,EACA6/B,EACJ,MAAM,KAAEn4B,EAAI,MAAE0I,EAAK,UAAEub,EAAS,WAAES,EAAU,QAAE+E,EAAO,UAAEhE,EAAS,KAAEhB,GAASjU,EACzE,GACIA,EAAMlY,SACYiK,IAAlB20B,IACe,IAAfzR,EAKAntB,EAAKkY,EAAMlY,GAAK4+B,EAAc1mB,EAAMlY,QAEnC,CAcD,GAbAA,EAAKkY,EAAMlY,GAAK49B,EAAkB1lB,EAAMxQ,KAAMu3B,EAAO7uB,GAASA,EAAM0vB,IAGpD,EAAZnU,EACAyS,EAAmBp+B,EAAIkY,EAAMnK,UAEZ,GAAZ4d,GACLoU,EAAc7nB,EAAMnK,SAAU/N,EAAI,KAAM48B,EAAiBC,EAAgBoC,GAAkB,kBAATv3B,EAA0BolB,KAAe5U,EAAMmY,iBAEjIlE,GACAqO,GAAoBtiB,EAAO,KAAM0kB,EAAiB,WAGlDxsB,EAAO,CACP,IAAK,MAAMjW,KAAOiW,EACT,gBAAejW,IAChBqjC,EAAcx9B,EAAI7F,EAAK,KAAMiW,EAAMjW,GAAM8kC,EAAO/mB,EAAMnK,SAAU6uB,EAAiBC,EAAgBmD,IAGpGH,EAAYzvB,EAAM6vB,qBACnBC,GAAgBL,EAAWjD,EAAiB1kB,GAIpDumB,EAAWz+B,EAAImxB,EAASjZ,EAAO0kB,GAY/BzQ,GACAqO,GAAoBtiB,EAAO,KAAM0kB,EAAiB,eAItD,MAAMuD,IAA4BtD,GAAmBA,IAAmBA,EAAexO,gBACnFjC,IACCA,EAAW6J,UACZkK,GACA/T,EAAWjc,YAAYnQ,GAE3Bq9B,EAAWr9B,EAAIg/B,EAAW1N,KACrBuO,EAAYzvB,GAASA,EAAMgwB,iBAC5BD,GACAhU,IACAqQ,GAAsB,KAClBqD,GAAaK,GAAgBL,EAAWjD,EAAiB1kB,GACzDioB,GAA2B/T,EAAWiU,MAAMrgC,GAC5CmsB,GAAQqO,GAAoBtiB,EAAO,KAAM0kB,EAAiB,YAC3DC,IAGL4B,EAAa,CAACz+B,EAAImxB,EAASjZ,EAAO0kB,KAIpC,GAHIzL,GACAuN,EAAe1+B,EAAImxB,GAEnByL,EAAiB,CACjB,MAAM0D,EAAc1D,EAAgBl1B,KAAK64B,UAGrCD,GAAeA,IAAgBnP,GAC/BuN,EAAe1+B,EAAIsgC,EAAc,MAErC,IAAI5S,EAAUkP,EAAgBlP,QAC1B,EAIAxV,IAAUwV,GACV+Q,EAAWz+B,EAAI48B,EAAgB1kB,MAAMiZ,QAASyL,EAAgB1kB,MAAO0kB,EAAgBhvB,UAI3FmyB,EAAgB,CAAChyB,EAAUixB,EAAW1N,EAAQsL,EAAiBC,EAAgBoC,EAAOnS,EAAWhiB,EAAQ,KAC3G,IAAK,IAAInS,EAAImS,EAAOnS,EAAIoV,EAASnV,OAAQD,IAAK,CAC1C,MAAM8zB,EAAS1e,EAASpV,GAAKm0B,EACvBiF,GAAehkB,EAASpV,IACxBkzB,GAAe9d,EAASpV,IAC9BomC,EAAM,KAAMtS,EAAOuS,EAAW1N,EAAQsL,EAAiBC,EAAgBoC,EAAOnS,KAGhF8S,EAAe,CAACpP,EAAIC,EAAImM,EAAiBC,EAAgBoC,EAAOnS,KAClE,MAAM9sB,EAAMywB,EAAGzwB,GAAKwwB,EAAGxwB,GACvB,IAAI,UAAEmtB,EAAS,gBAAEkD,EAAe,KAAElE,GAASsE,EAG3CtD,GAA4B,GAAfqD,EAAGrD,UAChB,MAAMqT,EAAWhQ,EAAGpgB,OAAS,QACvBqwB,EAAWhQ,EAAGrgB,OAAS,QAC7B,IAAIyvB,EAaJ,IAZKA,EAAYY,EAASC,sBACtBR,GAAgBL,EAAWjD,EAAiBnM,EAAID,GAEhDrE,GACAqO,GAAoB/J,EAAID,EAAIoM,EAAiB,gBAQ7CzP,EAAY,EAAG,CAKf,GAAgB,GAAZA,EAEAwT,EAAW3gC,EAAIywB,EAAI+P,EAAUC,EAAU7D,EAAiBC,EAAgBoC,QAqBxE,GAhBgB,EAAZ9R,GACIqT,EAASzqB,QAAU0qB,EAAS1qB,OAC5BynB,EAAcx9B,EAAI,QAAS,KAAMygC,EAAS1qB,MAAOkpB,GAKzC,EAAZ9R,GACAqQ,EAAcx9B,EAAI,QAASwgC,EAAS16B,MAAO26B,EAAS36B,MAAOm5B,GAQ/C,EAAZ9R,EAA2B,CAE3B,MAAM6F,EAAgBvC,EAAGlD,aACzB,IAAK,IAAI50B,EAAI,EAAGA,EAAIq6B,EAAcp6B,OAAQD,IAAK,CAC3C,MAAMwB,EAAM64B,EAAcr6B,GACpBioC,EAAOJ,EAASrmC,GAChBiZ,EAAOqtB,EAAStmC,IAClBiZ,IAASwtB,GACRlD,GAAsBA,EAAmB19B,EAAI7F,KAC9CqjC,EAAcx9B,EAAI7F,EAAKymC,EAAMxtB,EAAM6rB,EAAOzO,EAAGziB,SAAU6uB,EAAiBC,EAAgBmD,IAOxF,EAAZ7S,GACIqD,EAAGziB,WAAa0iB,EAAG1iB,UACnBqwB,EAAmBp+B,EAAIywB,EAAG1iB,eAI5B+e,GAAgC,MAAnBuD,GAEnBsQ,EAAW3gC,EAAIywB,EAAI+P,EAAUC,EAAU7D,EAAiBC,EAAgBoC,GAE5E,MAAM4B,EAAiB5B,GAAqB,kBAAZxO,EAAG/oB,KAC/B2oB,EACAyQ,EAAmBtQ,EAAGH,gBAAiBA,EAAiBrwB,EAAI48B,EAAiBC,EAAgBgE,GAKvF/T,GAENiU,EAAcvQ,EAAIC,EAAIzwB,EAAI,KAAM48B,EAAiBC,EAAgBgE,KAEhEhB,EAAYY,EAASO,iBAAmB7U,IACzCqQ,GAAsB,KAClBqD,GAAaK,GAAgBL,EAAWjD,EAAiBnM,EAAID,GAC7DrE,GAAQqO,GAAoB/J,EAAID,EAAIoM,EAAiB,YACtDC,IAILiE,EAAqB,CAACG,EAAaC,EAAaC,EAAmBvE,EAAiBC,EAAgBoC,KACtG,IAAK,IAAItmC,EAAI,EAAGA,EAAIuoC,EAAYtoC,OAAQD,IAAK,CACzC,MAAMyoC,EAAWH,EAAYtoC,GACvB0oC,EAAWH,EAAYvoC,GAEvBqmC,EAGNoC,EAAS15B,OAASooB,KAGbS,GAAgB6Q,EAAUC,IAEN,EAArBD,EAASzV,WACY,GAArByV,EAASzV,UACP2S,EAAe8C,EAASphC,IAGtBmhC,EACRpC,EAAMqC,EAAUC,EAAUrC,EAAW,KAAMpC,EAAiBC,EAAgBoC,GAAO,KAGrF0B,EAAa,CAAC3gC,EAAIkY,EAAOsoB,EAAUC,EAAU7D,EAAiBC,EAAgBoC,KAChF,GAAIuB,IAAaC,EAAU,CACvB,IAAK,MAAMtmC,KAAOsmC,EAAU,CACxB,GAAI,gBAAetmC,GACf,SACJ,MAAMiZ,EAAOqtB,EAAStmC,GAChBymC,EAAOJ,EAASrmC,IAClBiZ,IAASwtB,GACRlD,GAAsBA,EAAmB19B,EAAI7F,KAC9CqjC,EAAcx9B,EAAI7F,EAAKymC,EAAMxtB,EAAM6rB,EAAO/mB,EAAMnK,SAAU6uB,EAAiBC,EAAgBmD,GAGnG,GAAIQ,IAAa,QACb,IAAK,MAAMrmC,KAAOqmC,EACT,gBAAermC,IAAUA,KAAOsmC,GACjCjD,EAAcx9B,EAAI7F,EAAKqmC,EAASrmC,GAAM,KAAM8kC,EAAO/mB,EAAMnK,SAAU6uB,EAAiBC,EAAgBmD,KAMlHV,EAAkB,CAAC9O,EAAIC,EAAIuO,EAAW1N,EAAQsL,EAAiBC,EAAgBoC,EAAOnS,KACxF,MAAMwU,EAAuB7Q,EAAGzwB,GAAKwwB,EAAKA,EAAGxwB,GAAK89B,EAAe,IAC3DyD,EAAqB9Q,EAAGa,OAASd,EAAKA,EAAGc,OAASwM,EAAe,IACvE,IAAI,UAAE3Q,EAAS,gBAAEkD,GAAoBI,EACjCtD,EAAY,IACZL,GAAY,GAQN,MAAN0D,GACA6M,EAAWiE,EAAqBtC,EAAW1N,GAC3C+L,EAAWkE,EAAmBvC,EAAW1N,GAIzCyO,EAActP,EAAG1iB,SAAUixB,EAAWuC,EAAmB3E,EAAiBC,EAAgBoC,EAAOnS,IAG7FK,EAAY,GACA,GAAZA,GACAkD,GAGAyQ,EAAmBtQ,EAAGH,gBAAiBA,EAAiB2O,EAAWpC,EAAiBC,EAAgBoC,IAS1F,MAAVxO,EAAGt2B,KACEyiC,GAAmBnM,IAAOmM,EAAgBlP,UAC3C8T,EAAuBhR,EAAIC,GAAI,IAQnCsQ,EAAcvQ,EAAIC,EAAIuO,EAAWuC,EAAmB3E,EAAiBC,EAAgBoC,EAAOnS,IAIlG0S,EAAmB,CAAChP,EAAIC,EAAIuO,EAAW1N,EAAQsL,EAAiBC,EAAgBoC,EAAOnS,KAC/E,MAAN0D,EACmB,IAAfC,EAAG9E,UACHiR,EAAgBnR,IAAIgW,SAAShR,EAAIuO,EAAW1N,EAAQ2N,EAAOnS,GAG3D4U,EAAejR,EAAIuO,EAAW1N,EAAQsL,EAAiBC,EAAgBoC,EAAOnS,GAIlF6U,EAAgBnR,EAAIC,EAAI3D,IAG1B4U,EAAiB,CAACE,EAAc5C,EAAW1N,EAAQsL,EAAiBC,EAAgBoC,EAAOnS,KAC7F,MAAMvV,EAAYqqB,EAAajxB,UAAYkxB,GAAwBD,EAAchF,EAAiBC,GAsBlG,GAbIjE,GAAYgJ,KACZrqB,EAASkU,IAAIqW,SAAWpC,GAM5BqC,GAAexqB,GAMVA,EAASyqB,UAIV,GAHAnF,GAAkBA,EAAeoF,YAAY1qB,EAAU2qB,IAGlDN,EAAa5hC,GAAI,CAClB,MAAMmiC,EAAe5qB,EAASmW,QAAUrB,GAAYC,IACpD8S,EAAmB,KAAM+C,EAAanD,EAAW1N,SAIzD4Q,EAAkB3qB,EAAUqqB,EAAc5C,EAAW1N,EAAQuL,EAAgBoC,EAAOnS,IAMlF6U,EAAkB,CAACnR,EAAIC,EAAI3D,KAC7B,MAAMvV,EAAYkZ,EAAG9f,UAAY6f,EAAG7f,UACpC,GAAIgc,GAAsB6D,EAAIC,EAAI3D,GAAY,CAC1C,GACIvV,EAASyqB,WACRzqB,EAAS6qB,cAUV,YAJAC,EAAyB9qB,EAAUkZ,EAAI3D,GAQvCvV,EAASnE,KAAOqd,EAGhBvH,GAAc3R,EAASsgB,QAEvBtgB,EAASsgB,cAKbpH,EAAG9f,UAAY6f,EAAG7f,UAClB8f,EAAGzwB,GAAKwwB,EAAGxwB,GACXuX,EAASW,MAAQuY,GAGnByR,EAAoB,CAAC3qB,EAAUqqB,EAAc5C,EAAW1N,EAAQuL,EAAgBoC,EAAOnS,KAEzFvV,EAASsgB,OAAS,GAAO,WACrB,GAAKtgB,EAASke,UA4DT,CAID,IAEIoK,GAFA,KAAEzsB,EAAI,GAAEkvB,EAAE,EAAEC,EAAC,OAAE30B,EAAM,MAAEsK,GAAUX,EACjCirB,EAAapvB,EAEb,EAGAA,EACAivB,EAAyB9qB,EAAUnE,EAAM0Z,GAGzC1Z,EAAO8E,EAEX9E,EAAKpT,GAAKkY,EAAMlY,GAEZsiC,GACA,gBAAeA,IAGdzC,EAAYzsB,EAAKhD,OAASgD,EAAKhD,MAAMswB,sBACtCR,GAAgBL,EAAWjyB,EAAQwF,EAAM8E,GAM7C,MAAMuqB,EAAWvX,GAAoB3T,GACjC,EAGJ,MAAMmrB,EAAWnrB,EAASmW,QAC1BnW,EAASmW,QAAU+U,EAGflrB,EAASwlB,OAAS,UAClBxlB,EAASwlB,KAAO,IAKpBgC,EAAM2D,EAAUD,EAEhBnE,EAAeoE,EAAS1iC,IAExBk/B,EAAgBwD,GAAWnrB,EAAUslB,EAAgBoC,GAIrD7rB,EAAKpT,GAAKyiC,EAASziC,GACA,OAAfwiC,GAIA/U,GAAgBlW,EAAUkrB,EAASziC,IAGnCuiC,GACA/F,GAAsB+F,EAAG1F,IAGxBgD,EAAYzsB,EAAKhD,OAASgD,EAAKhD,MAAM4wB,iBACtCxE,GAAsB,KAClB0D,GAAgBL,EAAWjyB,EAAQwF,EAAM8E,IAC1C2kB,OA9Hc,CACrB,IAAIgD,EACJ,MAAM,GAAE7/B,EAAE,MAAEoQ,GAAUwxB,GAChB,GAAEe,EAAE,EAAE7yB,EAAC,OAAElC,GAAW2J,EAEtBorB,GACA,gBAAeA,IAGd9C,EAAYzvB,GAASA,EAAM6vB,qBAC5BC,GAAgBL,EAAWjyB,EAAQg0B,GAMvC,MAAMlU,EAAWnW,EAASmW,QAAUxC,GAAoB3T,GACpD,EAGAvX,GAAM4iC,EAKNA,EAAYhB,EAAa5hC,GAAI0tB,EAASnW,EAAUslB,IAShDkC,EAAM,KAAMrR,EAASsR,EAAW1N,EAAQ/Z,EAAUslB,EAAgBoC,GAIlE2C,EAAa5hC,GAAK0tB,EAAQ1tB,IAG1B8P,GACA0sB,GAAsB1sB,EAAG+sB,IAGxBgD,EAAYzvB,GAASA,EAAMgwB,iBAC5B5D,GAAsB,KAClB0D,GAAgBL,EAAWjyB,EAAQg0B,IACpC/E,GAKP,MAAM,EAAEvjC,GAAMie,EACVje,GACyB,IAAzBsoC,EAAajW,WACb6Q,GAAsBljC,EAAGujC,GAE7BtlB,EAASke,WAAY,KA6EmD8G,KAE9E8F,EAA2B,CAAC9qB,EAAUsV,EAAWC,KACnDD,EAAUlc,UAAY4G,EACtB,MAAMwV,EAAYxV,EAASW,MAAM9H,MACjCmH,EAASW,MAAQ2U,EACjBtV,EAASnE,KAAO,KAChBuf,GAAYpb,EAAUsV,EAAUzc,MAAO2c,EAAWD,GAClDuN,GAAY9iB,EAAUsV,EAAU9e,UAGhC0b,QAAiBxf,EAAWsN,EAASsgB,SAEnCkJ,EAAgB,CAACvQ,EAAIC,EAAIuO,EAAW1N,EAAQsL,EAAiBC,EAAgBoC,EAAOnS,GAAY,KAClG,MAAM+V,EAAKrS,GAAMA,EAAGziB,SACd+0B,EAAgBtS,EAAKA,EAAG7E,UAAY,EACpCoX,EAAKtS,EAAG1iB,UACR,UAAEof,EAAS,UAAExB,GAAc8E,EAEjC,GAAItD,EAAY,EAAG,CACf,GAAgB,IAAZA,EAIA,YADA6V,EAAmBH,EAAIE,EAAI/D,EAAW1N,EAAQsL,EAAiBC,EAAgBoC,EAAOnS,GAGrF,GAAgB,IAAZK,EAGL,YADA8V,EAAqBJ,EAAIE,EAAI/D,EAAW1N,EAAQsL,EAAiBC,EAAgBoC,EAAOnS,GAKhF,EAAZnB,GAEoB,GAAhBmX,GACA9C,EAAgB6C,EAAIjG,EAAiBC,GAErCkG,IAAOF,GACPzE,EAAmBY,EAAW+D,IAId,GAAhBD,EAEgB,GAAZnX,EAEAqX,EAAmBH,EAAIE,EAAI/D,EAAW1N,EAAQsL,EAAiBC,EAAgBoC,EAAOnS,GAItFkT,EAAgB6C,EAAIjG,EAAiBC,GAAgB,IAMrC,EAAhBiG,GACA1E,EAAmBY,EAAW,IAGlB,GAAZrT,GACAoU,EAAcgD,EAAI/D,EAAW1N,EAAQsL,EAAiBC,EAAgBoC,EAAOnS,KAKvFmW,EAAuB,CAACJ,EAAIE,EAAI/D,EAAW1N,EAAQsL,EAAiBC,EAAgBoC,EAAOnS,KAC7F+V,EAAKA,GAAM,QACXE,EAAKA,GAAM,QACX,MAAMG,EAAYL,EAAGjqC,OACfuqC,EAAYJ,EAAGnqC,OACfwqC,EAAexmB,KAAKymB,IAAIH,EAAWC,GACzC,IAAIxqC,EACJ,IAAKA,EAAI,EAAGA,EAAIyqC,EAAczqC,IAAK,CAC/B,MAAM2qC,EAAaP,EAAGpqC,GAAKm0B,EACrBiF,GAAegR,EAAGpqC,IAClBkzB,GAAekX,EAAGpqC,IACxBomC,EAAM8D,EAAGlqC,GAAI2qC,EAAWtE,EAAW,KAAMpC,EAAiBC,EAAgBoC,EAAOnS,GAEjFoW,EAAYC,EAEZnD,EAAgB6C,EAAIjG,EAAiBC,GAAgB,EAAMuG,GAI3DrD,EAAcgD,EAAI/D,EAAW1N,EAAQsL,EAAiBC,EAAgBoC,EAAOnS,EAAWsW,IAI1FJ,EAAqB,CAACH,EAAIE,EAAI/D,EAAWuE,EAAc3G,EAAiBC,EAAgBoC,EAAOnS,KACjG,IAAIn0B,EAAI,EACR,MAAM6qC,EAAKT,EAAGnqC,OACd,IAAI6qC,EAAKZ,EAAGjqC,OAAS,EACjB8qC,EAAKF,EAAK,EAId,MAAO7qC,GAAK8qC,GAAM9qC,GAAK+qC,EAAI,CACvB,MAAMlT,EAAKqS,EAAGlqC,GACR83B,EAAMsS,EAAGpqC,GAAKm0B,EACdiF,GAAegR,EAAGpqC,IAClBkzB,GAAekX,EAAGpqC,IACxB,IAAI43B,GAAgBC,EAAIC,GAIpB,MAHAsO,EAAMvO,EAAIC,EAAIuO,EAAW,KAAMpC,EAAiBC,EAAgBoC,EAAOnS,GAK3En0B,IAKJ,MAAOA,GAAK8qC,GAAM9qC,GAAK+qC,EAAI,CACvB,MAAMlT,EAAKqS,EAAGY,GACRhT,EAAMsS,EAAGW,GAAM5W,EACfiF,GAAegR,EAAGW,IAClB7X,GAAekX,EAAGW,IACxB,IAAInT,GAAgBC,EAAIC,GAIpB,MAHAsO,EAAMvO,EAAIC,EAAIuO,EAAW,KAAMpC,EAAiBC,EAAgBoC,EAAOnS,GAK3E2W,IACAC,IASJ,GAAI/qC,EAAI8qC,GACJ,GAAI9qC,GAAK+qC,EAAI,CACT,MAAMC,EAAUD,EAAK,EACfpS,EAASqS,EAAUH,EAAKT,EAAGY,GAAS3jC,GAAKujC,EAC/C,MAAO5qC,GAAK+qC,EACR3E,EAAM,KAAOgE,EAAGpqC,GAAKm0B,EACfiF,GAAegR,EAAGpqC,IAClBkzB,GAAekX,EAAGpqC,IAAMqmC,EAAW1N,EAAQsL,EAAiBC,EAAgBoC,GAClFtmC,UAWP,GAAIA,EAAI+qC,EACT,MAAO/qC,GAAK8qC,EACRhnB,EAAQomB,EAAGlqC,GAAIikC,EAAiBC,GAAgB,GAChDlkC,QAOH,CACD,MAAMirC,EAAKjrC,EACLkrC,EAAKlrC,EAELmrC,EAAmB,IAAIz9B,IAC7B,IAAK1N,EAAIkrC,EAAIlrC,GAAK+qC,EAAI/qC,IAAK,CACvB,MAAM2qC,EAAaP,EAAGpqC,GAAKm0B,EACrBiF,GAAegR,EAAGpqC,IAClBkzB,GAAekX,EAAGpqC,IACH,MAAjB2qC,EAAUnpC,KAIV2pC,EAAiBjpC,IAAIyoC,EAAUnpC,IAAKxB,GAK5C,IAAIorC,EACAC,EAAU,EACd,MAAMC,EAAcP,EAAKG,EAAK,EAC9B,IAAIK,GAAQ,EAERC,EAAmB,EAMvB,MAAMC,EAAwB,IAAI7oC,MAAM0oC,GACxC,IAAKtrC,EAAI,EAAGA,EAAIsrC,EAAatrC,IACzByrC,EAAsBzrC,GAAK,EAC/B,IAAKA,EAAIirC,EAAIjrC,GAAK8qC,EAAI9qC,IAAK,CACvB,MAAM0rC,EAAYxB,EAAGlqC,GACrB,GAAIqrC,GAAWC,EAAa,CAExBxnB,EAAQ4nB,EAAWzH,EAAiBC,GAAgB,GACpD,SAEJ,IAAIyH,EACJ,GAAqB,MAAjBD,EAAUlqC,IACVmqC,EAAWR,EAAiBp9B,IAAI29B,EAAUlqC,UAI1C,IAAK4pC,EAAIF,EAAIE,GAAKL,EAAIK,IAClB,GAAsC,IAAlCK,EAAsBL,EAAIF,IAC1BtT,GAAgB8T,EAAWtB,EAAGgB,IAAK,CACnCO,EAAWP,EACX,WAIK95B,IAAbq6B,EACA7nB,EAAQ4nB,EAAWzH,EAAiBC,GAAgB,IAGpDuH,EAAsBE,EAAWT,GAAMlrC,EAAI,EACvC2rC,GAAYH,EACZA,EAAmBG,EAGnBJ,GAAQ,EAEZnF,EAAMsF,EAAWtB,EAAGuB,GAAWtF,EAAW,KAAMpC,EAAiBC,EAAgBoC,EAAOnS,GACxFkX,KAKR,MAAMO,EAA6BL,EAC7BM,GAAYJ,GACZ,QAGN,IAFAL,EAAIQ,EAA2B3rC,OAAS,EAEnCD,EAAIsrC,EAAc,EAAGtrC,GAAK,EAAGA,IAAK,CACnC,MAAM8rC,EAAYZ,EAAKlrC,EACjB2qC,EAAYP,EAAG0B,GACfnT,EAASmT,EAAY,EAAIjB,EAAKT,EAAG0B,EAAY,GAAGzkC,GAAKujC,EAC1B,IAA7Ba,EAAsBzrC,GAEtBomC,EAAM,KAAMuE,EAAWtE,EAAW1N,EAAQsL,EAAiBC,EAAgBoC,GAEtEiF,IAIDH,EAAI,GAAKprC,IAAM4rC,EAA2BR,GAC1CW,EAAKpB,EAAWtE,EAAW1N,EAAQ,GAGnCyS,QAMdW,EAAO,CAACxsB,EAAO8mB,EAAW1N,EAAQqT,EAAU9H,EAAiB,QAC/D,MAAM,GAAE78B,EAAE,KAAE0H,EAAI,WAAE0kB,EAAU,SAAEre,EAAQ,UAAE4d,GAAczT,EACtD,GAAgB,EAAZyT,EAEA,YADA+Y,EAAKxsB,EAAMvH,UAAU+c,QAASsR,EAAW1N,EAAQqT,GAGrD,GAAiB,IAAZhZ,EAED,YADAzT,EAAMkW,SAASsW,KAAK1F,EAAW1N,EAAQqT,GAG3C,GAAgB,GAAZhZ,EAEA,YADAjkB,EAAKg9B,KAAKxsB,EAAO8mB,EAAW1N,EAAQoO,GAGxC,GAAIh4B,IAASooB,GAAU,CACnBuN,EAAWr9B,EAAIg/B,EAAW1N,GAC1B,IAAK,IAAI34B,EAAI,EAAGA,EAAIoV,EAASnV,OAAQD,IACjC+rC,EAAK32B,EAASpV,GAAIqmC,EAAW1N,EAAQqT,GAGzC,YADAtH,EAAWnlB,EAAMoZ,OAAQ0N,EAAW1N,GASxC,MAAMsT,EAA8B,IAAbD,GACP,EAAZhZ,GACAS,EACJ,GAAIwY,EACA,GAAiB,IAAbD,EACAvY,EAAWjc,YAAYnQ,GACvBq9B,EAAWr9B,EAAIg/B,EAAW1N,GAC1BkL,GAAsB,IAAMpQ,EAAWiU,MAAMrgC,GAAK68B,OAEjD,CACD,MAAM,MAAEgI,EAAK,WAAE/M,EAAU,WAAEF,GAAexL,EACpCrsB,EAAS,IAAMs9B,EAAWr9B,EAAIg/B,EAAW1N,GACzCwT,EAAe,KACjBD,EAAM7kC,EAAI,KACND,IACA63B,GAAcA,OAGlBE,EACAA,EAAW93B,EAAID,EAAQ+kC,GAGvBA,SAKRzH,EAAWr9B,EAAIg/B,EAAW1N,IAG5B7U,EAAU,CAACvE,EAAO0kB,EAAiBC,EAAgBkI,GAAW,KAChE,MAAM,KAAEr9B,EAAI,MAAE0I,EAAK,IAAEgI,EAAG,SAAErK,EAAQ,gBAAEsiB,EAAe,UAAE1E,EAAS,UAAEwB,EAAS,KAAEhB,GAASjU,EAKpF,GAHW,MAAPE,GAAewkB,GACfH,GAAOrkB,EAAK,KAAMwkB,EAAiBC,EAAgB,MAEvC,IAAZlR,EAEA,YADAiR,EAAgBnR,IAAIuZ,WAAW9sB,GAGnC,MAAM+sB,EAA+B,EAAZtZ,GAA+BQ,EACxD,IAAI0T,EAIJ,IAHKA,EAAYzvB,GAASA,EAAM80B,uBAC5BhF,GAAgBL,EAAWjD,EAAiB1kB,GAEhC,EAAZyT,EACAwZ,EAAiBjtB,EAAMvH,UAAWksB,EAAgBkI,OAEjD,CACD,GAAiB,IAAZpZ,EAED,YADAzT,EAAMkW,SAAS3R,QAAQogB,EAAgBkI,GAGvCE,GACAzK,GAAoBtiB,EAAO,KAAM0kB,EAAiB,iBAElDvM,IAEC3oB,IAASooB,IACL3C,EAAY,GAAiB,GAAZA,GAEtB6S,EAAgB3P,EAAiBuM,EAAiBC,GAEjC,GAAZlR,GACLqU,EAAgBjyB,EAAU6uB,EAAiBC,GAG/B,GAAZlR,GACAzT,EAAMxQ,KAAK3H,OAAOmY,EAAOwnB,GAEzBqF,GACAhlC,EAAOmY,KAGV2nB,EAAYzvB,GAASA,EAAM6H,mBAAqBgtB,IACjDzI,GAAsB,KAClBqD,GAAaK,GAAgBL,EAAWjD,EAAiB1kB,GACzD+sB,GACIzK,GAAoBtiB,EAAO,KAAM0kB,EAAiB,cACvDC,IAGL98B,EAASmY,IACX,MAAM,KAAExQ,EAAI,GAAE1H,EAAE,OAAEsxB,EAAM,WAAElF,GAAelU,EACzC,GAAIxQ,IAASooB,GAET,YADAsV,EAAeplC,EAAIsxB,GAOvB,MAAM+T,EAAgB,KAClB/H,EAAWt9B,GACPosB,IAAeA,EAAW6J,WAAa7J,EAAWwL,YAClDxL,EAAWwL,cAGnB,GAAsB,EAAlB1f,EAAMyT,WACNS,IACCA,EAAW6J,UAAW,CACvB,MAAM,MAAE4O,EAAK,WAAE/M,GAAe1L,EACxB0Y,EAAe,IAAMD,EAAM7kC,EAAIqlC,GACjCvN,EACAA,EAAW5f,EAAMlY,GAAIqlC,EAAeP,GAGpCA,SAIJO,KAGFD,EAAiB,CAAC7d,EAAKxc,KAGzB,IAAIqI,EACJ,MAAOmU,IAAQxc,EACXqI,EAAOorB,EAAgBjX,GACvB+V,EAAW/V,GACXA,EAAMnU,EAEVkqB,EAAWvyB,IAETo6B,EAAmB,CAAC5tB,EAAUslB,EAAgBkI,KAIhD,MAAM,IAAEO,EAAG,QAAErmB,EAAO,OAAE4Y,EAAM,QAAEnK,EAAO,GAAE6X,GAAOhuB,EAK9C,GAHI+tB,GACA,gBAAeA,GAEfrmB,EACA,IAAK,IAAItmB,EAAI,EAAGA,EAAIsmB,EAAQrmB,OAAQD,IAChCilB,EAAKqB,EAAQtmB,IAKjBk/B,IACAja,EAAKia,GACLpb,EAAQiR,EAASnW,EAAUslB,EAAgBkI,IAG3CQ,GACA/I,GAAsB+I,EAAI1I,GAE9BL,GAAsB,KAClBjlB,EAASY,aAAc,GACxB0kB,GAKCA,GACAA,EAAexO,gBACdwO,EAAe1kB,aAChBZ,EAASyqB,WACRzqB,EAAS6qB,eACV7qB,EAASiuB,aAAe3I,EAAe4I,YACvC5I,EAAexe,OACa,IAAxBwe,EAAexe,MACfwe,EAAeptB,YAOrBuwB,EAAkB,CAACjyB,EAAU6uB,EAAiBC,EAAgBkI,GAAW,EAAOj6B,EAAQ,KAC1F,IAAK,IAAInS,EAAImS,EAAOnS,EAAIoV,EAASnV,OAAQD,IACrC8jB,EAAQ1O,EAASpV,GAAIikC,EAAiBC,EAAgBkI,IAGxD7F,EAAkBhnB,GACE,EAAlBA,EAAMyT,UACCuT,EAAgBhnB,EAAMvH,UAAU+c,SAEpB,IAAlBxV,EAAMyT,UACAzT,EAAMkW,SAAShb,OAEnBorB,EAAiBtmB,EAAMoZ,QAAUpZ,EAAMlY,IAa5CwhC,EAAyB,CAAChR,EAAIC,EAAI5Q,GAAU,KAC9C,MAAM6lB,EAAMlV,EAAGziB,SACT43B,EAAMlV,EAAG1iB,SACf,GAAI,gBAAQ23B,IAAQ,gBAAQC,GACxB,IAAK,IAAIhtC,EAAI,EAAGA,EAAI+sC,EAAI9sC,OAAQD,IAAK,CAGjC,MAAMkqC,EAAK6C,EAAI/sC,GACToqC,EAAM4C,EAAIhtC,GAAKo5B,GAAe4T,EAAIhtC,IACrB,EAAfoqC,EAAGpX,YAAgCoX,EAAG1S,mBAClC0S,EAAG5V,WAAa,GAAsB,KAAjB4V,EAAG5V,aACxB4V,EAAG/iC,GAAK6iC,EAAG7iC,IAEV6f,GACD2hB,EAAuBqB,EAAIE,MAQzCzX,EAAS,CAACpT,EAAO8mB,KACN,MAAT9mB,EACI8mB,EAAU4G,QACVnpB,EAAQuiB,EAAU4G,OAAQ,KAAM,MAAM,GAI1C7G,EAAMC,EAAU4G,QAAU,KAAM1tB,EAAO8mB,GAE3CpV,KACAoV,EAAU4G,OAAS1tB,GAEjBwnB,EAAY,CACd7W,EAAGkW,EACHwG,GAAI9oB,EACJ3M,EAAG40B,EACHjgB,EAAG1kB,EACH8lC,GAAInE,EACJoE,GAAI/F,EACJgG,GAAIhF,EACJiF,IAAKlF,EACL3jC,EAAG+hC,EACH+G,EAAG76B,GAEP,IAAIiwB,EACAuH,EAIJ,OAHIzF,KACC9B,EAASuH,GAAezF,EAAmBuC,IAEzC,CACHpU,SACA+P,UACA6K,UAAW9K,GAAa9P,EAAQ+P,IAGxC,SAAS6E,GAAgB3L,EAAMhd,EAAUW,EAAO0U,EAAY,MACxDxF,GAA2BmN,EAAMhd,EAAU,EAAoB,CAC3DW,EACA0U,IAIR,SAAS4X,GAAY/pC,GACjB,MAAMouB,EAAIpuB,EAAIqC,QACRikB,EAAS,CAAC,GAChB,IAAIpoB,EAAGorC,EAAGxB,EAAGhwB,EAAG9V,EAChB,MAAMkgB,EAAMliB,EAAI7B,OAChB,IAAKD,EAAI,EAAGA,EAAIgkB,EAAKhkB,IAAK,CACtB,MAAMwtC,EAAO1rC,EAAI9B,GACjB,GAAa,IAATwtC,EAAY,CAEZ,GADApC,EAAIhjB,EAAOA,EAAOnoB,OAAS,GACvB6B,EAAIspC,GAAKoC,EAAM,CACftd,EAAElwB,GAAKorC,EACPhjB,EAAO5Y,KAAKxP,GACZ,SAEJ4pC,EAAI,EACJhwB,EAAIwO,EAAOnoB,OAAS,EACpB,MAAO2pC,EAAIhwB,EACP9V,GAAM8lC,EAAIhwB,GAAK,EAAK,EAChB9X,EAAIsmB,EAAOtkB,IAAM0pC,EACjB5D,EAAI9lC,EAAI,EAGR8V,EAAI9V,EAGR0pC,EAAO1rC,EAAIsmB,EAAOwhB,MACdA,EAAI,IACJ1Z,EAAElwB,GAAKooB,EAAOwhB,EAAI,IAEtBxhB,EAAOwhB,GAAK5pC,IAIxB4pC,EAAIxhB,EAAOnoB,OACX2Z,EAAIwO,EAAOwhB,EAAI,GACf,MAAOA,KAAM,EACTxhB,EAAOwhB,GAAKhwB,EACZA,EAAIsW,EAAEtW,GAEV,OAAOwO,EAQX,MAAMqlB,GAAwB,GAE9B,SAASC,GAAMC,EAAQld,EAAIhe,GAMvB,OAAOm7B,GAAQD,EAAQld,EAAIhe,GAE/B,SAASm7B,GAAQD,EAAQld,GAAI,UAAEod,EAAS,KAAEC,EAAI,MAAE/uB,EAAK,QAAEgvB,EAAO,UAAEC,GAAc,QAAWpvB,EAAWmY,IAehG,IAAIpK,EACJ,MAAMshB,EAAcxmB,GAAMkmB,GA8C1B,GA7CIM,EACAthB,EAAS,IAAMghB,EAAOvqC,MAEjBuoB,GAAWgiB,IAChBhhB,EAAS,IAAMghB,EACfG,GAAO,GAGPnhB,EADK,gBAAQghB,GACJ,IAAMA,EAAOhuC,IAAI21B,GAClB7N,GAAM6N,GACCA,EAAElyB,MAEJuoB,GAAW2J,GACT4Y,GAAS5Y,GAEX,gBAAWA,GACT/H,GAAsB+H,EAAG1W,EAAU,QADzC,GAQJ,gBAAW+uB,GACZld,EAES,IAAMlD,GAAsBogB,EAAQ/uB,EAAU,GAI9C,KACL,IAAIA,IAAYA,EAASY,YAMzB,OAHI2uB,GACAA,IAEG5gB,GAAsBogB,EAAQ/uB,EAAU,EAAwB,CAACwvB,KAKvE,QAGT3d,GAAMqd,EAAM,CACZ,MAAMO,EAAa1hB,EACnBA,EAAS,IAAMuhB,GAASG,KAE5B,IAAIF,EACJ,MAAMC,EAAgB7qC,IAClB4qC,EAAUG,EAAO77B,QAAQ0S,OAAS,KAC9BoI,GAAsBhqB,EAAIqb,EAAU,KAG5C,IAAIzZ,EAAW,gBAAQwoC,GAAU,GAAKF,GACtC,MAAMrd,EAAM,KACR,GAAKke,EAAOppB,OAGZ,GAAIuL,EAAI,CAEJ,MAAMrK,EAAWkoB,KACbR,GAAQG,GAAe,gBAAW7nB,EAAUjhB,MAExCgpC,GACAA,IAEJ1f,GAA2BgC,EAAI7R,EAAU,EAAwB,CAC7DwH,EAEAjhB,IAAasoC,QAAwBn8B,EAAYnM,EACjDipC,IAEJjpC,EAAWihB,QAKfkoB,KAMR,IAAIjpB,EADJ+K,EAAI5J,eAAiBiK,EAGjBpL,EADU,SAAVtG,EACYqR,EAEG,SAAVrR,EACO,IAAM8kB,GAAsBzT,EAAKxR,GAAYA,EAAS6W,UAItD,MACH7W,GAAYA,EAASke,UACtBlM,GAAgBR,GAKhBA,KAIZ,MAAMke,EAAS,EAAO3hB,EAAQ,CAC1B3H,MAAM,EACN+oB,UACAC,YACA3oB,cAkBJ,OAhBAkpB,GAA0BD,GAEtB7d,EACIod,EACAzd,IAGAjrB,EAAWmpC,IAGA,SAAVvvB,EACL8kB,GAAsByK,EAAQ1vB,GAAYA,EAAS6W,UAGnD6Y,IAEG,KACHrpB,EAAKqpB,GACD1vB,GACA,gBAAOA,EAAS0H,QAASgoB,IAKrC,SAASE,GAAcb,EAAQld,EAAIhe,GAC/B,MAAMg8B,EAAalrB,KAAKkI,MAClBkB,EAAS,gBAASghB,GAClB,IAAMc,EAAWd,GACjBA,EAAO38B,KAAKy9B,GAClB,OAAOb,GAAQjhB,EAAQ8D,EAAGzf,KAAKy9B,GAAah8B,EAAS8Q,MAEzD,SAAS2qB,GAAS9qC,EAAO2tB,EAAO,IAAI9N,KAChC,IAAK,gBAAS7f,IAAU2tB,EAAK7K,IAAI9iB,GAC7B,OAAOA,EAGX,GADA2tB,EAAK9W,IAAI7W,GACLqkB,GAAMrkB,GACN8qC,GAAS9qC,EAAMA,MAAO2tB,QAErB,GAAI,gBAAQ3tB,GACb,IAAK,IAAIpD,EAAI,EAAGA,EAAIoD,EAAMnD,OAAQD,IAC9BkuC,GAAS9qC,EAAMpD,GAAI+wB,QAGtB,GAAI,gBAAM3tB,GACXA,EAAM+C,QAAQ,CAACtC,EAAGrC,KAEd0sC,GAAS9qC,EAAM2K,IAAIvM,GAAMuvB,UAG5B,GAAI,gBAAM3tB,GACXA,EAAM+C,QAAQyT,IACVs0B,GAASt0B,EAAGmX,UAIhB,IAAK,MAAMvvB,KAAO4B,EACd8qC,GAAS9qC,EAAM5B,GAAMuvB,GAG7B,OAAO3tB,EAGX,SAASwgB,GAAQpiB,EAAK4B,GAClB,GAAK2zB,GAKA,CACD,IAAIyL,EAAWzL,GAAgByL,SAM/B,MAAMkM,EAAiB3X,GAAgB9hB,QAAU8hB,GAAgB9hB,OAAOutB,SACpEkM,IAAmBlM,IACnBA,EAAWzL,GAAgByL,SAAW5iC,OAAOC,OAAO6uC,IAGxDlM,EAAShhC,GAAO4B,OAhBZ,EAmBZ,SAASurC,GAAOntC,EAAKm5B,EAAciU,GAAwB,GAGvD,MAAMhwB,EAAWmY,IAAmB1E,GACpC,GAAIzT,EAAU,CACV,MAAM4jB,EAAW5jB,EAAS4jB,SAC1B,GAAIhhC,KAAOghC,EAEP,OAAOA,EAAShhC,GAEf,GAAIyH,UAAUhJ,OAAS,EACxB,OAAO2uC,GAAyB,gBAAWjU,GACrCA,IACAA,OAML,EAgBb,IAAIkU,IAAmB,EACvB,SAASC,GAAalwB,EAAUnM,EAASs8B,EAAe,GAAIC,EAAgB,GAAItd,GAAU,GACtF,MAAM,OAENQ,EAAQC,QAAS8c,EAEjBz+B,KAAM0+B,EAAapiB,SAAUqiB,EAAe,QAAEC,EAAS1B,MAAO2B,EAAczrB,QAAS0rB,EAAgBX,OAAQY,EAAa,WAE1Hn5B,EAAU,WAAEmsB,EAAU,YAEtBiN,EAAW,QAAEC,EAAO,aAAEC,EAAY,QAAEC,EAAO,UAAEC,EAAS,YAAEC,EAAW,cAAEC,EAAa,cAAEC,EAAa,UAAEC,EAAS,UAAEC,EAAS,OAAEtd,EAAM,cAAEud,EAAa,gBAAEC,EAAe,cAAEC,GAAkB39B,EAC7Kg8B,EAAa7vB,EAAS6M,MACtBqH,EAAMlU,EAASkU,IACfud,EAAezxB,EAASuO,WAAW+E,OACrCR,GAAWiB,GAAU/T,EAAS+T,SAAW,UACzC/T,EAAS+T,OAASA,GAGjBjB,IACDmd,IAAmB,EACnByB,GAAa,eAAgB79B,EAASg8B,EAAY4B,GAClDxB,IAAmB,EAEnB0B,GAAY3xB,EAAUyxB,EAActB,EAAcC,IAGlDC,GACAH,GAAalwB,EAAUqwB,EAAgBF,EAAcC,GAAe,GAGpE9c,GACAqe,GAAY3xB,EAAUsT,EAAQ6c,EAAcC,GAkBhD,GAAIO,EACA,GAAI,gBAAQA,GACR,IAAK,IAAIvvC,EAAI,EAAGA,EAAIuvC,EAActvC,OAAQD,IAAK,CAC3C,MAAMwB,EAAM+tC,EAAcvvC,GAC1B8yB,EAAItxB,GAAOmtC,GAAOntC,QAOtB,IAAK,MAAMA,KAAO+tC,EAAe,CAC7B,MAAM9U,EAAM8U,EAAc/tC,GACtB,gBAASi5B,GACT3H,EAAItxB,GAAOmtC,GAAOlU,EAAIzxB,MAAQxH,EAAKi5B,EAAI1iB,SAAS,GAGhD+a,EAAItxB,GAAOmtC,GAAOlU,GAQlC,GAAI2U,EACA,IAAK,MAAM5tC,KAAO4tC,EAAS,CACvB,MAAMoB,EAAgBpB,EAAQ5tC,GAC1B,gBAAWgvC,KACX1d,EAAItxB,GAAOgvC,EAAcx/B,KAAKy9B,IAqC1C,GA1BK/c,EAuBIwd,GACLH,EAAav/B,KAAK0/B,IAvBdH,EAAa9uC,QACb8uC,EAAa5oC,QAAQsqC,GAAUC,GAAY9xB,EAAU6xB,EAAQhC,IAE7DS,GACAwB,GAAY9xB,EAAUswB,EAAaT,IAqBvCU,EACA,IAAK,MAAM3tC,KAAO2tC,EAAiB,CAC/B,MAAM1U,EAAM0U,EAAgB3tC,GACtBuM,EAAM,gBAAW0sB,GACjBA,EAAIzpB,KAAKy9B,EAAYA,GACrB,gBAAWhU,EAAI1sB,KACX0sB,EAAI1sB,IAAIiD,KAAKy9B,EAAYA,GACzB,QACN,EAGJ,MAAMvsC,GAAO,gBAAWu4B,IAAQ,gBAAWA,EAAIv4B,KACzCu4B,EAAIv4B,IAAI8O,KAAKy9B,GAKT,QACJ3qC,EAAI,GAAS,CACfiK,MACA7L,QAEJtC,OAAO0F,eAAewtB,EAAKtxB,EAAK,CAC5BgE,YAAY,EACZD,cAAc,EACdwI,IAAK,IAAMjK,EAAEV,MACblB,IAAK0X,GAAM9V,EAAEV,MAAQwW,IAiBjC,GAVIy1B,GACAL,EAAcx/B,KAAK6/B,IAElB3d,GAAWsd,EAAc/uC,QAC1B+uC,EAAc7oC,QAAQkpC,IAClB,IAAK,MAAM7tC,KAAO6tC,EACdsB,GAActB,EAAa7tC,GAAMsxB,EAAK2b,EAAYjtC,KAI1D8tC,EAAgB,CAChB,MAAM9M,EAAW,gBAAW8M,GACtBA,EAAejsC,KAAKorC,GACpBa,EACN,IAAK,MAAM9tC,KAAOghC,EACd5e,GAAQpiB,EAAKghC,EAAShhC,IAM1BkwB,IACItb,GACA,gBAAOwI,EAASxI,aACXwI,EAASxI,WAAa,gBAAO,GAAIwI,EAAS7P,KAAKqH,aAAcA,GAElEmsB,GACA,gBAAO3jB,EAAS2jB,aACX3jB,EAAS2jB,WAAa,gBAAO,GAAI3jB,EAAS7P,KAAKwzB,aAAcA,IAIrE7Q,GACD4e,GAAa,UAAW79B,EAASg8B,EAAY4B,GAE7Cb,GACApT,GAAcoT,EAAYx+B,KAAKy9B,IAE/BgB,GACApT,GAAUoT,EAAQz+B,KAAKy9B,IAEvBiB,GACApT,GAAeoT,EAAa1+B,KAAKy9B,IAEjCkB,GACApT,GAAUoT,EAAQ3+B,KAAKy9B,IAEvBmB,GACApP,GAAYoP,EAAU5+B,KAAKy9B,IAE3BoB,GACAnP,GAAcmP,EAAY7+B,KAAKy9B,IAE/B2B,GACAxT,GAAgBwT,EAAcp/B,KAAKy9B,IAEnCyB,GACAvT,GAAgBuT,EAAcl/B,KAAKy9B,IAEnC0B,GACAzT,GAAkByT,EAAgBn/B,KAAKy9B,IAKvCsB,GACAvT,GAAgBuT,EAAc/+B,KAAKy9B,IAKnCwB,GACAxT,GAAYwT,EAAUj/B,KAAKy9B,IAGnC,SAAS6B,GAAa/pC,EAAMkM,EAASqgB,EAAKud,GACtCO,GAAmBrqC,EAAM8pC,EAAcvd,GACvC,MAAQX,QAAS5nB,EAAI,OAAE2nB,GAAWzf,EAC9BlI,GACAsmC,GAAoBtqC,EAAMgE,EAAMuoB,GAEhCZ,GACA0e,GAAmBrqC,EAAM2rB,EAAQY,GAErC,MAAMge,EAAWr+B,EAAQlM,GACrBuqC,GACAA,EAASztC,KAAKyvB,GAGtB,SAAS+d,GAAoBtqC,EAAMgE,EAAMuoB,GACjCvoB,EAAK4nB,SACL0e,GAAoBtqC,EAAMgE,EAAK4nB,QAASW,GAE5C,MAAMie,EAAWxmC,EAAKhE,GAClBwqC,GACAA,EAAS1tC,KAAKyvB,GAGtB,SAAS8d,GAAmBrqC,EAAM2rB,EAAQY,GACtC,IAAK,IAAI9yB,EAAI,EAAGA,EAAIkyB,EAAOjyB,OAAQD,IAAK,CACpC,MAAMgxC,EAAgB9e,EAAOlyB,GAAGkyB,OAC5B8e,GACAJ,GAAmBrqC,EAAMyqC,EAAele,GAE5C,MAAMvvB,EAAK2uB,EAAOlyB,GAAGuG,GACjBhD,GACAA,EAAGF,KAAKyvB,IAIpB,SAASyd,GAAY3xB,EAAUsT,EAAQ6c,EAAcC,GACjD,IAAK,IAAIhvC,EAAI,EAAGA,EAAIkyB,EAAOjyB,OAAQD,IAC/B8uC,GAAalwB,EAAUsT,EAAOlyB,GAAI+uC,EAAcC,GAAe,GAGvE,SAAS0B,GAAY9xB,EAAU6xB,EAAQhC,GAKnC,MAAMj+B,EAAOigC,EAAOptC,KAAKorC,EAAYA,GAMhC,gBAASj+B,KAGLoO,EAASpO,OAAS,QACvBoO,EAASpO,KAAOoX,GAASpX,GAIzB,gBAAOoO,EAASpO,KAAMA,IAG9B,SAASmgC,GAAc9rB,EAAKiO,EAAK2b,EAAYjtC,GACzC,MAAMmrB,EAASnrB,EAAI8jB,SAAS,KACtB2rB,GAAiBxC,EAAYjtC,GAC7B,IAAMitC,EAAWjtC,GACvB,GAAI,gBAASqjB,GAAM,CACf,MAAM3K,EAAU4Y,EAAIjO,GAChB,gBAAW3K,IACXwzB,GAAM/gB,EAAQzS,QAMjB,GAAI,gBAAW2K,GAChB6oB,GAAM/gB,EAAQ9H,EAAI7T,KAAKy9B,SAEtB,GAAI,gBAAS5pB,GACd,GAAI,gBAAQA,GACRA,EAAI1e,QAAQ2lB,GAAK6kB,GAAc7kB,EAAGgH,EAAK2b,EAAYjtC,QAElD,CACD,MAAM0Y,EAAU,gBAAW2K,EAAI3K,SACzB2K,EAAI3K,QAAQlJ,KAAKy9B,GACjB3b,EAAIjO,EAAI3K,SACV,gBAAWA,IACXwzB,GAAM/gB,EAAQzS,EAAS2K,QAO1B,EAIb,SAASosB,GAAiBne,EAAKvpB,GAC3B,MAAMgJ,EAAWhJ,EAAKxJ,MAAM,KAC5B,MAAO,KACH,IAAI6uB,EAAMkE,EACV,IAAK,IAAI9yB,EAAI,EAAGA,EAAIuS,EAAStS,QAAU2uB,EAAK5uB,IACxC4uB,EAAMA,EAAIrc,EAASvS,IAEvB,OAAO4uB,GAGf,SAASsiB,GAAqBtyB,GAC1B,MAAMiG,EAAMjG,EAAS7P,MACf,SAAEoiC,EAAQ,OAAEjf,EAAQC,QAAS8c,GAAmBpqB,EACtD,GAAIssB,EACA,OAAOA,EACX,MAAMd,EAAezxB,EAASuO,WAAW+E,OACzC,IAAKme,EAAapwC,SAAWiyB,IAAW+c,EACpC,OAAOpqB,EACX,MAAMpS,EAAU,GAGhB,OAFA49B,EAAalqC,QAAQgR,GAAKlB,GAAaxD,EAAS0E,EAAGyH,IACnD3I,GAAaxD,EAASoS,EAAKjG,GACnBiG,EAAIssB,SAAW1+B,EAE3B,SAASwD,GAAa/K,EAAIlC,EAAM4V,GAC5B,MAAMwyB,EAASxyB,EAASuO,WAAW3J,OAAO6e,uBACpC,OAAEnQ,EAAQC,QAAS8c,GAAmBjmC,EAC5CimC,GAAkBh5B,GAAa/K,EAAI+jC,EAAgBrwB,GACnDsT,GACIA,EAAO/rB,QAASgR,GAAMlB,GAAa/K,EAAIiM,EAAGyH,IAC9C,IAAK,MAAMpd,KAAOwH,EACVooC,GAAU,gBAAOA,EAAQ5vC,GACzB0J,EAAG1J,GAAO4vC,EAAO5vC,GAAK0J,EAAG1J,GAAMwH,EAAKxH,GAAMod,EAAS6M,MAAOjqB,GAG1D0J,EAAG1J,GAAOwH,EAAKxH,GAK3B,MAAM6vC,GAAsB,gBAAOzxC,OAAOC,OAAO,MAAO,CACpDyxC,EAAGtxC,GAAKA,EACRuxC,IAAKvxC,GAAKA,EAAEuf,MAAMlY,GAClBmqC,MAAOxxC,GAAKA,EAAEwQ,KACdihC,OAAQzxC,GAA2EA,EAAEyX,MACrFi6B,OAAQ1xC,GAA2EA,EAAE6c,MACrF80B,OAAQ3xC,GAA2EA,EAAE4c,MACrFg1B,MAAO5xC,GAA0EA,EAAEokC,KACnFyN,QAAS7xC,GAAKA,EAAEiV,QAAUjV,EAAEiV,OAAOwW,MACnCqmB,MAAO9xC,GAAKA,EAAEozB,MAAQpzB,EAAEozB,KAAK3H,MAC7BsmB,MAAO/xC,GAAKA,EAAE0yB,KACdsf,SAAUhyC,GAA4BkxC,GAAqBlxC,GAC3DiyC,aAAcjyC,GAAK,IAAMmwB,GAASnwB,EAAEk/B,QACpCgT,UAAW,IAAMjiB,GACjBkiB,OAAQnyC,GAA4BwuC,GAAcx9B,KAAKhR,KAErDoyC,GAA8B,CAChC,KAAMvuC,EAAG+a,GAAYpd,GACjB,MAAM,IAAEsxB,EAAG,WAAED,EAAU,KAAEriB,EAAI,MAAEiH,EAAK,YAAE46B,EAAW,KAAEtjC,EAAI,WAAEoe,GAAevO,EAExE,GAAY,aAARpd,EACA,OAAO,EAQX,IAAI8wC,EACJ,GAAe,MAAX9wC,EAAI,GAAY,CAChB,MAAMgD,EAAI6tC,EAAY7wC,GACtB,QAAU8P,IAAN9M,EACA,OAAQA,GACJ,KAAK,EACD,OAAOquB,EAAWrxB,GACtB,KAAK,EACD,OAAOgP,EAAKhP,GAChB,KAAK,EACD,OAAOsxB,EAAItxB,GACf,KAAK,EACD,OAAOiW,EAAMjW,OAIpB,IAAIqxB,IAAe,SAAa,gBAAOA,EAAYrxB,GAEpD,OADA6wC,EAAY7wC,GAAO,EACZqxB,EAAWrxB,GAEjB,GAAIgP,IAAS,SAAa,gBAAOA,EAAMhP,GAExC,OADA6wC,EAAY7wC,GAAO,EACZgP,EAAKhP,GAEX,IAGJ8wC,EAAkB1zB,EAAS6T,aAAa,KACrC,gBAAO6f,EAAiB9wC,GAExB,OADA6wC,EAAY7wC,GAAO,EACZiW,EAAMjW,GAEZ,GAAIsxB,IAAQ,SAAa,gBAAOA,EAAKtxB,GAEtC,OADA6wC,EAAY7wC,GAAO,EACZsxB,EAAItxB,GAEmBqtC,KAC9BwD,EAAY7wC,GAAO,IAG3B,MAAM+wC,EAAelB,GAAoB7vC,GACzC,IAAIgxC,EAAW/uB,EAEf,OAAI8uB,GACY,WAAR/wC,GACAukB,EAAMnH,EAAU,MAAiBpd,GAG9B+wC,EAAa3zB,KAIvB4zB,EAAYzjC,EAAK0jC,gBACbD,EAAYA,EAAUhxC,IAChBgxC,EAEF1f,IAAQ,SAAa,gBAAOA,EAAKtxB,IAEtC6wC,EAAY7wC,GAAO,EACZsxB,EAAItxB,KAIbiiB,EAAmB0J,EAAW3J,OAAOC,iBACnC,gBAAOA,EAAkBjiB,GAClBiiB,EAAiBjiB,QAJvB,IAwBT,KAAMqC,EAAG+a,GAAYpd,EAAK4B,GACtB,MAAM,KAAEoN,EAAI,WAAEqiB,EAAU,IAAEC,GAAQlU,EAClC,GAAIiU,IAAe,SAAa,gBAAOA,EAAYrxB,GAC/CqxB,EAAWrxB,GAAO4B,OAEjB,GAAIoN,IAAS,SAAa,gBAAOA,EAAMhP,GACxCgP,EAAKhP,GAAO4B,OAEX,GAAI5B,KAAOod,EAASnH,MAGrB,OAAO,EAEX,OAAe,MAAXjW,EAAI,MAAcA,EAAI2C,MAAM,KAAMya,MAe9BkU,EAAItxB,GAAO4B,GAGZ,IAEX,KAAMS,GAAG,KAAE2M,EAAI,WAAEqiB,EAAU,YAAEwf,EAAW,IAAEvf,EAAG,WAAE3F,EAAU,aAAEsF,IAAkBjxB,GACzE,IAAI8wC,EACJ,YAA6BhhC,IAArB+gC,EAAY7wC,IACfgP,IAAS,SAAa,gBAAOA,EAAMhP,IACnCqxB,IAAe,SAAa,gBAAOA,EAAYrxB,KAC9C8wC,EAAkB7f,EAAa,KAAO,gBAAO6f,EAAiB9wC,IAChE,gBAAOsxB,EAAKtxB,IACZ,gBAAO6vC,GAAqB7vC,IAC5B,gBAAO2rB,EAAW3J,OAAOC,iBAAkBjiB,KAUvD,MAAMkxC,GAA6C,gBAAO,GAAIN,GAA6B,CACvF,IAAIv0B,EAAQrc,GAER,GAAIA,IAAQsG,OAAO6qC,YAGnB,OAAOP,GAA4BrkC,IAAI8P,EAAQrc,EAAKqc,IAExD,IAAIha,EAAGrC,GACH,MAAM0kB,EAAiB,MAAX1kB,EAAI,KAAe,gBAAsBA,GAIrD,OAAO0kB,KAqEf,MAAM0sB,GAAkB1Q,KACxB,IAAI2Q,GAAQ,EACZ,SAAS3J,GAAwB3pB,EAAOtK,EAAQwgB,GAC5C,MAAM1mB,EAAOwQ,EAAMxQ,KAEboe,GAAclY,EAASA,EAAOkY,WAAa5N,EAAM4N,aAAeylB,GAChEh0B,EAAW,CACbwG,IAAKytB,KACLtzB,QACAxQ,OACAkG,SACAkY,aACAiG,KAAM,KACN3Y,KAAM,KACNsa,QAAS,KACTmK,OAAQ,KACRvM,OAAQ,KACRlH,MAAO,KACP+G,UAAW,KACXlM,QAAS,KACTkc,SAAUvtB,EAASA,EAAOutB,SAAW5iC,OAAOC,OAAOstB,EAAWqV,UAC9D6P,YAAa,KACbzf,YAAa,GAEbxc,WAAY,KACZmsB,WAAY,KAEZ9P,aAAcqI,GAAsB/rB,EAAMoe,GAC1CsH,aAAchD,GAAsB1iB,EAAMoe,GAE1CuF,KAAM,KACNlB,QAAS,KAETsB,IAAK,QACLtiB,KAAM,QACNiH,MAAO,QACPoF,MAAO,QACPD,MAAO,QACPwnB,KAAM,QACNvR,WAAY,QACZigB,aAAc,KAEdrd,WACAoX,WAAYpX,EAAWA,EAASqX,UAAY,EAC5CzD,SAAU,KACVI,eAAe,EAGf3M,WAAW,EACXtd,aAAa,EACbohB,eAAe,EACfmS,GAAI,KACJjvC,EAAG,KACHkmC,GAAI,KACJ7yB,EAAG,KACHwyB,GAAI,KACJC,EAAG,KACHgD,GAAI,KACJD,IAAK,KACLqG,GAAI,KACJryC,EAAG,KACHsyC,IAAK,KACLC,IAAK,KACLlkB,GAAI,MAaR,OAPIpQ,EAASkU,IAAM,CAAEjvB,EAAG+a,GAExBA,EAASwU,KAAOne,EAASA,EAAOme,KAAOxU,EACvCA,EAAS8T,KAAO,GAAK1hB,KAAK,KAAM4N,GAIzBA,EAEX,IAAImY,GAAkB,KACtB,MAAMoH,GAAqB,IAAMpH,IAAmB1E,GAC9CwI,GAAsBjc,IACxBmY,GAAkBnY,GAStB,IAgGIu0B,GAhGAhX,IAAwB,EAC5B,SAASiN,GAAexqB,EAAUkb,GAAQ,GACtCqC,GAAwBrC,EACxB,MAAM,MAAEriB,EAAK,SAAErC,EAAQ,UAAE4d,GAAcpU,EAASW,MAC1Csa,EAAyB,EAAZ7G,EACnB2G,GAAU/a,EAAUnH,EAAOoiB,EAAYC,GACvC2H,GAAU7iB,EAAUxJ,GACpB,MAAMg+B,EAAcvZ,EACdwZ,GAAuBz0B,EAAUkb,QACjCxoB,EAEN,OADA6qB,IAAwB,EACjBiX,EAEX,SAASC,GAAuBz0B,EAAUkb,GACtC,MAAM3a,EAAYP,EAAS7P,KAmB3B6P,EAASyzB,YAAc,GAGvBzzB,EAAS6M,MAAQ,IAAIC,MAAM9M,EAASkU,IAAKsf,IAKzC,MAAM,MAAEkB,GAAUn0B,EAClB,GAAIm0B,EAAO,CACP,MAAMR,EAAgBl0B,EAASk0B,aAC3BQ,EAAMrzC,OAAS,EAAIszC,GAAmB30B,GAAY,KACtDmY,GAAkBnY,EAClBiH,IACA,MAAMutB,EAAc7lB,GAAsB+lB,EAAO10B,EAAU,EAAwB,CAA6EA,EAASnH,MAAOq7B,IAGhL,GAFAttB,IACAuR,GAAkB,KACd,gBAAUqc,GAAc,CACxB,GAAItZ,EAEA,OAAOsZ,EAAY3rC,KAAM+rC,IACrBC,GAAkB70B,EAAU40B,KAMhC50B,EAASyqB,SAAW+J,OAIxBK,GAAkB70B,EAAUw0B,QAIhCM,GAAqB90B,GAG7B,SAAS60B,GAAkB70B,EAAUw0B,EAAatZ,GAC1C,gBAAWsZ,GAEXx0B,EAAS+T,OAASygB,EAEb,gBAASA,KAUdx0B,EAASiU,WAAarG,GAAU4mB,IAQpCM,GAAqB90B,GAUzB,SAAS80B,GAAqB90B,EAAUkb,GACpC,MAAM3a,EAAYP,EAAS7P,KAEtB6P,EAAS+T,SAENwgB,IAAWh0B,EAAUw0B,WAAax0B,EAAUwT,SAI5CxT,EAAUwT,OAASwgB,GAAQh0B,EAAUw0B,SAAU,CAC3CrR,gBAAiB1jB,EAASuO,WAAW3J,OAAO8e,gBAC5CsR,WAAYz0B,EAAUy0B,cAM9Bh1B,EAAS+T,OAAUxT,EAAUwT,QAAU,QAInC/T,EAAS+T,OAAOkhB,MAChBj1B,EAAS4T,UAAY,IAAI9G,MAAM9M,EAASkU,IAAK4f,MAKjD3b,GAAkBnY,EAClBkwB,GAAalwB,EAAUO,GACvB4X,GAAkB,KAgC1B,SAASwc,GAAmB30B,GAiBpB,MAAO,CACH/B,MAAO+B,EAAS/B,MAChBD,MAAOgC,EAAShC,MAChB8V,KAAM9T,EAAS8T,MAM3B,SAAS6b,GAA0BzpB,GAC3BiS,KACCA,GAAgBzQ,UAAYyQ,GAAgBzQ,QAAU,KAAK9W,KAAKsV,GAGzE,MAAMgvB,GAAa,kBACbC,GAAYt0C,GAAQA,EAAImE,QAAQkwC,GAAYhwC,GAAKA,EAAEC,eAAeH,QAAQ,QAAS,IAEzF,SAAS4pB,GAAoB5O,EAAUO,EAAWgP,GAAS,GACvD,IAAI5nB,EAAO,gBAAW4Y,IAChBA,EAAU8X,aACV9X,EAAU5Y,KAChB,IAAKA,GAAQ4Y,EAAU60B,OAAQ,CAC3B,MAAMxgC,EAAQ2L,EAAU60B,OAAOxgC,MAAM,mBACjCA,IACAjN,EAAOiN,EAAM,IAGrB,IAAKjN,GAAQqY,GAAYA,EAAS3J,OAAQ,CAEtC,MAAMg/B,EAAqB/c,IACvB,IAAK,MAAM11B,KAAO01B,EACd,GAAIA,EAAS11B,KAAS2d,EAClB,OAAO3d,GAInB+E,EACI0tC,EAAkBr1B,EAASxI,YACvBwI,EAAS3J,OAAOlG,KAAKqH,aAAe69B,EAAkBr1B,EAASuO,WAAW/W,YAEtF,OAAO7P,EAAOwtC,GAASxtC,GAAQ4nB,EAAS,MAAQ,YAEpD,SAASmK,GAAiBl1B,GACtB,OAAO,gBAAWA,IAAU,cAAeA,EAG/C,SAAS,GAAS2pB,GACd,MAAMjpB,EAAIgpB,GAAWC,GAErB,OADAwhB,GAA0BzqC,EAAEghB,QACrBhhB,EAIX,SAASowC,GAAgBzhC,GACrB,OAAO,gBAAWA,GAAW,CAAE6gC,MAAO7gC,EAASlM,KAAMkM,EAAQlM,MAASkM,EAiI1E,SAAS0hC,GAAEplC,EAAMqlC,EAAiBh/B,GAC9B,MAAM2S,EAAI9e,UAAUhJ,OACpB,OAAU,IAAN8nB,EACI,gBAASqsB,KAAqB,gBAAQA,GAElCrgB,GAAQqgB,GACD1gB,GAAY3kB,EAAM,KAAM,CAACqlC,IAG7B1gB,GAAY3kB,EAAMqlC,GAIlB1gB,GAAY3kB,EAAM,KAAMqlC,IAI/BrsB,EAAI,EACJ3S,EAAWxS,MAAMD,UAAUwB,MAAMd,KAAK4F,UAAW,GAEtC,IAAN8e,GAAWgM,GAAQ3e,KACxBA,EAAW,CAACA,IAETse,GAAY3kB,EAAMqlC,EAAiBh/B,IAI5BtN,OAAgE,IAetF,SAASusC,GAAW1G,EAAQ2G,GACxB,IAAIpuC,EACJ,GAAI,gBAAQynC,IAAW,gBAASA,GAAS,CACrCznC,EAAM,IAAItD,MAAM+qC,EAAO1tC,QACvB,IAAK,IAAID,EAAI,EAAG+nB,EAAI4lB,EAAO1tC,OAAQD,EAAI+nB,EAAG/nB,IACtCkG,EAAIlG,GAAKs0C,EAAW3G,EAAO3tC,GAAIA,QAGlC,GAAsB,kBAAX2tC,EAAqB,CACjCznC,EAAM,IAAItD,MAAM+qC,GAChB,IAAK,IAAI3tC,EAAI,EAAGA,EAAI2tC,EAAQ3tC,IACxBkG,EAAIlG,GAAKs0C,EAAWt0C,EAAI,EAAGA,QAG9B,GAAI,gBAAS2tC,GACd,GAAIA,EAAO7lC,OAAOkiB,UACd9jB,EAAMtD,MAAMoG,KAAK2kC,EAAQ2G,OAExB,CACD,MAAMhzC,EAAO1B,OAAO0B,KAAKqsC,GACzBznC,EAAM,IAAItD,MAAMtB,EAAKrB,QACrB,IAAK,IAAID,EAAI,EAAG+nB,EAAIzmB,EAAKrB,OAAQD,EAAI+nB,EAAG/nB,IAAK,CACzC,MAAMwB,EAAMF,EAAKtB,GACjBkG,EAAIlG,GAAKs0C,EAAW3G,EAAOnsC,GAAMA,EAAKxB,SAK9CkG,EAAM,GAEV,OAAOA,EAOX,SAASquC,GAAWlvC,GAChB,MAAMa,EAAM,GAKZ,IAAK,MAAM1E,KAAO6D,EACda,EAAI,KAAK,gBAAW1E,IAAU6D,EAAI7D,GAEtC,OAAO0E,EAyBX,MAAMi9B,GAAU,Q,iBCz9MhB,MAAMqR,GAAQ,6BACRC,GAA2B,qBAAb5oC,SAA2BA,SAAW,KAC1D,IAAI6oC,GACAC,GACJ,MAAMC,GAAU,CACZnQ,OAAQ,CAAC3Q,EAAO7e,EAAQ0jB,KACpB1jB,EAAO4/B,aAAa/gB,EAAO6E,GAAU,OAEzCvxB,OAAQ0sB,IACJ,MAAM7e,EAAS6e,EAAM4R,WACjBzwB,GACAA,EAAO6/B,YAAYhhB,IAG3BkR,cAAe,CAAC+P,EAAKzO,EAAOa,IAAOb,EAC7BmO,GAAIO,gBAAgBR,GAAOO,GAC3BN,GAAIzP,cAAc+P,EAAK5N,EAAK,CAAEA,WAAO71B,GAC3C4zB,WAAYtxB,GAAQ6gC,GAAIQ,eAAerhC,GACvCwxB,cAAexxB,GAAQ6gC,GAAIrP,cAAcxxB,GACzC0xB,QAAS,CAAC4P,EAAMthC,KACZshC,EAAKC,UAAYvhC,GAErB4xB,eAAgB,CAACn+B,EAAIuM,KACjBvM,EAAG+tC,YAAcxhC,GAErB8xB,WAAYwP,GAAQA,EAAKxP,WACzBE,YAAasP,GAAQA,EAAKtP,YAC1B95B,cAAeupC,GAAYZ,GAAI3oC,cAAcupC,GAC7C,WAAWhuC,EAAIoe,GACXpe,EAAGiuC,aAAa7vB,EAAI,KAExB,UAAUpe,GACN,OAAOA,EAAG2+B,WAAU,IAMxB,oBAAoB7Q,EAASlgB,EAAQ0jB,EAAQ2N,GACzC,MAAMiP,EAAOjP,EACPqO,KACGA,GAAmBF,GAAIO,gBAAgBR,GAAO,QACjDE,KAAkBA,GAAgBD,GAAIzP,cAAc,QAC1DuQ,EAAKC,UAAYrgB,EACjB,MAAMsgB,EAAQF,EAAKG,WACnB,IAAIR,EAAOO,EACP3vB,EAAOovB,EACX,MAAOA,EACHpvB,EAAOovB,EACPN,GAAQnQ,OAAOyQ,EAAMjgC,EAAQ0jB,GAC7Buc,EAAOK,EAAKG,WAEhB,MAAO,CAACD,EAAO3vB,KAMvB,SAAS6vB,GAAWtuC,EAAIjE,EAAOkjC,GAI3B,GAHa,MAATljC,IACAA,EAAQ,IAERkjC,EACAj/B,EAAGiuC,aAAa,QAASlyC,OAExB,CAID,MAAMwyC,EAAoBvuC,EAAGwuC,KACzBD,IACAxyC,GAASA,EACH,CAACA,KAAUwyC,GACX,IAAIA,IAAoBpqC,KAAK,MAEvCnE,EAAGyuC,UAAY1yC,GAIvB,SAAS2yC,GAAW1uC,EAAI4gC,EAAMxtB,GAC1B,MAAMtN,EAAQ9F,EAAG8F,MACjB,GAAKsN,EAGA,GAAI,gBAASA,GACVwtB,IAASxtB,IACTtN,EAAMlH,QAAUwU,OAGnB,CACD,IAAK,MAAMjZ,KAAOiZ,EACdu7B,GAAS7oC,EAAO3L,EAAKiZ,EAAKjZ,IAE9B,GAAIymC,IAAS,gBAASA,GAClB,IAAK,MAAMzmC,KAAOymC,EACG,MAAbxtB,EAAKjZ,IACLw0C,GAAS7oC,EAAO3L,EAAK,SAdjC6F,EAAG4uC,gBAAgB,SAoB3B,MAAMC,GAAc,iBACpB,SAASF,GAAS7oC,EAAO5G,EAAMrG,GAC3B,GAAI,gBAAQA,GACRA,EAAIiG,QAAQyT,GAAKo8B,GAAS7oC,EAAO5G,EAAMqT,SAGvC,GAAIrT,EAAK/D,WAAW,MAEhB2K,EAAMgpC,YAAY5vC,EAAMrG,OAEvB,CACD,MAAMk2C,EAAWC,GAAWlpC,EAAO5G,GAC/B2vC,GAAY5zC,KAAKpC,GAEjBiN,EAAMgpC,YAAY,gBAAUC,GAAWl2C,EAAI0D,QAAQsyC,GAAa,IAAK,aAGrE/oC,EAAMipC,GAAYl2C,GAKlC,MAAMo2C,GAAW,CAAC,SAAU,MAAO,MAC7BC,GAAc,GACpB,SAASF,GAAWlpC,EAAOqpC,GACvB,MAAM1kB,EAASykB,GAAYC,GAC3B,GAAI1kB,EACA,OAAOA,EAEX,IAAIvrB,EAAO,gBAASiwC,GACpB,GAAa,WAATjwC,GAAqBA,KAAQ4G,EAC7B,OAAQopC,GAAYC,GAAWjwC,EAEnCA,EAAO,gBAAWA,GAClB,IAAK,IAAIvG,EAAI,EAAGA,EAAIs2C,GAASr2C,OAAQD,IAAK,CACtC,MAAMo2C,EAAWE,GAASt2C,GAAKuG,EAC/B,GAAI6vC,KAAYjpC,EACZ,OAAQopC,GAAYC,GAAWJ,EAGvC,OAAOI,EAGX,MAAMC,GAAU,+BAChB,SAASC,GAAUrvC,EAAI7F,EAAK4B,EAAOkjC,GAC/B,GAAIA,GAAS9kC,EAAIgB,WAAW,UACX,MAATY,EACAiE,EAAGsvC,kBAAkBF,GAASj1C,EAAI2C,MAAM,EAAG3C,EAAIvB,SAG/CoH,EAAGuvC,eAAeH,GAASj1C,EAAK4B,OAGnC,CAGD,MAAMyzC,EAAY,gBAAqBr1C,GAC1B,MAAT4B,GAAkByzC,IAAuB,IAAVzzC,EAC/BiE,EAAG4uC,gBAAgBz0C,GAGnB6F,EAAGiuC,aAAa9zC,EAAKq1C,EAAY,GAAKzzC,IAOlD,SAAS0zC,GAAazvC,EAAI7F,EAAK4B,EAI/BixB,EAAc4P,EAAiBC,EAAgBmD,GAC3C,GAAY,cAAR7lC,GAA+B,gBAARA,EAKvB,OAJI6yB,GACAgT,EAAgBhT,EAAc4P,EAAiBC,QAEnD78B,EAAG7F,GAAgB,MAAT4B,EAAgB,GAAKA,GAGnC,GAAY,UAAR5B,GAAkC,aAAf6F,EAAG0vC,QAU1B,GAAc,KAAV3zC,GAAmC,mBAAZiE,EAAG7F,GAE1B6F,EAAG7F,IAAO,OAET,GAAa,MAAT4B,GAAoC,kBAAZiE,EAAG7F,GAEhC6F,EAAG7F,GAAO,GACV6F,EAAG4uC,gBAAgBz0C,QAInB,IACI6F,EAAG7F,GAAO4B,EAEd,MAAO8Y,GACC,MAzBZ,CAGI7U,EAAG+kB,OAAShpB,EACZ,MAAMgjB,EAAoB,MAAThjB,EAAgB,GAAKA,EAClCiE,EAAGjE,QAAUgjB,IACb/e,EAAGjE,MAAQgjB,IA4BvB,IAAI4wB,GAAUj0C,KAAKk0C,IAKK,qBAAbprC,UACPmrC,KAAYnrC,SAASqrC,YAAY,SAASC,YAI1CH,GAAU,IAAM5U,YAAY6U,OAIhC,IAAIG,GAAY,EAChB,MAAMlnB,GAAI3V,QAAQzD,UACZ,GAAQ,KACVsgC,GAAY,GAEVC,GAAS,IAAMD,KAAclnB,GAAEzoB,KAAK,IAAS2vC,GAAYJ,MAC/D,SAASjnC,GAAiB1I,EAAIiqB,EAAOpX,EAASzH,GAC1CpL,EAAG0I,iBAAiBuhB,EAAOpX,EAASzH,GAExC,SAAS3C,GAAoBzI,EAAIiqB,EAAOpX,EAASzH,GAC7CpL,EAAGyI,oBAAoBwhB,EAAOpX,EAASzH,GAE3C,SAAS6kC,GAAWjwC,EAAImvC,EAASe,EAAWC,EAAW54B,EAAW,MAE9D,MAAM64B,EAAWpwC,EAAGqwC,OAASrwC,EAAGqwC,KAAO,IACjCC,EAAkBF,EAASjB,GACjC,GAAIgB,GAAaG,EAEbA,EAAgBv0C,MAAQo0C,MAEvB,CACD,MAAOjxC,EAAMkM,GAAWmlC,GAAUpB,GAClC,GAAIgB,EAAW,CAEX,MAAMK,EAAWJ,EAASjB,GAAWsB,GAAcN,EAAW54B,GAC9D7O,GAAiB1I,EAAId,EAAMsxC,EAASplC,QAE/BklC,IAEL7nC,GAAoBzI,EAAId,EAAMoxC,EAAiBllC,GAC/CglC,EAASjB,QAAWllC,IAIhC,MAAMymC,GAAoB,4BAC1B,SAASH,GAAUrxC,GACf,IAAIkM,EACJ,GAAIslC,GAAkBz1C,KAAKiE,GAAO,CAE9B,IAAI4Q,EADJ1E,EAAU,GAEV,MAAQ0E,EAAI5Q,EAAKiN,MAAMukC,IACnBxxC,EAAOA,EAAKpC,MAAM,EAAGoC,EAAKtG,OAASkX,EAAE,GAAGlX,QACxCwS,EAAQ0E,EAAE,GAAGhX,gBAAiB,EAGtC,MAAO,CAACoG,EAAKpC,MAAM,GAAGhE,cAAesS,GAEzC,SAASqlC,GAAcE,EAAcp5B,GACjC,MAAMi5B,EAAW37B,IAOb,MAAMi7B,EAAYj7B,EAAEi7B,WAAaH,KAC7BG,GAAaU,EAAQI,SAAW,GAChCxpB,GAA2BypB,GAA8Bh8B,EAAG27B,EAAQz0C,OAAQwb,EAAU,EAA8B,CAAC1C,KAK7H,OAFA27B,EAAQz0C,MAAQ40C,EAChBH,EAAQI,SAAWZ,KACZQ,EAEX,SAASK,GAA8Bh8B,EAAG9Y,GACtC,GAAI,gBAAQA,GAAQ,CAChB,MAAM+0C,EAAej8B,EAAEk8B,yBAKvB,OAJAl8B,EAAEk8B,yBAA2B,KACzBD,EAAa90C,KAAK6Y,GAClBA,EAAEm8B,UAAW,GAEVj1C,EAAMzD,IAAI4D,GAAO2Y,IAAOA,EAAEm8B,UAAY90C,EAAG2Y,IAGhD,OAAO9Y,EAIf,MAAMk1C,GAAa,WACbxT,GAAiB,CAACjhC,EAAGrC,IAAgB,UAARA,EAC7B,GAAY,CAAC6F,EAAI7F,EAAK+1C,EAAWC,EAAWlR,GAAQ,EAAOjS,EAAc4P,EAAiBC,EAAgBmD,KAC5G,OAAQ7lC,GAEJ,IAAK,QACDm0C,GAAWtuC,EAAImwC,EAAWlR,GAC1B,MACJ,IAAK,QACDyP,GAAW1uC,EAAIkwC,EAAWC,GAC1B,MACJ,QACQ,gBAAKh2C,GAEA,gBAAgBA,IACjB81C,GAAWjwC,EAAI7F,EAAK+1C,EAAWC,EAAWvT,GAGzCsU,GAAgBlxC,EAAI7F,EAAKg2C,EAAWlR,GACzCwQ,GAAazvC,EAAI7F,EAAKg2C,EAAWnjB,EAAc4P,EAAiBC,EAAgBmD,IAOpE,eAAR7lC,EACA6F,EAAGmxC,WAAahB,EAEH,gBAARh2C,IACL6F,EAAGoxC,YAAcjB,GAErBd,GAAUrvC,EAAI7F,EAAKg2C,EAAWlR,IAElC,QAGZ,SAASiS,GAAgBlxC,EAAI7F,EAAK4B,EAAOkjC,GACrC,OAAIA,EAGY,cAAR9kC,MAIAA,KAAO6F,GAAMixC,GAAWh2C,KAAKd,IAAQ,gBAAW4B,IAW5C,eAAR5B,GAAgC,cAARA,KAKhB,SAARA,GAAmC,kBAAV4B,MAIjB,SAAR5B,GAAiC,UAAf6F,EAAG0vC,aAIrBuB,GAAWh2C,KAAKd,KAAQ,gBAAS4B,KAG9B5B,KAAO6F,KAoElB,MAAMqxC,GAAa,aACbC,GAAY,YAGZC,GAAa,CAACnhC,GAASmF,WAAYu3B,GAAE1U,GAAgBoZ,GAAuBphC,GAAQmF,GAC1Fg8B,GAAW3hB,YAAc,aACzB,MAAM6hB,GAA+B,CACjCvyC,KAAM3E,OACNmN,KAAMnN,OACNm3C,IAAK,CACDhqC,KAAM2N,QACN3E,SAAS,GAEbihC,SAAU,CAACp3C,OAAQumB,OAAQvoB,QAC3Bq5C,eAAgBr3C,OAChBs3C,iBAAkBt3C,OAClBu3C,aAAcv3C,OACdw3C,gBAAiBx3C,OACjBy3C,kBAAmBz3C,OACnB03C,cAAe13C,OACf23C,eAAgB33C,OAChB43C,iBAAkB53C,OAClB63C,aAAc73C,QAEiBg3C,GAAWnhC,MAAsB,gBAAO,GAAIgoB,GAAehoB,MAAOqhC,IACrG,SAASD,GAAuBjf,GAC5B,IAAI,KAAErzB,EAAO,IAAG,KAAEwI,EAAI,IAAEgqC,GAAM,EAAI,SAAEC,EAAQ,eAAEC,EAAoB1yC,EAAH,cAAoB,iBAAE2yC,EAAsB3yC,EAAH,gBAAsB,aAAE4yC,EAAkB5yC,EAAH,YAAkB,gBAAE6yC,EAAkBH,EAAc,kBAAEI,EAAoBH,EAAgB,cAAEI,EAAgBH,EAAY,eAAEI,EAAoBhzC,EAAH,cAAoB,iBAAEizC,EAAsBjzC,EAAH,gBAAsB,aAAEkzC,EAAkBlzC,EAAH,aAAuBqzB,EACjY,MAAM8f,EAAY,GAClB,IAAK,MAAMl4C,KAAOo4B,EACRp4B,KAAOs3C,KACTY,EAAUl4C,GAAOo4B,EAASp4B,IAGlC,IAAKu3C,EACD,OAAOW,EAEX,MAAMC,EAAYC,GAAkBZ,GAC9Ba,EAAgBF,GAAaA,EAAU,GACvCG,EAAgBH,GAAaA,EAAU,IACvC,cAAEpc,EAAa,QAAEC,EAAO,iBAAEE,EAAgB,QAAEE,EAAO,iBAAEE,EAAgB,eAAEC,EAAiBR,EAAa,SAAES,EAAWR,EAAO,kBAAEU,EAAoBR,GAAqBgc,EACpKK,EAAc,CAAC1yC,EAAI2yC,EAAU7vB,KAC/B8vB,GAAsB5yC,EAAI2yC,EAAWV,EAAgBH,GACrDc,GAAsB5yC,EAAI2yC,EAAWX,EAAoBH,GACzD/uB,GAAQA,KAEN+vB,EAAc,CAAC7yC,EAAI8iB,KACrB8vB,GAAsB5yC,EAAIoyC,GAC1BQ,GAAsB5yC,EAAImyC,GAC1BrvB,GAAQA,KAENgwB,EAAiBH,GACZ,CAAC3yC,EAAI8iB,KACR,MAAMyR,EAAOoe,EAAWhc,EAAWR,EAC7B1mB,EAAU,IAAMijC,EAAY1yC,EAAI2yC,EAAU7vB,GAChDyR,GAAQA,EAAKv0B,EAAIyP,GACjBsjC,GAAU,KACNH,GAAsB5yC,EAAI2yC,EAAWZ,EAAkBH,GACvDoB,GAAmBhzC,EAAI2yC,EAAWV,EAAgBH,GAC5Cvd,GAAQA,EAAK37B,OAAS,IACpB45C,EACAS,WAAWxjC,EAAS+iC,GAGpBU,GAAmBlzC,EAAI0H,EAAM+H,OAMjD,OAAO,gBAAO4iC,EAAW,CACrB,cAAcryC,GACVk2B,GAAiBA,EAAcl2B,GAC/BgzC,GAAmBhzC,EAAI6xC,GACvBmB,GAAmBhzC,EAAI4xC,IAE3B,eAAe5xC,GACX02B,GAAkBA,EAAe12B,GACjCgzC,GAAmBhzC,EAAIgyC,GACvBgB,GAAmBhzC,EAAI+xC,IAE3B5b,QAAS2c,GAAc,GACvBnc,SAAUmc,GAAc,GACxB,QAAQ9yC,EAAI8iB,GACR,MAAMrT,EAAU,IAAMojC,EAAY7yC,EAAI8iB,GACtCkwB,GAAmBhzC,EAAImyC,GACvBa,GAAmBhzC,EAAIkyC,GACvBa,GAAU,KACNH,GAAsB5yC,EAAIkyC,GAC1Bc,GAAmBhzC,EAAIoyC,GACjB7b,GAAWA,EAAQ39B,OAAS,IAC1B65C,EACAQ,WAAWxjC,EAASgjC,GAGpBS,GAAmBlzC,EAAI0H,EAAM+H,MAIzC8mB,GAAWA,EAAQv2B,EAAIyP,IAE3B,iBAAiBzP,GACb0yC,EAAY1yC,GAAI,GAChBq2B,GAAoBA,EAAiBr2B,IAEzC,kBAAkBA,GACd0yC,EAAY1yC,GAAI,GAChB62B,GAAqBA,EAAkB72B,IAE3C,iBAAiBA,GACb6yC,EAAY7yC,GACZy2B,GAAoBA,EAAiBz2B,MAIjD,SAASuyC,GAAkBZ,GACvB,GAAgB,MAAZA,EACA,OAAO,KAEN,GAAI,gBAASA,GACd,MAAO,CAACwB,GAASxB,EAAStR,OAAQ8S,GAASxB,EAAS9M,QAEnD,CACD,MAAM1nC,EAAIg2C,GAASxB,GACnB,MAAO,CAACx0C,EAAGA,IAGnB,SAASg2C,GAASt6C,GACd,MAAM0F,EAAM,gBAAS1F,GAGrB,OAAO0F,EAYX,SAASy0C,GAAmBhzC,EAAIozC,GAC5BA,EAAI16C,MAAM,OAAOoG,QAAQrC,GAAKA,GAAKuD,EAAGqzC,UAAUzgC,IAAInW,KACnDuD,EAAGwuC,OACCxuC,EAAGwuC,KAAO,IAAI5yB,MAAQhJ,IAAIwgC,GAEnC,SAASR,GAAsB5yC,EAAIozC,GAC/BA,EAAI16C,MAAM,OAAOoG,QAAQrC,GAAKA,GAAKuD,EAAGqzC,UAAUtzC,OAAOtD,IACvD,MAAM,KAAE+xC,GAASxuC,EACbwuC,IACAA,EAAK7nC,OAAOysC,GACP5E,EAAKhvC,OACNQ,EAAGwuC,UAAOvkC,IAItB,SAAS8oC,GAAU3pB,GACfkqB,sBAAsB,KAClBA,sBAAsBlqB,KAG9B,SAAS8pB,GAAmBlzC,EAAIuzC,EAAcnqB,GAC1C,MAAM,KAAE1hB,EAAI,QAAE8rC,EAAO,UAAEC,GAAcC,GAAkB1zC,EAAIuzC,GAC3D,IAAK7rC,EACD,OAAO0hB,IAEX,MAAMuqB,EAAWjsC,EAAO,MACxB,IAAIksC,EAAQ,EACZ,MAAM7oC,EAAM,KACR/K,EAAGyI,oBAAoBkrC,EAAUE,GACjCzqB,KAEEyqB,EAASh/B,IACPA,EAAE2B,SAAWxW,KACP4zC,GAASH,GACX1oC,KAIZkoC,WAAW,KACHW,EAAQH,GACR1oC,KAELyoC,EAAU,GACbxzC,EAAG0I,iBAAiBirC,EAAUE,GAElC,SAASH,GAAkB1zC,EAAIuzC,GAC3B,MAAMO,EAAS7yC,OAAO8yC,iBAAiB/zC,GAEjCg0C,EAAsB75C,IAAS25C,EAAO35C,IAAQ,IAAIzB,MAAM,MACxDu7C,EAAmBD,EAAmB3C,GAAa,SACnD6C,EAAsBF,EAAmB3C,GAAa,YACtD8C,EAAoBC,GAAWH,EAAkBC,GACjDG,EAAkBL,EAAmB1C,GAAY,SACjDgD,EAAqBN,EAAmB1C,GAAY,YACpDiD,EAAmBH,GAAWC,EAAiBC,GACrD,IAAI5sC,EAAO,KACP8rC,EAAU,EACVC,EAAY,EAEZF,IAAiBlC,GACb8C,EAAoB,IACpBzsC,EAAO2pC,GACPmC,EAAUW,EACVV,EAAYS,EAAoBt7C,QAG/B26C,IAAiBjC,GAClBiD,EAAmB,IACnB7sC,EAAO4pC,GACPkC,EAAUe,EACVd,EAAYa,EAAmB17C,SAInC46C,EAAU52B,KAAKC,IAAIs3B,EAAmBI,GACtC7sC,EACI8rC,EAAU,EACJW,EAAoBI,EAChBlD,GACAC,GACJ,KACVmC,EAAY/rC,EACNA,IAAS2pC,GACL6C,EAAoBt7C,OACpB07C,EAAmB17C,OACvB,GAEV,MAAM47C,EAAe9sC,IAAS2pC,IAC1B,yBAAyBp2C,KAAK64C,EAAOzC,GAAa,aACtD,MAAO,CACH3pC,OACA8rC,UACAC,YACAe,gBAGR,SAASJ,GAAWK,EAAQnC,GACxB,MAAOmC,EAAO77C,OAAS05C,EAAU15C,OAC7B67C,EAASA,EAAO1yC,OAAO0yC,GAE3B,OAAO73B,KAAKC,OAAOy1B,EAAUh6C,IAAI,CAACo8C,EAAG/7C,IAAMg8C,GAAKD,GAAKC,GAAKF,EAAO97C,MAMrE,SAASg8C,GAAK1mB,GACV,OAAkD,IAA3CnN,OAAOmN,EAAEnxB,MAAM,GAAI,GAAGP,QAAQ,IAAK,MAO1B,IAAI0gB,QACD,IAAIA,QA0c3B,MAAM23B,GAAkB,gBAAO,CAAErX,UAAS,sBAAoBgQ,IAG9D,IAAIzL,GAEJ,SAAS+S,KACL,OAAO/S,KAAaA,GAAW7E,GAAe2X,KAUlD,MAMM,GAAY,IAAKlzC,KACnB,MAAMua,EAAM44B,KAAiB3O,aAAaxkC,GAI1C,MAAM,MAAEozC,GAAU74B,EAgBlB,OAfAA,EAAI64B,MAASC,IACT,MAAM/V,EAAYgW,GAAmBD,GACrC,IAAK/V,EACD,OACJ,MAAMruB,EAAYsL,EAAIyf,WACjB,gBAAW/qB,IAAeA,EAAU2a,QAAW3a,EAAU27B,WAC1D37B,EAAU27B,SAAWtN,EAAUmP,WAGnCnP,EAAUmP,UAAY,GACtB,MAAM/pB,EAAQ0wB,EAAM9V,GAGpB,OAFAA,EAAU4P,gBAAgB,WAC1B5P,EAAUiP,aAAa,aAAc,IAC9B7pB,GAEJnI,GAwBX,SAAS+4B,GAAmBhW,GACxB,GAAI,gBAASA,GAAY,CACrB,MAAMzgC,EAAMiG,SAASC,cAAcu6B,GAInC,OAAOzgC,EAEX,OAAOygC,E,8BC1tCX,IAAIiW,EAGJA,EAAI,WACH,OAAO/4B,KADJ,GAIJ,IAEC+4B,EAAIA,GAAK,IAAI1hB,SAAS,cAAb,GACR,MAAO1e,GAEc,kBAAX5T,SAAqBg0C,EAAIh0C,QAOrCi0C,EAAOC,QAAUF,G,mCCnBjB,8CA8Ye18C,OAAO8C,OAOC9C,OAAO+C,UAAUjB,eAExBkB,MAAMzB,QAWCvB,OAAO+C,UAAUQ,SAtExC,MAoFMG,EAAuBC,IACzB,MAAMC,EAAQ5D,OAAOC,OAAO,MAC5B,OAASJ,IACL,MAAMgE,EAAMD,EAAM/D,GAClB,OAAOgE,IAAQD,EAAM/D,GAAO8D,EAAG9D,MAGjCiE,EAAa,SAObC,GAHWL,EAAqB7D,GAC3BA,EAAImE,QAAQF,EAAY,CAACG,EAAGC,IAAOA,EAAIA,EAAEC,cAAgB,KAEhD,cAIFT,EAAqB7D,GAC5BA,EAAImE,QAAQD,EAAa,OAAOxD,eAKxBmD,EAAqB7D,GAC7BA,EAAIyE,OAAO,GAAGH,cAAgBtE,EAAI0E,MAAM,IAoBnD,IAAIs4C,EACJ,MAAMC,EAAgB,IACVD,IACHA,EACyB,qBAAfE,WACDA,WACgB,qBAATC,KACHA,KACkB,qBAAXt0C,OACHA,OACkB,qBAAXu0C,EACHA,EACA,M","file":"js/chunk-vendors.062f48e5.js","sourcesContent":["/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n// Patch flags are optimization hints generated by the compiler.\r\n// when a block with dynamicChildren is encountered during diff, the algorithm\r\n// enters \"optimized mode\". In this mode, we know that the vdom is produced by\r\n// a render function generated by the compiler, so the algorithm only needs to\r\n// handle updates explicitly marked by these patch flags.\r\n// dev only flag -> name mapping\r\nconst PatchFlagNames = {\r\n    [1 /* TEXT */]: `TEXT`,\r\n    [2 /* CLASS */]: `CLASS`,\r\n    [4 /* STYLE */]: `STYLE`,\r\n    [8 /* PROPS */]: `PROPS`,\r\n    [16 /* FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [1024 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [512 /* NEED_PATCH */]: `NEED_PATCH`,\r\n    [-1 /* HOISTED */]: `HOISTED`,\r\n    [-2 /* BAIL */]: `BAIL`\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    const lines = source.split(/\\r?\\n/);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count += lines[i].length + 1;\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - lineLength) + 1;\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + 1;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nconst isKnownAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const item = value[i];\r\n            const normalized = normalizeStyle(isString(item) ? parseStringStyle(item) : item);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:(.+)/;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText.split(listDelimiterRE).forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            res += normalizeClass(value[i]) + ' ';\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,' +\r\n    'summary,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.substring(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\r\n}\r\n// https://www.w3.org/TR/html52/syntax.html#comments\r\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\r\nfunction escapeHtmlComment(src) {\r\n    return src.replace(commentStripRE, '');\r\n}\n\nfunction looseCompareArrays(a, b) {\r\n    if (a.length !== b.length)\r\n        return false;\r\n    let equal = true;\r\n    for (let i = 0; equal && i < a.length; i++) {\r\n        equal = looseEqual(a[i], b[i]);\r\n    }\r\n    return equal;\r\n}\r\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    let aValidType = isDate(a);\r\n    let bValidType = isDate(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? a.getTime() === b.getTime() : false;\r\n    }\r\n    aValidType = isArray(a);\r\n    bValidType = isArray(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? looseCompareArrays(a, b) : false;\r\n    }\r\n    aValidType = isObject(a);\r\n    bValidType = isObject(b);\r\n    if (aValidType || bValidType) {\r\n        /* istanbul ignore if: this if will probably never be called */\r\n        if (!aValidType || !bValidType) {\r\n            return false;\r\n        }\r\n        const aKeysCount = Object.keys(a).length;\r\n        const bKeysCount = Object.keys(b).length;\r\n        if (aKeysCount !== bKeysCount) {\r\n            return false;\r\n        }\r\n        for (const key in a) {\r\n            const aHasKey = a.hasOwnProperty(key);\r\n            const bHasKey = b.hasOwnProperty(key);\r\n            if ((aHasKey && !bHasKey) ||\r\n                (!aHasKey && bHasKey) ||\r\n                !looseEqual(a[key], b[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return String(a) === String(b);\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\r\nfunction looseHas(set, val) {\r\n    for (let item of set) {\r\n        if (looseEqual(item, val))\r\n            return true;\r\n    }\r\n    return false;\r\n}\n\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nconst toDisplayString = (val) => {\r\n    return val == null\r\n        ? ''\r\n        : isObject(val)\r\n            ? JSON.stringify(val, replacer, 2)\r\n            : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n    if (isMap(val)) {\r\n        return {\r\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n                entries[`${key} =>`] = val;\r\n                return entries;\r\n            }, {})\r\n        };\r\n    }\r\n    else if (isSet(val)) {\r\n        return {\r\n            [`Set(${val.size})`]: [...val.values()]\r\n        };\r\n    }\r\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n        return String(val);\r\n    }\r\n    return val;\r\n};\n\n/**\r\n * List of @babel/parser plugins that are used for template expression\r\n * transforms and SFC script transforms. By default we enable proposals slated\r\n * for ES2020. This will need to be updated as the spec moves forward.\r\n * Full list at https://babeljs.io/docs/en/next/babel-parser#plugins\r\n */\r\nconst babelParserDefaultPlugins = [\r\n    'bigInt',\r\n    'optionalChaining',\r\n    'nullishCoalescingOperator'\r\n];\r\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = [];\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst isModelListener = (key) => key.startsWith('onUpdate:');\r\nconst extend = Object.assign;\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isMap = (val) => toTypeString(val) === '[object Map]';\r\nconst isSet = (val) => toTypeString(val) === '[object Set]';\r\nconst isDate = (val) => val instanceof Date;\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isIntegerKey = (key) => isString(key) &&\r\n    key !== 'NaN' &&\r\n    key[0] !== '-' &&\r\n    '' + parseInt(key, 10) === key;\r\nconst isReservedProp = /*#__PURE__*/ makeMap('key,ref,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\n/**\r\n * @private\r\n */\r\nconst hyphenate = cacheStringFunction((str) => {\r\n    return str.replace(hyphenateRE, '-$1').toLowerCase();\r\n});\r\n/**\r\n * @private\r\n */\r\nconst capitalize = cacheStringFunction((str) => {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n});\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => value !== oldValue && (value === value || oldValue === oldValue);\r\nconst invokeArrayFns = (fns, arg) => {\r\n    for (let i = 0; i < fns.length; i++) {\r\n        fns[i](arg);\r\n    }\r\n};\r\nconst def = (obj, key, value) => {\r\n    Object.defineProperty(obj, key, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value\r\n    });\r\n};\r\nconst toNumber = (val) => {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n};\r\nlet _globalThis;\r\nconst getGlobalThis = () => {\r\n    return (_globalThis ||\r\n        (_globalThis =\r\n            typeof globalThis !== 'undefined'\r\n                ? globalThis\r\n                : typeof self !== 'undefined'\r\n                    ? self\r\n                    : typeof window !== 'undefined'\r\n                        ? window\r\n                        : typeof global !== 'undefined'\r\n                            ? global\r\n                            : {}));\r\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, babelParserDefaultPlugins, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, invokeArrayFns, isArray, isBooleanAttr, isDate, isFunction, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownAttr, isMap, isModelListener, isNoUnitNumericStyleProp, isObject, isOn, isPlainObject, isPromise, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseHas, looseIndexOf, makeMap, normalizeClass, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, stringifyStyle, toDisplayString, toNumber, toRawType, toTypeString };\n","/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n// Patch flags are optimization hints generated by the compiler.\r\n// when a block with dynamicChildren is encountered during diff, the algorithm\r\n// enters \"optimized mode\". In this mode, we know that the vdom is produced by\r\n// a render function generated by the compiler, so the algorithm only needs to\r\n// handle updates explicitly marked by these patch flags.\r\n// dev only flag -> name mapping\r\nconst PatchFlagNames = {\r\n    [1 /* TEXT */]: `TEXT`,\r\n    [2 /* CLASS */]: `CLASS`,\r\n    [4 /* STYLE */]: `STYLE`,\r\n    [8 /* PROPS */]: `PROPS`,\r\n    [16 /* FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [1024 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [512 /* NEED_PATCH */]: `NEED_PATCH`,\r\n    [-1 /* HOISTED */]: `HOISTED`,\r\n    [-2 /* BAIL */]: `BAIL`\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    const lines = source.split(/\\r?\\n/);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count += lines[i].length + 1;\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - lineLength) + 1;\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + 1;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nconst isKnownAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const item = value[i];\r\n            const normalized = normalizeStyle(isString(item) ? parseStringStyle(item) : item);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:(.+)/;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText.split(listDelimiterRE).forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            res += normalizeClass(value[i]) + ' ';\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,' +\r\n    'summary,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.substring(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\r\n}\r\n// https://www.w3.org/TR/html52/syntax.html#comments\r\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\r\nfunction escapeHtmlComment(src) {\r\n    return src.replace(commentStripRE, '');\r\n}\n\nfunction looseCompareArrays(a, b) {\r\n    if (a.length !== b.length)\r\n        return false;\r\n    let equal = true;\r\n    for (let i = 0; equal && i < a.length; i++) {\r\n        equal = looseEqual(a[i], b[i]);\r\n    }\r\n    return equal;\r\n}\r\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    let aValidType = isDate(a);\r\n    let bValidType = isDate(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? a.getTime() === b.getTime() : false;\r\n    }\r\n    aValidType = isArray(a);\r\n    bValidType = isArray(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? looseCompareArrays(a, b) : false;\r\n    }\r\n    aValidType = isObject(a);\r\n    bValidType = isObject(b);\r\n    if (aValidType || bValidType) {\r\n        /* istanbul ignore if: this if will probably never be called */\r\n        if (!aValidType || !bValidType) {\r\n            return false;\r\n        }\r\n        const aKeysCount = Object.keys(a).length;\r\n        const bKeysCount = Object.keys(b).length;\r\n        if (aKeysCount !== bKeysCount) {\r\n            return false;\r\n        }\r\n        for (const key in a) {\r\n            const aHasKey = a.hasOwnProperty(key);\r\n            const bHasKey = b.hasOwnProperty(key);\r\n            if ((aHasKey && !bHasKey) ||\r\n                (!aHasKey && bHasKey) ||\r\n                !looseEqual(a[key], b[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return String(a) === String(b);\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\r\nfunction looseHas(set, val) {\r\n    for (let item of set) {\r\n        if (looseEqual(item, val))\r\n            return true;\r\n    }\r\n    return false;\r\n}\n\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nconst toDisplayString = (val) => {\r\n    return val == null\r\n        ? ''\r\n        : isObject(val)\r\n            ? JSON.stringify(val, replacer, 2)\r\n            : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n    if (isMap(val)) {\r\n        return {\r\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n                entries[`${key} =>`] = val;\r\n                return entries;\r\n            }, {})\r\n        };\r\n    }\r\n    else if (isSet(val)) {\r\n        return {\r\n            [`Set(${val.size})`]: [...val.values()]\r\n        };\r\n    }\r\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n        return String(val);\r\n    }\r\n    return val;\r\n};\n\n/**\r\n * List of @babel/parser plugins that are used for template expression\r\n * transforms and SFC script transforms. By default we enable proposals slated\r\n * for ES2020. This will need to be updated as the spec moves forward.\r\n * Full list at https://babeljs.io/docs/en/next/babel-parser#plugins\r\n */\r\nconst babelParserDefaultPlugins = [\r\n    'bigInt',\r\n    'optionalChaining',\r\n    'nullishCoalescingOperator'\r\n];\r\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = [];\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst isModelListener = (key) => key.startsWith('onUpdate:');\r\nconst extend = Object.assign;\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isMap = (val) => toTypeString(val) === '[object Map]';\r\nconst isSet = (val) => toTypeString(val) === '[object Set]';\r\nconst isDate = (val) => val instanceof Date;\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isIntegerKey = (key) => isString(key) &&\r\n    key !== 'NaN' &&\r\n    key[0] !== '-' &&\r\n    '' + parseInt(key, 10) === key;\r\nconst isReservedProp = /*#__PURE__*/ makeMap('key,ref,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\n/**\r\n * @private\r\n */\r\nconst hyphenate = cacheStringFunction((str) => {\r\n    return str.replace(hyphenateRE, '-$1').toLowerCase();\r\n});\r\n/**\r\n * @private\r\n */\r\nconst capitalize = cacheStringFunction((str) => {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n});\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => value !== oldValue && (value === value || oldValue === oldValue);\r\nconst invokeArrayFns = (fns, arg) => {\r\n    for (let i = 0; i < fns.length; i++) {\r\n        fns[i](arg);\r\n    }\r\n};\r\nconst def = (obj, key, value) => {\r\n    Object.defineProperty(obj, key, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value\r\n    });\r\n};\r\nconst toNumber = (val) => {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n};\r\nlet _globalThis;\r\nconst getGlobalThis = () => {\r\n    return (_globalThis ||\r\n        (_globalThis =\r\n            typeof globalThis !== 'undefined'\r\n                ? globalThis\r\n                : typeof self !== 'undefined'\r\n                    ? self\r\n                    : typeof window !== 'undefined'\r\n                        ? window\r\n                        : typeof global !== 'undefined'\r\n                            ? global\r\n                            : {}));\r\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, babelParserDefaultPlugins, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, invokeArrayFns, isArray, isBooleanAttr, isDate, isFunction, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownAttr, isMap, isModelListener, isNoUnitNumericStyleProp, isObject, isOn, isPlainObject, isPromise, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseHas, looseIndexOf, makeMap, normalizeClass, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, stringifyStyle, toDisplayString, toNumber, toRawType, toTypeString };\n","/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n// Patch flags are optimization hints generated by the compiler.\r\n// when a block with dynamicChildren is encountered during diff, the algorithm\r\n// enters \"optimized mode\". In this mode, we know that the vdom is produced by\r\n// a render function generated by the compiler, so the algorithm only needs to\r\n// handle updates explicitly marked by these patch flags.\r\n// dev only flag -> name mapping\r\nconst PatchFlagNames = {\r\n    [1 /* TEXT */]: `TEXT`,\r\n    [2 /* CLASS */]: `CLASS`,\r\n    [4 /* STYLE */]: `STYLE`,\r\n    [8 /* PROPS */]: `PROPS`,\r\n    [16 /* FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [1024 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [512 /* NEED_PATCH */]: `NEED_PATCH`,\r\n    [-1 /* HOISTED */]: `HOISTED`,\r\n    [-2 /* BAIL */]: `BAIL`\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    const lines = source.split(/\\r?\\n/);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count += lines[i].length + 1;\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - lineLength) + 1;\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + 1;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nconst isKnownAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const item = value[i];\r\n            const normalized = normalizeStyle(isString(item) ? parseStringStyle(item) : item);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:(.+)/;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText.split(listDelimiterRE).forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            res += normalizeClass(value[i]) + ' ';\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,' +\r\n    'summary,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.substring(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\r\n}\r\n// https://www.w3.org/TR/html52/syntax.html#comments\r\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\r\nfunction escapeHtmlComment(src) {\r\n    return src.replace(commentStripRE, '');\r\n}\n\nfunction looseCompareArrays(a, b) {\r\n    if (a.length !== b.length)\r\n        return false;\r\n    let equal = true;\r\n    for (let i = 0; equal && i < a.length; i++) {\r\n        equal = looseEqual(a[i], b[i]);\r\n    }\r\n    return equal;\r\n}\r\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    let aValidType = isDate(a);\r\n    let bValidType = isDate(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? a.getTime() === b.getTime() : false;\r\n    }\r\n    aValidType = isArray(a);\r\n    bValidType = isArray(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? looseCompareArrays(a, b) : false;\r\n    }\r\n    aValidType = isObject(a);\r\n    bValidType = isObject(b);\r\n    if (aValidType || bValidType) {\r\n        /* istanbul ignore if: this if will probably never be called */\r\n        if (!aValidType || !bValidType) {\r\n            return false;\r\n        }\r\n        const aKeysCount = Object.keys(a).length;\r\n        const bKeysCount = Object.keys(b).length;\r\n        if (aKeysCount !== bKeysCount) {\r\n            return false;\r\n        }\r\n        for (const key in a) {\r\n            const aHasKey = a.hasOwnProperty(key);\r\n            const bHasKey = b.hasOwnProperty(key);\r\n            if ((aHasKey && !bHasKey) ||\r\n                (!aHasKey && bHasKey) ||\r\n                !looseEqual(a[key], b[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return String(a) === String(b);\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\r\nfunction looseHas(set, val) {\r\n    for (let item of set) {\r\n        if (looseEqual(item, val))\r\n            return true;\r\n    }\r\n    return false;\r\n}\n\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nconst toDisplayString = (val) => {\r\n    return val == null\r\n        ? ''\r\n        : isObject(val)\r\n            ? JSON.stringify(val, replacer, 2)\r\n            : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n    if (isMap(val)) {\r\n        return {\r\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n                entries[`${key} =>`] = val;\r\n                return entries;\r\n            }, {})\r\n        };\r\n    }\r\n    else if (isSet(val)) {\r\n        return {\r\n            [`Set(${val.size})`]: [...val.values()]\r\n        };\r\n    }\r\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n        return String(val);\r\n    }\r\n    return val;\r\n};\n\n/**\r\n * List of @babel/parser plugins that are used for template expression\r\n * transforms and SFC script transforms. By default we enable proposals slated\r\n * for ES2020. This will need to be updated as the spec moves forward.\r\n * Full list at https://babeljs.io/docs/en/next/babel-parser#plugins\r\n */\r\nconst babelParserDefaultPlugins = [\r\n    'bigInt',\r\n    'optionalChaining',\r\n    'nullishCoalescingOperator'\r\n];\r\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = [];\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst isModelListener = (key) => key.startsWith('onUpdate:');\r\nconst extend = Object.assign;\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isMap = (val) => toTypeString(val) === '[object Map]';\r\nconst isSet = (val) => toTypeString(val) === '[object Set]';\r\nconst isDate = (val) => val instanceof Date;\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isIntegerKey = (key) => isString(key) &&\r\n    key !== 'NaN' &&\r\n    key[0] !== '-' &&\r\n    '' + parseInt(key, 10) === key;\r\nconst isReservedProp = /*#__PURE__*/ makeMap('key,ref,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\n/**\r\n * @private\r\n */\r\nconst hyphenate = cacheStringFunction((str) => {\r\n    return str.replace(hyphenateRE, '-$1').toLowerCase();\r\n});\r\n/**\r\n * @private\r\n */\r\nconst capitalize = cacheStringFunction((str) => {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n});\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => value !== oldValue && (value === value || oldValue === oldValue);\r\nconst invokeArrayFns = (fns, arg) => {\r\n    for (let i = 0; i < fns.length; i++) {\r\n        fns[i](arg);\r\n    }\r\n};\r\nconst def = (obj, key, value) => {\r\n    Object.defineProperty(obj, key, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value\r\n    });\r\n};\r\nconst toNumber = (val) => {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n};\r\nlet _globalThis;\r\nconst getGlobalThis = () => {\r\n    return (_globalThis ||\r\n        (_globalThis =\r\n            typeof globalThis !== 'undefined'\r\n                ? globalThis\r\n                : typeof self !== 'undefined'\r\n                    ? self\r\n                    : typeof window !== 'undefined'\r\n                        ? window\r\n                        : typeof global !== 'undefined'\r\n                            ? global\r\n                            : {}));\r\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, babelParserDefaultPlugins, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, invokeArrayFns, isArray, isBooleanAttr, isDate, isFunction, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownAttr, isMap, isModelListener, isNoUnitNumericStyleProp, isObject, isOn, isPlainObject, isPromise, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseHas, looseIndexOf, makeMap, normalizeClass, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, stringifyStyle, toDisplayString, toNumber, toRawType, toTypeString };\n","/*!\n  * vue-router v4.0.0-beta.12\n  * (c) 2020 Eduardo San Martin Morote\n  * @license MIT\n  */\nimport { getCurrentInstance, warn as warn$1, inject, onUnmounted, onDeactivated, onActivated, computed, unref, defineComponent, reactive, h, provide, ref, watch, shallowRef, nextTick } from 'vue';\n\nconst hasSymbol = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\r\nconst PolySymbol = (name) => \r\n// vr = vue router\r\nhasSymbol\r\n    ? Symbol((process.env.NODE_ENV !== 'production') ? '[vue-router]: ' + name : name)\r\n    : ((process.env.NODE_ENV !== 'production') ? '[vue-router]: ' : '_vr_') + name;\r\n// rvlm = Router View Location Matched\r\nconst matchedRouteKey = PolySymbol((process.env.NODE_ENV !== 'production') ? 'router view location matched' : 'rvlm');\r\n// rvd = Router View Depth\r\nconst viewDepthKey = PolySymbol((process.env.NODE_ENV !== 'production') ? 'router view depth' : 'rvd');\r\n// r = router\r\nconst routerKey = PolySymbol((process.env.NODE_ENV !== 'production') ? 'router' : 'r');\r\n// rt = route location\r\nconst routeLocationKey = PolySymbol((process.env.NODE_ENV !== 'production') ? 'route location' : 'rl');\n\nconst isBrowser = typeof window !== 'undefined';\n\nfunction isESModule(obj) {\r\n    return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module');\r\n}\r\nconst assign = Object.assign;\r\nfunction applyToParams(fn, params) {\r\n    const newParams = {};\r\n    for (const key in params) {\r\n        const value = params[key];\r\n        newParams[key] = Array.isArray(value) ? value.map(fn) : fn(value);\r\n    }\r\n    return newParams;\r\n}\r\nlet noop = () => { };\n\nfunction warn(msg) {\r\n    // avoid using ...args as it breaks in older Edge builds\r\n    const args = Array.from(arguments).slice(1);\r\n    console.warn.apply(console, ['[Vue Router warn]: ' + msg].concat(args));\r\n}\n\nconst TRAILING_SLASH_RE = /\\/$/;\r\nconst removeTrailingSlash = (path) => path.replace(TRAILING_SLASH_RE, '');\r\n/**\r\n * Transforms an URI into a normalized history location\r\n *\r\n * @param parseQuery\r\n * @param location - URI to normalize\r\n * @param currentLocation - current absolute location. Allows resolving relative\r\n * paths. Must start with `/`. Defaults to `/`\r\n * @returns a normalized history location\r\n */\r\nfunction parseURL(parseQuery, location, currentLocation = '/') {\r\n    let path, query = {}, searchString = '', hash = '';\r\n    // Could use URL and URLSearchParams but IE 11 doesn't support it\r\n    const searchPos = location.indexOf('?');\r\n    const hashPos = location.indexOf('#', searchPos > -1 ? searchPos : 0);\r\n    if (searchPos > -1) {\r\n        path = location.slice(0, searchPos);\r\n        searchString = location.slice(searchPos + 1, hashPos > -1 ? hashPos : location.length);\r\n        query = parseQuery(searchString);\r\n    }\r\n    if (hashPos > -1) {\r\n        path = path || location.slice(0, hashPos);\r\n        // keep the # character\r\n        hash = location.slice(hashPos, location.length);\r\n    }\r\n    // no search and no query\r\n    path = resolveRelativePath(path != null ? path : location, currentLocation);\r\n    // empty path means a relative query or hash `?foo=f`, `#thing`\r\n    return {\r\n        fullPath: path + (searchString && '?') + searchString + hash,\r\n        path,\r\n        query,\r\n        hash,\r\n    };\r\n}\r\n/**\r\n * Stringifies a URL object\r\n *\r\n * @param stringifyQuery\r\n * @param location\r\n */\r\nfunction stringifyURL(stringifyQuery, location) {\r\n    let query = location.query ? stringifyQuery(location.query) : '';\r\n    return location.path + (query && '?') + query + (location.hash || '');\r\n}\r\n/**\r\n * Strips off the base from the beginning of a location.pathname in a non\r\n * case-sensitive way.\r\n *\r\n * @param pathname - location.pathname\r\n * @param base - base to strip off\r\n */\r\nfunction stripBase(pathname, base) {\r\n    // no base or base is not found at the beginning\r\n    if (!base || pathname.toLowerCase().indexOf(base.toLowerCase()))\r\n        return pathname;\r\n    return pathname.slice(base.length) || '/';\r\n}\r\n/**\r\n * Checks if two RouteLocation are equal. This means that both locations are\r\n * pointing towards the same {@link RouteRecord} and that all `params`, `query`\r\n * parameters and `hash` are the same\r\n *\r\n * @param a - first {@link RouteLocation}\r\n * @param b - second {@link RouteLocation}\r\n */\r\nfunction isSameRouteLocation(stringifyQuery, a, b) {\r\n    let aLastIndex = a.matched.length - 1;\r\n    let bLastIndex = b.matched.length - 1;\r\n    return (aLastIndex > -1 &&\r\n        aLastIndex === bLastIndex &&\r\n        isSameRouteRecord(a.matched[aLastIndex], b.matched[bLastIndex]) &&\r\n        isSameRouteLocationParams(a.params, b.params) &&\r\n        stringifyQuery(a.query) === stringifyQuery(b.query) &&\r\n        a.hash === b.hash);\r\n}\r\n/**\r\n * Check if two `RouteRecords` are equal. Takes into account aliases: they are\r\n * considered equal to the `RouteRecord` they are aliasing.\r\n *\r\n * @param a - first {@link RouteRecord}\r\n * @param b - second {@link RouteRecord}\r\n */\r\nfunction isSameRouteRecord(a, b) {\r\n    // since the original record has an undefined value for aliasOf\r\n    // but all aliases point to the original record, this will always compare\r\n    // the original record\r\n    return (a.aliasOf || a) === (b.aliasOf || b);\r\n}\r\nfunction isSameRouteLocationParams(a, b) {\r\n    if (Object.keys(a).length !== Object.keys(b).length)\r\n        return false;\r\n    for (let key in a) {\r\n        if (!isSameRouteLocationParamsValue(a[key], b[key]))\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\nfunction isSameRouteLocationParamsValue(a, b) {\r\n    return Array.isArray(a)\r\n        ? isEquivalentArray(a, b)\r\n        : Array.isArray(b)\r\n            ? isEquivalentArray(b, a)\r\n            : a === b;\r\n}\r\n/**\r\n * Check if two arrays are the same or if an array with one single entry is the\r\n * same as another primitive value. Used to check query and parameters\r\n *\r\n * @param a - array of values\r\n * @param b - array of values or a single value\r\n */\r\nfunction isEquivalentArray(a, b) {\r\n    return Array.isArray(b)\r\n        ? a.length === b.length && a.every((value, i) => value === b[i])\r\n        : a.length === 1 && a[0] === b;\r\n}\r\n/**\r\n * Resolves a relative path that starts with `.`.\r\n *\r\n * @param to - path location we are resolving\r\n * @param from - currentLocation.path, should start with `/`\r\n */\r\nfunction resolveRelativePath(to, from) {\r\n    if (to.startsWith('/'))\r\n        return to;\r\n    if ((process.env.NODE_ENV !== 'production') && !from.startsWith('/')) {\r\n        warn(`Cannot resolve a relative location without an absolute path. Trying to resolve \"${to}\" from \"${from}\". It should look like \"/${from}\".`);\r\n        return to;\r\n    }\r\n    if (!to)\r\n        return from;\r\n    const fromSegments = from.split('/');\r\n    const toSegments = to.split('/');\r\n    let position = fromSegments.length - 1;\r\n    let toPosition;\r\n    let segment;\r\n    for (toPosition = 0; toPosition < toSegments.length; toPosition++) {\r\n        segment = toSegments[toPosition];\r\n        // can't go below zero\r\n        if (position === 1 || segment === '.')\r\n            continue;\r\n        if (segment === '..')\r\n            position--;\r\n        // found something that is not relative path\r\n        else\r\n            break;\r\n    }\r\n    return (fromSegments.slice(0, position).join('/') +\r\n        '/' +\r\n        toSegments\r\n            .slice(toPosition - (toPosition === toSegments.length ? 1 : 0))\r\n            .join('/'));\r\n}\n\nvar NavigationType;\r\n(function (NavigationType) {\r\n    NavigationType[\"pop\"] = \"pop\";\r\n    NavigationType[\"push\"] = \"push\";\r\n})(NavigationType || (NavigationType = {}));\r\nvar NavigationDirection;\r\n(function (NavigationDirection) {\r\n    NavigationDirection[\"back\"] = \"back\";\r\n    NavigationDirection[\"forward\"] = \"forward\";\r\n    NavigationDirection[\"unknown\"] = \"\";\r\n})(NavigationDirection || (NavigationDirection = {}));\r\n/**\r\n * Starting location for Histories\r\n */\r\nconst START = '';\r\n// Generic utils\r\n/**\r\n * Normalizes a base by removing any trailing slash and reading the base tag if\r\n * present.\r\n *\r\n * @param base - base to normalize\r\n */\r\nfunction normalizeBase(base) {\r\n    if (!base) {\r\n        if (isBrowser) {\r\n            // respect <base> tag\r\n            const baseEl = document.querySelector('base');\r\n            base = (baseEl && baseEl.getAttribute('href')) || '/';\r\n            // strip full URL origin\r\n            base = base.replace(/^\\w+:\\/\\/[^\\/]+/, '');\r\n        }\r\n        else {\r\n            base = '/';\r\n        }\r\n    }\r\n    // ensure leading slash when it was removed by the regex above avoid leading\r\n    // slash with hash because the file could be read from the disk like file://\r\n    // and the leading slash would cause problems\r\n    if (base[0] !== '/' && base[0] !== '#')\r\n        base = '/' + base;\r\n    // remove the trailing slash so all other method can just do `base + fullPath`\r\n    // to build an href\r\n    return removeTrailingSlash(base);\r\n}\r\n// remove any character before the hash\r\nconst BEFORE_HASH_RE = /^[^#]+#/;\r\nfunction createHref(base, location) {\r\n    return base.replace(BEFORE_HASH_RE, '#') + location;\r\n}\n\nfunction getElementPosition(el, offset) {\r\n    const docRect = document.documentElement.getBoundingClientRect();\r\n    const elRect = el.getBoundingClientRect();\r\n    return {\r\n        behavior: offset.behavior,\r\n        left: elRect.left - docRect.left - (offset.left || 0),\r\n        top: elRect.top - docRect.top - (offset.top || 0),\r\n    };\r\n}\r\nconst computeScrollPosition = () => ({\r\n    left: window.pageXOffset,\r\n    top: window.pageYOffset,\r\n});\r\nfunction scrollToPosition(position) {\r\n    let scrollToOptions;\r\n    if ('el' in position) {\r\n        let positionEl = position.el;\r\n        const isIdSelector = typeof positionEl === 'string' && positionEl.startsWith('#');\r\n        /**\r\n         * `id`s can accept pretty much any characters, including CSS combinators\r\n         * like `>` or `~`. It's still possible to retrieve elements using\r\n         * `document.getElementById('~')` but it needs to be escaped when using\r\n         * `document.querySelector('#\\\\~')` for it to be valid. The only\r\n         * requirements for `id`s are them to be unique on the page and to not be\r\n         * empty (`id=\"\"`). Because of that, when passing an id selector, it should\r\n         * be properly escaped for it to work with `querySelector`. We could check\r\n         * for the id selector to be simple (no CSS combinators `+ >~`) but that\r\n         * would make things inconsistent since they are valid characters for an\r\n         * `id` but would need to be escaped when using `querySelector`, breaking\r\n         * their usage and ending up in no selector returned. Selectors need to be\r\n         * escaped:\r\n         *\r\n         * - `#1-thing` becomes `#\\31 -thing`\r\n         * - `#with~symbols` becomes `#with\\\\~symbols`\r\n         *\r\n         * - More information about  the topic can be found at\r\n         *   https://mathiasbynens.be/notes/html5-id-class.\r\n         * - Practical example: https://mathiasbynens.be/demo/html5-id\r\n         */\r\n        if ((process.env.NODE_ENV !== 'production') && typeof position.el === 'string') {\r\n            if (!isIdSelector || !document.getElementById(position.el.slice(1))) {\r\n                try {\r\n                    let foundEl = document.querySelector(position.el);\r\n                    if (isIdSelector && foundEl) {\r\n                        warn(`The selector \"${position.el}\" should be passed as \"el: document.querySelector('${position.el}')\" because it starts with \"#\".`);\r\n                        // return to avoid other warnings\r\n                        return;\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    warn(`The selector \"${position.el}\" is invalid. If you are using an id selector, make sure to escape it. You can find more information about escaping characters in selectors at https://mathiasbynens.be/notes/css-escapes or use CSS.escape (https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape).`);\r\n                    // return to avoid other warnings\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        const el = typeof positionEl === 'string'\r\n            ? isIdSelector\r\n                ? document.getElementById(positionEl.slice(1))\r\n                : document.querySelector(positionEl)\r\n            : positionEl;\r\n        if (!el) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Couldn't find element using selector \"${position.el}\" returned by scrollBehavior.`);\r\n            return;\r\n        }\r\n        scrollToOptions = getElementPosition(el, position);\r\n    }\r\n    else {\r\n        scrollToOptions = position;\r\n    }\r\n    if ('scrollBehavior' in document.documentElement.style)\r\n        window.scrollTo(scrollToOptions);\r\n    else {\r\n        window.scrollTo(scrollToOptions.left != null ? scrollToOptions.left : window.pageXOffset, scrollToOptions.top != null ? scrollToOptions.top : window.pageYOffset);\r\n    }\r\n}\r\nfunction getScrollKey(path, delta) {\r\n    const position = history.state ? history.state.position - delta : -1;\r\n    return position + path;\r\n}\r\nconst scrollPositions = new Map();\r\nfunction saveScrollPosition(key, scrollPosition) {\r\n    scrollPositions.set(key, scrollPosition);\r\n}\r\nfunction getSavedScrollPosition(key) {\r\n    const scroll = scrollPositions.get(key);\r\n    // consume it so it's not used again\r\n    scrollPositions.delete(key);\r\n    return scroll;\r\n}\r\n// TODO: RFC about how to save scroll position\r\n/**\r\n * ScrollBehavior instance used by the router to compute and restore the scroll\r\n * position when navigating.\r\n */\r\n// export interface ScrollHandler<ScrollPositionEntry extends HistoryStateValue, ScrollPosition extends ScrollPositionEntry> {\r\n//   // returns a scroll position that can be saved in history\r\n//   compute(): ScrollPositionEntry\r\n//   // can take an extended ScrollPositionEntry\r\n//   scroll(position: ScrollPosition): void\r\n// }\r\n// export const scrollHandler: ScrollHandler<ScrollPosition> = {\r\n//   compute: computeScroll,\r\n//   scroll: scrollToPosition,\r\n// }\n\nlet createBaseLocation = () => location.protocol + '//' + location.host;\r\n/**\r\n * Creates a normalized history location from a window.location object\r\n * @param location -\r\n */\r\nfunction createCurrentLocation(base, location) {\r\n    const { pathname, search, hash } = location;\r\n    // allows hash based url\r\n    const hashPos = base.indexOf('#');\r\n    if (hashPos > -1) {\r\n        // prepend the starting slash to hash so the url starts with /#\r\n        let pathFromHash = hash.slice(1);\r\n        if (pathFromHash[0] !== '/')\r\n            pathFromHash = '/' + pathFromHash;\r\n        return stripBase(pathFromHash, '');\r\n    }\r\n    const path = stripBase(pathname, base);\r\n    return path + search + hash;\r\n}\r\nfunction useHistoryListeners(base, historyState, currentLocation, replace) {\r\n    let listeners = [];\r\n    let teardowns = [];\r\n    // TODO: should it be a stack? a Dict. Check if the popstate listener\r\n    // can trigger twice\r\n    let pauseState = null;\r\n    const popStateHandler = ({ state, }) => {\r\n        const to = createCurrentLocation(base, location);\r\n        const from = currentLocation.value;\r\n        const fromState = historyState.value;\r\n        let delta = 0;\r\n        if (state) {\r\n            currentLocation.value = to;\r\n            historyState.value = state;\r\n            // ignore the popstate and reset the pauseState\r\n            if (pauseState && pauseState === from) {\r\n                pauseState = null;\r\n                return;\r\n            }\r\n            delta = fromState ? state.position - fromState.position : 0;\r\n        }\r\n        else {\r\n            replace(to);\r\n        }\r\n        // console.log({ deltaFromCurrent })\r\n        // Here we could also revert the navigation by calling history.go(-delta)\r\n        // this listener will have to be adapted to not trigger again and to wait for the url\r\n        // to be updated before triggering the listeners. Some kind of validation function would also\r\n        // need to be passed to the listeners so the navigation can be accepted\r\n        // call all listeners\r\n        listeners.forEach(listener => {\r\n            listener(currentLocation.value, from, {\r\n                delta,\r\n                type: NavigationType.pop,\r\n                direction: delta\r\n                    ? delta > 0\r\n                        ? NavigationDirection.forward\r\n                        : NavigationDirection.back\r\n                    : NavigationDirection.unknown,\r\n            });\r\n        });\r\n    };\r\n    function pauseListeners() {\r\n        pauseState = currentLocation.value;\r\n    }\r\n    function listen(callback) {\r\n        // setup the listener and prepare teardown callbacks\r\n        listeners.push(callback);\r\n        const teardown = () => {\r\n            const index = listeners.indexOf(callback);\r\n            if (index > -1)\r\n                listeners.splice(index, 1);\r\n        };\r\n        teardowns.push(teardown);\r\n        return teardown;\r\n    }\r\n    function beforeUnloadListener() {\r\n        const { history } = window;\r\n        if (!history.state)\r\n            return;\r\n        history.replaceState(assign({}, history.state, { scroll: computeScrollPosition() }), '');\r\n    }\r\n    function destroy() {\r\n        for (const teardown of teardowns)\r\n            teardown();\r\n        teardowns = [];\r\n        window.removeEventListener('popstate', popStateHandler);\r\n        window.removeEventListener('beforeunload', beforeUnloadListener);\r\n    }\r\n    // setup the listeners and prepare teardown callbacks\r\n    window.addEventListener('popstate', popStateHandler);\r\n    window.addEventListener('beforeunload', beforeUnloadListener);\r\n    return {\r\n        pauseListeners,\r\n        listen,\r\n        destroy,\r\n    };\r\n}\r\n/**\r\n * Creates a state object\r\n */\r\nfunction buildState(back, current, forward, replaced = false, computeScroll = false) {\r\n    return {\r\n        back,\r\n        current,\r\n        forward,\r\n        replaced,\r\n        position: window.history.length,\r\n        scroll: computeScroll ? computeScrollPosition() : null,\r\n    };\r\n}\r\nfunction useHistoryStateNavigation(base) {\r\n    const { history, location } = window;\r\n    // private variables\r\n    let currentLocation = {\r\n        value: createCurrentLocation(base, location),\r\n    };\r\n    let historyState = { value: history.state };\r\n    // build current history entry as this is a fresh navigation\r\n    if (!historyState.value) {\r\n        changeLocation(currentLocation.value, {\r\n            back: null,\r\n            current: currentLocation.value,\r\n            forward: null,\r\n            // the length is off by one, we need to decrease it\r\n            position: history.length - 1,\r\n            replaced: true,\r\n            // don't add a scroll as the user may have an anchor and we want\r\n            // scrollBehavior to be triggered without a saved position\r\n            scroll: null,\r\n        }, true);\r\n    }\r\n    function changeLocation(to, state, replace) {\r\n        const url = createBaseLocation() +\r\n            // preserve any existing query when base has a hash\r\n            (base.indexOf('#') > -1 && location.search\r\n                ? location.pathname + location.search + '#'\r\n                : base) +\r\n            to;\r\n        try {\r\n            // BROWSER QUIRK\r\n            // NOTE: Safari throws a SecurityError when calling this function 100 times in 30 seconds\r\n            history[replace ? 'replaceState' : 'pushState'](state, '', url);\r\n            historyState.value = state;\r\n        }\r\n        catch (err) {\r\n            warn('Error with push/replace State', err);\r\n            // Force the navigation, this also resets the call count\r\n            location[replace ? 'replace' : 'assign'](url);\r\n        }\r\n    }\r\n    function replace(to, data) {\r\n        const state = assign({}, history.state, buildState(historyState.value.back, \r\n        // keep back and forward entries but override current position\r\n        to, historyState.value.forward, true), data, { position: historyState.value.position });\r\n        changeLocation(to, state, true);\r\n        currentLocation.value = to;\r\n    }\r\n    function push(to, data) {\r\n        // Add to current entry the information of where we are going\r\n        // as well as saving the current position\r\n        const currentState = assign({}, \r\n        // use current history state to gracefully handle a wrong call to\r\n        // history.replaceState\r\n        // https://github.com/vuejs/vue-router-next/issues/366\r\n        historyState.value, history.state, {\r\n            forward: to,\r\n            scroll: computeScrollPosition(),\r\n        });\r\n        if ((process.env.NODE_ENV !== 'production') && !history.state) {\r\n            warn(`history.state seems to have been manually replaced without preserving the necessary values. Make sure to preserve existing history state if you are manually calling history.replaceState:\\n\\n` +\r\n                `history.replaceState(history.state, '', url)\\n\\n` +\r\n                `You can find more information at https://next.router.vuejs.org/guide/migration/#usage-of-history-state.`);\r\n        }\r\n        changeLocation(currentState.current, currentState, true);\r\n        const state = assign({}, buildState(currentLocation.value, to, null), { position: currentState.position + 1 }, data);\r\n        changeLocation(to, state, false);\r\n        currentLocation.value = to;\r\n    }\r\n    return {\r\n        location: currentLocation,\r\n        state: historyState,\r\n        push,\r\n        replace,\r\n    };\r\n}\r\n/**\r\n * Creates an HTML5 history. Most common history for single page applications.\r\n *\r\n * @param base -\r\n */\r\nfunction createWebHistory(base) {\r\n    base = normalizeBase(base);\r\n    const historyNavigation = useHistoryStateNavigation(base);\r\n    const historyListeners = useHistoryListeners(base, historyNavigation.state, historyNavigation.location, historyNavigation.replace);\r\n    function go(delta, triggerListeners = true) {\r\n        if (!triggerListeners)\r\n            historyListeners.pauseListeners();\r\n        history.go(delta);\r\n    }\r\n    const routerHistory = assign({\r\n        // it's overridden right after\r\n        location: '',\r\n        base,\r\n        go,\r\n        createHref: createHref.bind(null, base),\r\n    }, historyNavigation, historyListeners);\r\n    Object.defineProperty(routerHistory, 'location', {\r\n        get: () => historyNavigation.location.value,\r\n    });\r\n    Object.defineProperty(routerHistory, 'state', {\r\n        get: () => historyNavigation.state.value,\r\n    });\r\n    return routerHistory;\r\n}\n\n/**\r\n * Creates a in-memory based history. The main purpose of this history is to handle SSR. It starts in a special location that is nowhere.\r\n * It's up to the user to replace that location with the starter location by either calling `router.push` or `router.replace`.\r\n *\r\n * @param base - Base applied to all urls, defaults to '/'\r\n * @returns a history object that can be passed to the router constructor\r\n */\r\nfunction createMemoryHistory(base = '') {\r\n    let listeners = [];\r\n    let queue = [START];\r\n    let position = 0;\r\n    function setLocation(location) {\r\n        position++;\r\n        if (position === queue.length) {\r\n            // we are at the end, we can simply append a new entry\r\n            queue.push(location);\r\n        }\r\n        else {\r\n            // we are in the middle, we remove everything from here in the queue\r\n            queue.splice(position);\r\n            queue.push(location);\r\n        }\r\n    }\r\n    function triggerListeners(to, from, { direction, delta }) {\r\n        const info = {\r\n            direction,\r\n            delta,\r\n            type: NavigationType.pop,\r\n        };\r\n        for (let callback of listeners) {\r\n            callback(to, from, info);\r\n        }\r\n    }\r\n    const routerHistory = {\r\n        // rewritten by Object.defineProperty\r\n        location: START,\r\n        state: {},\r\n        base,\r\n        createHref: createHref.bind(null, base),\r\n        replace(to) {\r\n            // remove current entry and decrement position\r\n            queue.splice(position--, 1);\r\n            setLocation(to);\r\n        },\r\n        push(to, data) {\r\n            setLocation(to);\r\n        },\r\n        listen(callback) {\r\n            listeners.push(callback);\r\n            return () => {\r\n                const index = listeners.indexOf(callback);\r\n                if (index > -1)\r\n                    listeners.splice(index, 1);\r\n            };\r\n        },\r\n        destroy() {\r\n            listeners = [];\r\n        },\r\n        go(delta, shouldTrigger = true) {\r\n            const from = this.location;\r\n            const direction = \r\n            // we are considering delta === 0 going forward, but in abstract mode\r\n            // using 0 for the delta doesn't make sense like it does in html5 where\r\n            // it reloads the page\r\n            delta < 0 ? NavigationDirection.back : NavigationDirection.forward;\r\n            position = Math.max(0, Math.min(position + delta, queue.length - 1));\r\n            if (shouldTrigger) {\r\n                triggerListeners(this.location, from, {\r\n                    direction,\r\n                    delta,\r\n                });\r\n            }\r\n        },\r\n    };\r\n    Object.defineProperty(routerHistory, 'location', {\r\n        get: () => queue[position],\r\n    });\r\n    return routerHistory;\r\n}\n\n/**\r\n * Creates a hash history. Useful for web applications with no host (e.g.\r\n * `file://`) or when configuring a server to handle any URL.\r\n *\r\n * @param base - optional base to provide. Defaults to `location.pathname` or\r\n * `/` if at root. If there is a `base` tag in the `head`, its value will be\r\n * **ignored**.\r\n *\r\n * @example\r\n * ```js\r\n * // at https://example.com/folder\r\n * createWebHashHistory() // gives a url of `https://example.com/folder#`\r\n * createWebHashHistory('/folder/') // gives a url of `https://example.com/folder/#`\r\n * // if the `#` is provided in the base, it won't be added by `createWebHashHistory`\r\n * createWebHashHistory('/folder/#/app/') // gives a url of `https://example.com/folder/#/app/`\r\n * // you should avoid doing this because it changes the original url and breaks copying urls\r\n * createWebHashHistory('/other-folder/') // gives a url of `https://example.com/other-folder/#`\r\n *\r\n * // at file:///usr/etc/folder/index.html\r\n * // for locations with no `host`, the base is ignored\r\n * createWebHashHistory('/iAmIgnored') // gives a url of `file:///usr/etc/folder/index.html#`\r\n * ```\r\n */\r\nfunction createWebHashHistory(base) {\r\n    // Make sure this implementation is fine in terms of encoding, specially for IE11\r\n    // for `file://`, directly use the pathname and ignore the base\r\n    // location.pathname contains an initial `/` even at the root: `https://example.com`\r\n    base = location.host ? base || location.pathname : location.pathname;\r\n    // allow the user to provide a `#` in the middle: `/base/#/app`\r\n    if (base.indexOf('#') < 0)\r\n        base += '#';\r\n    if ((process.env.NODE_ENV !== 'production') && !base.endsWith('#/') && !base.endsWith('#')) {\r\n        warn(`A hash base must end with a \"#\":\\n\"${base}\" should be \"${base.replace(/#.*$/, '#')}\".`);\r\n    }\r\n    return createWebHistory(base);\r\n}\n\nfunction isRouteLocation(route) {\r\n    return typeof route === 'string' || (route && typeof route === 'object');\r\n}\r\nfunction isRouteName(name) {\r\n    return typeof name === 'string' || typeof name === 'symbol';\r\n}\n\n/**\r\n * Initial route location where the router is. Can be used in navigation guards\r\n * to differentiate the initial navigation.\r\n *\r\n * @example\r\n * ```js\r\n * import { START_LOCATION } from 'vue-router'\r\n *\r\n * router.beforeEach((to, from) => {\r\n *   if (from === START_LOCATION) {\r\n *     // initial navigation\r\n *   }\r\n * })\r\n * ```\r\n */\r\nconst START_LOCATION_NORMALIZED = {\r\n    path: '/',\r\n    name: undefined,\r\n    params: {},\r\n    query: {},\r\n    hash: '',\r\n    fullPath: '/',\r\n    matched: [],\r\n    meta: {},\r\n    redirectedFrom: undefined,\r\n};\n\nconst NavigationFailureSymbol = PolySymbol((process.env.NODE_ENV !== 'production') ? 'navigation failure' : 'nf');\r\n/**\r\n * Enumeration with all possible types for navigation failures. Can be passed to\r\n * {@link isNavigationFailure} to check for specific failures.\r\n */\r\nvar NavigationFailureType;\r\n(function (NavigationFailureType) {\r\n    /**\r\n     * An aborted navigation is a navigation that failed because a navigation\r\n     * guard returned `false` or called `next(false)`\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"aborted\"] = 4] = \"aborted\";\r\n    /**\r\n     * A cancelled navigation is a navigation that failed because a more recent\r\n     * navigation finished started (not necessarily finished).\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"cancelled\"] = 8] = \"cancelled\";\r\n    /**\r\n     * A duplicated navigation is a navigation that failed because it was\r\n     * initiated while already being at the exact same location.\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"duplicated\"] = 16] = \"duplicated\";\r\n})(NavigationFailureType || (NavigationFailureType = {}));\r\n// DEV only debug messages\r\nconst ErrorTypeMessages = {\r\n    [1 /* MATCHER_NOT_FOUND */]({ location, currentLocation }) {\r\n        return `No match for\\n ${JSON.stringify(location)}${currentLocation\r\n            ? '\\nwhile being at\\n' + JSON.stringify(currentLocation)\r\n            : ''}`;\r\n    },\r\n    [2 /* NAVIGATION_GUARD_REDIRECT */]({ from, to, }) {\r\n        return `Redirected from \"${from.fullPath}\" to \"${stringifyRoute(to)}\" via a navigation guard.`;\r\n    },\r\n    [4 /* NAVIGATION_ABORTED */]({ from, to }) {\r\n        return `Navigation aborted from \"${from.fullPath}\" to \"${to.fullPath}\" via a navigation guard.`;\r\n    },\r\n    [8 /* NAVIGATION_CANCELLED */]({ from, to }) {\r\n        return `Navigation cancelled from \"${from.fullPath}\" to \"${to.fullPath}\" with a new navigation.`;\r\n    },\r\n    [16 /* NAVIGATION_DUPLICATED */]({ from, to }) {\r\n        return `Avoided redundant navigation to current location: \"${from.fullPath}\".`;\r\n    },\r\n};\r\nfunction createRouterError(type, params) {\r\n    if ((process.env.NODE_ENV !== 'production') || !true) {\r\n        return assign(new Error(ErrorTypeMessages[type](params)), {\r\n            type,\r\n            [NavigationFailureSymbol]: true,\r\n        }, params);\r\n    }\r\n    else {\r\n        return assign(new Error(), {\r\n            type,\r\n            [NavigationFailureSymbol]: true,\r\n        }, params);\r\n    }\r\n}\r\nfunction isNavigationFailure(error, type) {\r\n    return (error instanceof Error &&\r\n        NavigationFailureSymbol in error &&\r\n        (type == null || !!(error.type & type)));\r\n}\r\nconst propertiesToLog = ['params', 'query', 'hash'];\r\nfunction stringifyRoute(to) {\r\n    if (typeof to === 'string')\r\n        return to;\r\n    if ('path' in to)\r\n        return to.path;\r\n    const location = {};\r\n    for (const key of propertiesToLog) {\r\n        if (key in to)\r\n            location[key] = to[key];\r\n    }\r\n    return JSON.stringify(location, null, 2);\r\n}\n\n// default pattern for a param: non greedy everything but /\r\nconst BASE_PARAM_PATTERN = '[^/]+?';\r\nconst BASE_PATH_PARSER_OPTIONS = {\r\n    sensitive: false,\r\n    strict: false,\r\n    start: true,\r\n    end: true,\r\n};\r\n// Special Regex characters that must be escaped in static tokens\r\nconst REGEX_CHARS_RE = /[.+*?^${}()[\\]/\\\\]/g;\r\n/**\r\n * Creates a path parser from an array of Segments (a segment is an array of Tokens)\r\n *\r\n * @param segments - array of segments returned by tokenizePath\r\n * @param extraOptions - optional options for the regexp\r\n * @returns a PathParser\r\n */\r\nfunction tokensToParser(segments, extraOptions) {\r\n    const options = assign({}, BASE_PATH_PARSER_OPTIONS, extraOptions);\r\n    // the amount of scores is the same as the length of segments except for the root segment \"/\"\r\n    let score = [];\r\n    // the regexp as a string\r\n    let pattern = options.start ? '^' : '';\r\n    // extracted keys\r\n    const keys = [];\r\n    for (const segment of segments) {\r\n        // the root segment needs special treatment\r\n        const segmentScores = segment.length ? [] : [90 /* Root */];\r\n        // allow trailing slash\r\n        if (options.strict && !segment.length)\r\n            pattern += '/';\r\n        for (let tokenIndex = 0; tokenIndex < segment.length; tokenIndex++) {\r\n            const token = segment[tokenIndex];\r\n            // resets the score if we are inside a sub segment /:a-other-:b\r\n            let subSegmentScore = 40 /* Segment */ +\r\n                (options.sensitive ? 0.25 /* BonusCaseSensitive */ : 0);\r\n            if (token.type === 0 /* Static */) {\r\n                // prepend the slash if we are starting a new segment\r\n                if (!tokenIndex)\r\n                    pattern += '/';\r\n                pattern += token.value.replace(REGEX_CHARS_RE, '\\\\$&');\r\n                subSegmentScore += 40 /* Static */;\r\n            }\r\n            else if (token.type === 1 /* Param */) {\r\n                const { value, repeatable, optional, regexp } = token;\r\n                keys.push({\r\n                    name: value,\r\n                    repeatable,\r\n                    optional,\r\n                });\r\n                const re = regexp ? regexp : BASE_PARAM_PATTERN;\r\n                // the user provided a custom regexp /:id(\\\\d+)\r\n                if (re !== BASE_PARAM_PATTERN) {\r\n                    subSegmentScore += 10 /* BonusCustomRegExp */;\r\n                    // make sure the regexp is valid before using it\r\n                    try {\r\n                        new RegExp(`(${re})`);\r\n                    }\r\n                    catch (err) {\r\n                        throw new Error(`Invalid custom RegExp for param \"${value}\" (${re}): ` +\r\n                            err.message);\r\n                    }\r\n                }\r\n                // when we repeat we must take care of the repeating leading slash\r\n                let subPattern = repeatable ? `((?:${re})(?:/(?:${re}))*)` : `(${re})`;\r\n                // prepend the slash if we are starting a new segment\r\n                if (!tokenIndex)\r\n                    subPattern = optional ? `(?:/${subPattern})` : '/' + subPattern;\r\n                if (optional)\r\n                    subPattern += '?';\r\n                pattern += subPattern;\r\n                subSegmentScore += 20 /* Dynamic */;\r\n                if (optional)\r\n                    subSegmentScore += -8 /* BonusOptional */;\r\n                if (repeatable)\r\n                    subSegmentScore += -20 /* BonusRepeatable */;\r\n                if (re === '.*')\r\n                    subSegmentScore += -50 /* BonusWildcard */;\r\n            }\r\n            segmentScores.push(subSegmentScore);\r\n        }\r\n        // an empty array like /home/ -> [[{home}], []]\r\n        // if (!segment.length) pattern += '/'\r\n        score.push(segmentScores);\r\n    }\r\n    // only apply the strict bonus to the last score\r\n    if (options.strict && options.end) {\r\n        const i = score.length - 1;\r\n        score[i][score[i].length - 1] += 0.7000000000000001 /* BonusStrict */;\r\n    }\r\n    // TODO: dev only warn double trailing slash\r\n    if (!options.strict)\r\n        pattern += '/?';\r\n    if (options.end)\r\n        pattern += '$';\r\n    // allow paths like /dynamic to only match dynamic or dynamic/... but not dynamic_something_else\r\n    else if (options.strict)\r\n        pattern += '(?:/|$)';\r\n    const re = new RegExp(pattern, options.sensitive ? '' : 'i');\r\n    function parse(path) {\r\n        const match = path.match(re);\r\n        const params = {};\r\n        if (!match)\r\n            return null;\r\n        for (let i = 1; i < match.length; i++) {\r\n            const value = match[i] || '';\r\n            const key = keys[i - 1];\r\n            params[key.name] = value && key.repeatable ? value.split('/') : value;\r\n        }\r\n        return params;\r\n    }\r\n    function stringify(params) {\r\n        let path = '';\r\n        // for optional parameters to allow to be empty\r\n        let avoidDuplicatedSlash = false;\r\n        for (const segment of segments) {\r\n            if (!avoidDuplicatedSlash || !path.endsWith('/'))\r\n                path += '/';\r\n            avoidDuplicatedSlash = false;\r\n            for (const token of segment) {\r\n                if (token.type === 0 /* Static */) {\r\n                    path += token.value;\r\n                }\r\n                else if (token.type === 1 /* Param */) {\r\n                    const { value, repeatable, optional } = token;\r\n                    const param = value in params ? params[value] : '';\r\n                    if (Array.isArray(param) && !repeatable)\r\n                        throw new Error(`Provided param \"${value}\" is an array but it is not repeatable (* or + modifiers)`);\r\n                    const text = Array.isArray(param) ? param.join('/') : param;\r\n                    if (!text) {\r\n                        if (optional) {\r\n                            // remove the last slash as we could be at the end\r\n                            if (path.endsWith('/'))\r\n                                path = path.slice(0, -1);\r\n                            // do not append a slash on the next iteration\r\n                            else\r\n                                avoidDuplicatedSlash = true;\r\n                        }\r\n                        else\r\n                            throw new Error(`Missing required param \"${value}\"`);\r\n                    }\r\n                    path += text;\r\n                }\r\n            }\r\n        }\r\n        return path;\r\n    }\r\n    return {\r\n        re,\r\n        score,\r\n        keys,\r\n        parse,\r\n        stringify,\r\n    };\r\n}\r\n/**\r\n * Compares an array of numbers as used in PathParser.score and returns a\r\n * number. This function can be used to `sort` an array\r\n * @param a - first array of numbers\r\n * @param b - second array of numbers\r\n * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b\r\n * should be sorted first\r\n */\r\nfunction compareScoreArray(a, b) {\r\n    let i = 0;\r\n    while (i < a.length && i < b.length) {\r\n        const diff = b[i] - a[i];\r\n        // only keep going if diff === 0\r\n        if (diff)\r\n            return diff;\r\n        i++;\r\n    }\r\n    // if the last subsegment was Static, the shorter segments should be sorted first\r\n    // otherwise sort the longest segment first\r\n    if (a.length < b.length) {\r\n        return a.length === 1 && a[0] === 40 /* Static */ + 40 /* Segment */\r\n            ? -1\r\n            : 1;\r\n    }\r\n    else if (a.length > b.length) {\r\n        return b.length === 1 && b[0] === 40 /* Static */ + 40 /* Segment */\r\n            ? 1\r\n            : -1;\r\n    }\r\n    return 0;\r\n}\r\n/**\r\n * Compare function that can be used with `sort` to sort an array of PathParser\r\n * @param a - first PathParser\r\n * @param b - second PathParser\r\n * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b\r\n */\r\nfunction comparePathParserScore(a, b) {\r\n    let i = 0;\r\n    const aScore = a.score;\r\n    const bScore = b.score;\r\n    while (i < aScore.length && i < bScore.length) {\r\n        const comp = compareScoreArray(aScore[i], bScore[i]);\r\n        // do not return if both are equal\r\n        if (comp)\r\n            return comp;\r\n        i++;\r\n    }\r\n    // if a and b share the same score entries but b has more, sort b first\r\n    return bScore.length - aScore.length;\r\n    // this is the ternary version\r\n    // return aScore.length < bScore.length\r\n    //   ? 1\r\n    //   : aScore.length > bScore.length\r\n    //   ? -1\r\n    //   : 0\r\n}\n\nconst ROOT_TOKEN = {\r\n    type: 0 /* Static */,\r\n    value: '',\r\n};\r\nconst VALID_PARAM_RE = /[a-zA-Z0-9_]/;\r\n// After some profiling, the cache seems to be unnecessary because tokenizePath\r\n// (the slowest part of adding a route) is very fast\r\n// const tokenCache = new Map<string, Token[][]>()\r\nfunction tokenizePath(path) {\r\n    if (!path)\r\n        return [[]];\r\n    if (path === '/')\r\n        return [[ROOT_TOKEN]];\r\n    // remove the leading slash\r\n    if (!path.startsWith('/'))\r\n        throw new Error(`Route \"${path}\" should be \"/${path}\".`);\r\n    // if (tokenCache.has(path)) return tokenCache.get(path)!\r\n    function crash(message) {\r\n        throw new Error(`ERR (${state})/\"${buffer}\": ${message}`);\r\n    }\r\n    let state = 0 /* Static */;\r\n    let previousState = state;\r\n    const tokens = [];\r\n    // the segment will always be valid because we get into the initial state\r\n    // with the leading /\r\n    let segment;\r\n    function finalizeSegment() {\r\n        if (segment)\r\n            tokens.push(segment);\r\n        segment = [];\r\n    }\r\n    // index on the path\r\n    let i = 0;\r\n    // char at index\r\n    let char;\r\n    // buffer of the value read\r\n    let buffer = '';\r\n    // custom regexp for a param\r\n    let customRe = '';\r\n    function consumeBuffer() {\r\n        if (!buffer)\r\n            return;\r\n        if (state === 0 /* Static */) {\r\n            segment.push({\r\n                type: 0 /* Static */,\r\n                value: buffer,\r\n            });\r\n        }\r\n        else if (state === 1 /* Param */ ||\r\n            state === 2 /* ParamRegExp */ ||\r\n            state === 3 /* ParamRegExpEnd */) {\r\n            if (segment.length > 1 && (char === '*' || char === '+'))\r\n                crash(`A repeatable param (${buffer}) must be alone in its segment. eg: '/:ids+.`);\r\n            segment.push({\r\n                type: 1 /* Param */,\r\n                value: buffer,\r\n                regexp: customRe,\r\n                repeatable: char === '*' || char === '+',\r\n                optional: char === '*' || char === '?',\r\n            });\r\n        }\r\n        else {\r\n            crash('Invalid state to consume buffer');\r\n        }\r\n        buffer = '';\r\n    }\r\n    function addCharToBuffer() {\r\n        buffer += char;\r\n    }\r\n    while (i < path.length) {\r\n        char = path[i++];\r\n        if (char === '\\\\' && state !== 2 /* ParamRegExp */) {\r\n            previousState = state;\r\n            state = 4 /* EscapeNext */;\r\n            continue;\r\n        }\r\n        switch (state) {\r\n            case 0 /* Static */:\r\n                if (char === '/') {\r\n                    if (buffer) {\r\n                        consumeBuffer();\r\n                    }\r\n                    finalizeSegment();\r\n                }\r\n                else if (char === ':') {\r\n                    consumeBuffer();\r\n                    state = 1 /* Param */;\r\n                }\r\n                else {\r\n                    addCharToBuffer();\r\n                }\r\n                break;\r\n            case 4 /* EscapeNext */:\r\n                addCharToBuffer();\r\n                state = previousState;\r\n                break;\r\n            case 1 /* Param */:\r\n                if (char === '(') {\r\n                    state = 2 /* ParamRegExp */;\r\n                    customRe = '';\r\n                }\r\n                else if (VALID_PARAM_RE.test(char)) {\r\n                    addCharToBuffer();\r\n                }\r\n                else {\r\n                    consumeBuffer();\r\n                    state = 0 /* Static */;\r\n                    // go back one character if we were not modifying\r\n                    if (char !== '*' && char !== '?' && char !== '+')\r\n                        i--;\r\n                }\r\n                break;\r\n            case 2 /* ParamRegExp */:\r\n                // TODO: is it worth handling nested regexp? like :p(?:prefix_([^/]+)_suffix)\r\n                // it already works by escaping the closing )\r\n                // https://paths.esm.dev/?p=AAMeJbiAwQEcDKbAoAAkP60PG2R6QAvgNaA6AFACM2ABuQBB#\r\n                // is this really something people need since you can also write\r\n                // /prefix_:p()_suffix\r\n                if (char === ')') {\r\n                    // handle the escaped )\r\n                    if (customRe[customRe.length - 1] == '\\\\')\r\n                        customRe = customRe.slice(0, -1) + char;\r\n                    else\r\n                        state = 3 /* ParamRegExpEnd */;\r\n                }\r\n                else {\r\n                    customRe += char;\r\n                }\r\n                break;\r\n            case 3 /* ParamRegExpEnd */:\r\n                // same as finalizing a param\r\n                consumeBuffer();\r\n                state = 0 /* Static */;\r\n                // go back one character if we were not modifying\r\n                if (char !== '*' && char !== '?' && char !== '+')\r\n                    i--;\r\n                break;\r\n            default:\r\n                crash('Unknown state');\r\n                break;\r\n        }\r\n    }\r\n    if (state === 2 /* ParamRegExp */)\r\n        crash(`Unfinished custom RegExp for param \"${buffer}\"`);\r\n    consumeBuffer();\r\n    finalizeSegment();\r\n    // tokenCache.set(path, tokens)\r\n    return tokens;\r\n}\n\nfunction createRouteRecordMatcher(record, parent, options) {\r\n    const parser = tokensToParser(tokenizePath(record.path), options);\r\n    // warn against params with the same name\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const existingKeys = new Set();\r\n        for (const key of parser.keys) {\r\n            if (existingKeys.has(key.name))\r\n                warn(`Found duplicated params with name \"${key.name}\" for path \"${record.path}\". Only the last one will be available on \"$route.params\".`);\r\n            existingKeys.add(key.name);\r\n        }\r\n    }\r\n    const matcher = assign(parser, {\r\n        record,\r\n        parent,\r\n        // these needs to be populated by the parent\r\n        children: [],\r\n        alias: [],\r\n    });\r\n    if (parent) {\r\n        // both are aliases or both are not aliases\r\n        // we don't want to mix them because the order is used when\r\n        // passing originalRecord in Matcher.addRoute\r\n        if (!matcher.record.aliasOf === !parent.record.aliasOf)\r\n            parent.children.push(matcher);\r\n    }\r\n    return matcher;\r\n}\n\n/**\r\n * Creates a Router Matcher.\r\n *\r\n * @internal\r\n * @param routes - array of initial routes\r\n * @param globalOptions - global route options\r\n */\r\nfunction createRouterMatcher(routes, globalOptions) {\r\n    // normalized ordered array of matchers\r\n    const matchers = [];\r\n    const matcherMap = new Map();\r\n    globalOptions = mergeOptions({ strict: false, end: true, sensitive: false }, globalOptions);\r\n    function getRecordMatcher(name) {\r\n        return matcherMap.get(name);\r\n    }\r\n    function addRoute(record, parent, originalRecord) {\r\n        // used later on to remove by name\r\n        let isRootAdd = !originalRecord;\r\n        let mainNormalizedRecord = normalizeRouteRecord(record);\r\n        // we might be the child of an alias\r\n        mainNormalizedRecord.aliasOf = originalRecord && originalRecord.record;\r\n        const options = mergeOptions(globalOptions, record);\r\n        // generate an array of records to correctly handle aliases\r\n        const normalizedRecords = [\r\n            mainNormalizedRecord,\r\n        ];\r\n        if ('alias' in record) {\r\n            const aliases = typeof record.alias === 'string' ? [record.alias] : record.alias;\r\n            for (const alias of aliases) {\r\n                normalizedRecords.push(assign({}, mainNormalizedRecord, {\r\n                    // this allows us to hold a copy of the `components` option\r\n                    // so that async components cache is hold on the original record\r\n                    components: originalRecord\r\n                        ? originalRecord.record.components\r\n                        : mainNormalizedRecord.components,\r\n                    path: alias,\r\n                    // we might be the child of an alias\r\n                    aliasOf: originalRecord\r\n                        ? originalRecord.record\r\n                        : mainNormalizedRecord,\r\n                }));\r\n            }\r\n        }\r\n        let matcher;\r\n        let originalMatcher;\r\n        for (const normalizedRecord of normalizedRecords) {\r\n            let { path } = normalizedRecord;\r\n            // Build up the path for nested routes if the child isn't an absolute\r\n            // route. Only add the / delimiter if the child path isn't empty and if the\r\n            // parent path doesn't have a trailing slash\r\n            if (parent && path[0] !== '/') {\r\n                let parentPath = parent.record.path;\r\n                let connectingSlash = parentPath[parentPath.length - 1] === '/' ? '' : '/';\r\n                normalizedRecord.path =\r\n                    parent.record.path + (path && connectingSlash + path);\r\n            }\r\n            // create the object before hand so it can be passed to children\r\n            matcher = createRouteRecordMatcher(normalizedRecord, parent, options);\r\n            if ((process.env.NODE_ENV !== 'production') && parent && path[0] === '/')\r\n                checkMissingParamsInAbsolutePath(matcher, parent);\r\n            // if we are an alias we must tell the original record that we exist\r\n            // so we can be removed\r\n            if (originalRecord) {\r\n                originalRecord.alias.push(matcher);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkSameParams(originalRecord, matcher);\r\n                }\r\n            }\r\n            else {\r\n                // otherwise, the first record is the original and others are aliases\r\n                originalMatcher = originalMatcher || matcher;\r\n                if (originalMatcher !== matcher)\r\n                    originalMatcher.alias.push(matcher);\r\n                // remove the route if named and only for the top record (avoid in nested calls)\r\n                // this works because the original record is the first one\r\n                if (isRootAdd && record.name && !isAliasRecord(matcher))\r\n                    removeRoute(record.name);\r\n            }\r\n            if ('children' in mainNormalizedRecord) {\r\n                let children = mainNormalizedRecord.children;\r\n                for (let i = 0; i < children.length; i++) {\r\n                    addRoute(children[i], matcher, originalRecord && originalRecord.children[i]);\r\n                }\r\n            }\r\n            // if there was no original record, then the first one was not an alias and all\r\n            // other alias (if any) need to reference this record when adding children\r\n            originalRecord = originalRecord || matcher;\r\n            insertMatcher(matcher);\r\n        }\r\n        return originalMatcher\r\n            ? () => {\r\n                // since other matchers are aliases, they should be removed by the original matcher\r\n                removeRoute(originalMatcher);\r\n            }\r\n            : noop;\r\n    }\r\n    function removeRoute(matcherRef) {\r\n        if (isRouteName(matcherRef)) {\r\n            const matcher = matcherMap.get(matcherRef);\r\n            if (matcher) {\r\n                matcherMap.delete(matcherRef);\r\n                matchers.splice(matchers.indexOf(matcher), 1);\r\n                matcher.children.forEach(removeRoute);\r\n                matcher.alias.forEach(removeRoute);\r\n            }\r\n        }\r\n        else {\r\n            let index = matchers.indexOf(matcherRef);\r\n            if (index > -1) {\r\n                matchers.splice(index, 1);\r\n                if (matcherRef.record.name)\r\n                    matcherMap.delete(matcherRef.record.name);\r\n                matcherRef.children.forEach(removeRoute);\r\n                matcherRef.alias.forEach(removeRoute);\r\n            }\r\n        }\r\n    }\r\n    function getRoutes() {\r\n        return matchers;\r\n    }\r\n    function insertMatcher(matcher) {\r\n        let i = 0;\r\n        // console.log('i is', { i })\r\n        while (i < matchers.length &&\r\n            comparePathParserScore(matcher, matchers[i]) >= 0)\r\n            i++;\r\n        // console.log('END i is', { i })\r\n        // while (i < matchers.length && matcher.score <= matchers[i].score) i++\r\n        matchers.splice(i, 0, matcher);\r\n        // only add the original record to the name map\r\n        if (matcher.record.name && !isAliasRecord(matcher))\r\n            matcherMap.set(matcher.record.name, matcher);\r\n    }\r\n    function resolve(location, currentLocation) {\r\n        let matcher;\r\n        let params = {};\r\n        let path;\r\n        let name;\r\n        if ('name' in location && location.name) {\r\n            matcher = matcherMap.get(location.name);\r\n            if (!matcher)\r\n                throw createRouterError(1 /* MATCHER_NOT_FOUND */, {\r\n                    location,\r\n                });\r\n            name = matcher.record.name;\r\n            params = assign(\r\n            // paramsFromLocation is a new object\r\n            paramsFromLocation(currentLocation.params, \r\n            // only keep params that exist in the resolved location\r\n            // TODO: only keep optional params coming from a parent record\r\n            matcher.keys.filter(k => !k.optional).map(k => k.name)), location.params);\r\n            // throws if cannot be stringified\r\n            path = matcher.stringify(params);\r\n        }\r\n        else if ('path' in location) {\r\n            // no need to resolve the path with the matcher as it was provided\r\n            // this also allows the user to control the encoding\r\n            path = location.path;\r\n            if ((process.env.NODE_ENV !== 'production') && !path.startsWith('/')) {\r\n                warn(`The Matcher cannot resolve relative paths but received \"${path}\". Unless you directly called \\`matcher.resolve(\"${path}\")\\`, this is probably a bug in vue-router. Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-router-next.`);\r\n            }\r\n            matcher = matchers.find(m => m.re.test(path));\r\n            // matcher should have a value after the loop\r\n            if (matcher) {\r\n                // TODO: dev warning of unused params if provided\r\n                // we know the matcher works because we tested the regexp\r\n                params = matcher.parse(path);\r\n                name = matcher.record.name;\r\n            }\r\n            // location is a relative path\r\n        }\r\n        else {\r\n            // match by name or path of current route\r\n            matcher = currentLocation.name\r\n                ? matcherMap.get(currentLocation.name)\r\n                : matchers.find(m => m.re.test(currentLocation.path));\r\n            if (!matcher)\r\n                throw createRouterError(1 /* MATCHER_NOT_FOUND */, {\r\n                    location,\r\n                    currentLocation,\r\n                });\r\n            name = matcher.record.name;\r\n            // since we are navigating to the same location, we don't need to pick the\r\n            // params like when `name` is provided\r\n            params = assign({}, currentLocation.params, location.params);\r\n            path = matcher.stringify(params);\r\n        }\r\n        const matched = [];\r\n        let parentMatcher = matcher;\r\n        while (parentMatcher) {\r\n            // reversed order so parents are at the beginning\r\n            matched.unshift(parentMatcher.record);\r\n            parentMatcher = parentMatcher.parent;\r\n        }\r\n        return {\r\n            name,\r\n            path,\r\n            params,\r\n            matched,\r\n            meta: mergeMetaFields(matched),\r\n        };\r\n    }\r\n    // add initial routes\r\n    routes.forEach(route => addRoute(route));\r\n    return { addRoute, resolve, removeRoute, getRoutes, getRecordMatcher };\r\n}\r\nfunction paramsFromLocation(params, keys) {\r\n    let newParams = {};\r\n    for (let key of keys) {\r\n        if (key in params)\r\n            newParams[key] = params[key];\r\n    }\r\n    return newParams;\r\n}\r\n/**\r\n * Normalizes a RouteRecordRaw. Creates a copy\r\n *\r\n * @param record\r\n * @returns the normalized version\r\n */\r\nfunction normalizeRouteRecord(record) {\r\n    return {\r\n        path: record.path,\r\n        redirect: record.redirect,\r\n        name: record.name,\r\n        meta: record.meta || {},\r\n        aliasOf: undefined,\r\n        beforeEnter: record.beforeEnter,\r\n        props: normalizeRecordProps(record),\r\n        children: record.children || [],\r\n        instances: {},\r\n        leaveGuards: [],\r\n        updateGuards: [],\r\n        enterCallbacks: {},\r\n        components: 'components' in record\r\n            ? record.components || {}\r\n            : { default: record.component },\r\n    };\r\n}\r\n/**\r\n * Normalize the optional `props` in a record to always be an object similar to\r\n * components. Also accept a boolean for components.\r\n * @param record\r\n */\r\nfunction normalizeRecordProps(record) {\r\n    const propsObject = {};\r\n    // props does not exist on redirect records but we can set false directly\r\n    const props = record.props || false;\r\n    if ('component' in record) {\r\n        propsObject.default = props;\r\n    }\r\n    else {\r\n        // NOTE: we could also allow a function to be applied to every component.\r\n        // Would need user feedback for use cases\r\n        for (let name in record.components)\r\n            propsObject[name] = typeof props === 'boolean' ? props : props[name];\r\n    }\r\n    return propsObject;\r\n}\r\n/**\r\n * Checks if a record or any of its parent is an alias\r\n * @param record\r\n */\r\nfunction isAliasRecord(record) {\r\n    while (record) {\r\n        if (record.record.aliasOf)\r\n            return true;\r\n        record = record.parent;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Merge meta fields of an array of records\r\n *\r\n * @param matched - array of matched records\r\n */\r\nfunction mergeMetaFields(matched) {\r\n    return matched.reduce((meta, record) => assign(meta, record.meta), {});\r\n}\r\nfunction mergeOptions(defaults, partialOptions) {\r\n    let options = {};\r\n    for (let key in defaults) {\r\n        options[key] =\r\n            key in partialOptions ? partialOptions[key] : defaults[key];\r\n    }\r\n    return options;\r\n}\r\nfunction isSameParam(a, b) {\r\n    return (a.name === b.name &&\r\n        a.optional === b.optional &&\r\n        a.repeatable === b.repeatable);\r\n}\r\nfunction checkSameParams(a, b) {\r\n    for (let key of a.keys) {\r\n        if (!b.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Alias \"${b.record.path}\" and the original record: \"${a.record.path}\" should have the exact same param named \"${key.name}\"`);\r\n    }\r\n    for (let key of b.keys) {\r\n        if (!a.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Alias \"${b.record.path}\" and the original record: \"${a.record.path}\" should have the exact same param named \"${key.name}\"`);\r\n    }\r\n}\r\nfunction checkMissingParamsInAbsolutePath(record, parent) {\r\n    for (let key of parent.keys) {\r\n        if (!record.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Absolute path \"${record.record.path}\" should have the exact same param named \"${key.name}\" as its parent \"${parent.record.path}\".`);\r\n    }\r\n}\n\n/**\r\n * Encoding Rules ␣ = Space Path: ␣ \" < > # ? { } Query: ␣ \" < > # & = Hash: ␣ \"\r\n * < > `\r\n *\r\n * On top of that, the RFC3986 (https://tools.ietf.org/html/rfc3986#section-2.2)\r\n * defines some extra characters to be encoded. Most browsers do not encode them\r\n * in encodeURI https://github.com/whatwg/url/issues/369, so it may be safer to\r\n * also encode `!'()*`. Leaving unencoded only ASCII alphanumeric(`a-zA-Z0-9`)\r\n * plus `-._~`. This extra safety should be applied to query by patching the\r\n * string returned by encodeURIComponent encodeURI also encodes `[\\]^`. `\\`\r\n * should be encoded to avoid ambiguity. Browsers (IE, FF, C) transform a `\\`\r\n * into a `/` if directly typed in. The _backtick_ (`````) should also be\r\n * encoded everywhere because some browsers like FF encode it when directly\r\n * written while others don't. Safari and IE don't encode ``\"<>{}``` in hash.\r\n */\r\n// const EXTRA_RESERVED_RE = /[!'()*]/g\r\n// const encodeReservedReplacer = (c: string) => '%' + c.charCodeAt(0).toString(16)\r\nconst HASH_RE = /#/g; // %23\r\nconst AMPERSAND_RE = /&/g; // %26\r\nconst SLASH_RE = /\\//g; // %2F\r\nconst EQUAL_RE = /=/g; // %3D\r\nconst IM_RE = /\\?/g; // %3F\r\nconst ENC_BRACKET_OPEN_RE = /%5B/g; // [\r\nconst ENC_BRACKET_CLOSE_RE = /%5D/g; // ]\r\nconst ENC_CARET_RE = /%5E/g; // ^\r\nconst ENC_BACKTICK_RE = /%60/g; // `\r\nconst ENC_CURLY_OPEN_RE = /%7B/g; // {\r\nconst ENC_PIPE_RE = /%7C/g; // |\r\nconst ENC_CURLY_CLOSE_RE = /%7D/g; // }\r\n/**\r\n * Encode characters that need to be encoded on the path, search and hash\r\n * sections of the URL.\r\n *\r\n * @internal\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction commonEncode(text) {\r\n    return encodeURI('' + text)\r\n        .replace(ENC_PIPE_RE, '|')\r\n        .replace(ENC_BRACKET_OPEN_RE, '[')\r\n        .replace(ENC_BRACKET_CLOSE_RE, ']');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the hash section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeHash(text) {\r\n    return commonEncode(text)\r\n        .replace(ENC_CURLY_OPEN_RE, '{')\r\n        .replace(ENC_CURLY_CLOSE_RE, '}')\r\n        .replace(ENC_CARET_RE, '^');\r\n}\r\n/**\r\n * Encode characters that need to be encoded query keys and values on the query\r\n * section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeQueryProperty(text) {\r\n    return commonEncode(text)\r\n        .replace(HASH_RE, '%23')\r\n        .replace(AMPERSAND_RE, '%26')\r\n        .replace(EQUAL_RE, '%3D')\r\n        .replace(ENC_BACKTICK_RE, '`')\r\n        .replace(ENC_CURLY_OPEN_RE, '{')\r\n        .replace(ENC_CURLY_CLOSE_RE, '}')\r\n        .replace(ENC_CARET_RE, '^');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the path section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodePath(text) {\r\n    return commonEncode(text).replace(HASH_RE, '%23').replace(IM_RE, '%3F');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the path section of the URL as a\r\n * param. This function encodes everything {@link encodePath} does plus the\r\n * slash (`/`) character.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeParam(text) {\r\n    return encodePath(text).replace(SLASH_RE, '%2F');\r\n}\r\n/**\r\n * Decode text using `decodeURIComponent`. Returns the original text if it\r\n * fails.\r\n *\r\n * @param text - string to decode\r\n * @returns decoded string\r\n */\r\nfunction decode(text) {\r\n    try {\r\n        return decodeURIComponent('' + text);\r\n    }\r\n    catch (err) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`Error decoding \"${text}\". Using original value`);\r\n    }\r\n    return '' + text;\r\n}\n\n/**\r\n * Transforms a queryString into a {@link LocationQuery} object. Accept both, a\r\n * version with the leading `?` and without Should work as URLSearchParams\r\n\n * @internal\r\n *\r\n * @param search - search string to parse\r\n * @returns a query object\r\n */\r\nfunction parseQuery(search) {\r\n    const query = {};\r\n    // avoid creating an object with an empty key and empty value\r\n    // because of split('&')\r\n    if (search === '' || search === '?')\r\n        return query;\r\n    const hasLeadingIM = search[0] === '?';\r\n    const searchParams = (hasLeadingIM ? search.slice(1) : search).split('&');\r\n    for (let i = 0; i < searchParams.length; ++i) {\r\n        let [key, rawValue] = searchParams[i].split('=');\r\n        key = decode(key);\r\n        // avoid decoding null\r\n        let value = rawValue == null ? null : decode(rawValue);\r\n        if (key in query) {\r\n            // an extra variable for ts types\r\n            let currentValue = query[key];\r\n            if (!Array.isArray(currentValue)) {\r\n                currentValue = query[key] = [currentValue];\r\n            }\r\n            currentValue.push(value);\r\n        }\r\n        else {\r\n            query[key] = value;\r\n        }\r\n    }\r\n    return query;\r\n}\r\n/**\r\n * Stringifies a {@link LocationQueryRaw} object. Like `URLSearchParams`, it\r\n * doesn't prepend a `?`\r\n *\r\n * @internal\r\n *\r\n * @param query - query object to stringify\r\n * @returns string version of the query without the leading `?`\r\n */\r\nfunction stringifyQuery(query) {\r\n    let search = '';\r\n    for (let key in query) {\r\n        if (search.length)\r\n            search += '&';\r\n        const value = query[key];\r\n        key = encodeQueryProperty(key);\r\n        if (value == null) {\r\n            // only null adds the value\r\n            if (value !== undefined)\r\n                search += key;\r\n            continue;\r\n        }\r\n        // keep null values\r\n        let values = Array.isArray(value)\r\n            ? value.map(v => v && encodeQueryProperty(v))\r\n            : [value && encodeQueryProperty(value)];\r\n        for (let i = 0; i < values.length; i++) {\r\n            // only append & with i > 0\r\n            search += (i ? '&' : '') + key;\r\n            if (values[i] != null)\r\n                search += ('=' + values[i]);\r\n        }\r\n    }\r\n    return search;\r\n}\r\n/**\r\n * Transforms a {@link LocationQueryRaw} into a {@link LocationQuery} by casting\r\n * numbers into strings, removing keys with an undefined value and replacing\r\n * undefined with null in arrays\r\n *\r\n * @param query - query object to normalize\r\n * @returns a normalized query object\r\n */\r\nfunction normalizeQuery(query) {\r\n    const normalizedQuery = {};\r\n    for (let key in query) {\r\n        let value = query[key];\r\n        if (value !== undefined) {\r\n            normalizedQuery[key] = Array.isArray(value)\r\n                ? value.map(v => (v == null ? null : '' + v))\r\n                : value == null\r\n                    ? value\r\n                    : '' + value;\r\n        }\r\n    }\r\n    return normalizedQuery;\r\n}\n\n/**\r\n * Create a list of callbacks that can be reset. Used to create before and after navigation guards list\r\n */\r\nfunction useCallbacks() {\r\n    let handlers = [];\r\n    function add(handler) {\r\n        handlers.push(handler);\r\n        return () => {\r\n            const i = handlers.indexOf(handler);\r\n            if (i > -1)\r\n                handlers.splice(i, 1);\r\n        };\r\n    }\r\n    function reset() {\r\n        handlers = [];\r\n    }\r\n    return {\r\n        add,\r\n        list: () => handlers,\r\n        reset,\r\n    };\r\n}\n\nfunction registerGuard(list, guard) {\r\n    const removeFromList = () => {\r\n        const index = list.indexOf(guard);\r\n        if (index > -1)\r\n            list.splice(index, 1);\r\n    };\r\n    onUnmounted(removeFromList);\r\n    onDeactivated(removeFromList);\r\n    onActivated(() => {\r\n        const index = list.indexOf(guard);\r\n        if (index < 0)\r\n            list.push(guard);\r\n    });\r\n    list.push(guard);\r\n}\r\n/**\r\n * Add a navigation guard that triggers whenever the component for the current\r\n * location is about to be left. Similar to {@link beforeRouteLeave} but can be\r\n * used in any component. The guard is removed when the component is unmounted.\r\n *\r\n * @param leaveGuard - {@link NavigationGuard}\r\n */\r\nfunction onBeforeRouteLeave(leaveGuard) {\r\n    if ((process.env.NODE_ENV !== 'production') && !getCurrentInstance()) {\r\n        warn$1('onBeforeRouteLeave must be called at the top of a setup function');\r\n        return;\r\n    }\r\n    const activeRecord = inject(matchedRouteKey, {}).value;\r\n    if (!activeRecord) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn$1('onBeforeRouteLeave must be called at the top of a setup function');\r\n        return;\r\n    }\r\n    registerGuard(activeRecord.leaveGuards, leaveGuard);\r\n}\r\n/**\r\n * Add a navigation guard that triggers whenever the current location is about\r\n * to be updated. Similar to {@link beforeRouteUpdate} but can be used in any\r\n * component. The guard is removed when the component is unmounted.\r\n *\r\n * @param updateGuard - {@link NavigationGuard}\r\n */\r\nfunction onBeforeRouteUpdate(updateGuard) {\r\n    if ((process.env.NODE_ENV !== 'production') && !getCurrentInstance()) {\r\n        warn$1('onBeforeRouteUpdate must be called at the top of a setup function');\r\n        return;\r\n    }\r\n    const activeRecord = inject(matchedRouteKey, {}).value;\r\n    if (!activeRecord) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn$1('onBeforeRouteUpdate must be called at the top of a setup function');\r\n        return;\r\n    }\r\n    registerGuard(activeRecord.updateGuards, updateGuard);\r\n}\r\nfunction guardToPromiseFn(guard, to, from, record, name) {\r\n    // keep a reference to the enterCallbackArray to prevent pushing callbacks if a new navigation took place\r\n    const enterCallbackArray = record &&\r\n        // name is defined if record is because of the function overload\r\n        (record.enterCallbacks[name] = record.enterCallbacks[name] || []);\r\n    return () => new Promise((resolve, reject) => {\r\n        const next = (valid) => {\r\n            if (valid === false)\r\n                reject(createRouterError(4 /* NAVIGATION_ABORTED */, {\r\n                    from,\r\n                    to,\r\n                }));\r\n            else if (valid instanceof Error) {\r\n                reject(valid);\r\n            }\r\n            else if (isRouteLocation(valid)) {\r\n                reject(createRouterError(2 /* NAVIGATION_GUARD_REDIRECT */, {\r\n                    from: to,\r\n                    to: valid,\r\n                }));\r\n            }\r\n            else {\r\n                if (enterCallbackArray &&\r\n                    // since enterCallbackArray is truthy, both record and name also are\r\n                    record.enterCallbacks[name] === enterCallbackArray &&\r\n                    typeof valid === 'function')\r\n                    enterCallbackArray.push(valid);\r\n                resolve();\r\n            }\r\n        };\r\n        // wrapping with Promise.resolve allows it to work with both async and sync guards\r\n        const guardReturn = guard.call(record && record.instances[name], to, from, (process.env.NODE_ENV !== 'production') ? canOnlyBeCalledOnce(next, to, from) : next);\r\n        let guardCall = Promise.resolve(guardReturn);\r\n        if (guard.length < 3)\r\n            guardCall = guardCall.then(next);\r\n        if ((process.env.NODE_ENV !== 'production') && guard.length > 2) {\r\n            const message = `The \"next\" callback was never called inside of ${guard.name ? '\"' + guard.name + '\"' : ''}:\\n${guard.toString()}\\n. If you are returning a value instead of calling \"next\", make sure to remove the \"next\" parameter from your function.`;\r\n            if (typeof guardReturn === 'object' && 'then' in guardReturn) {\r\n                guardCall = guardCall.then(resolvedValue => {\r\n                    // @ts-ignore: _called is added at canOnlyBeCalledOnce\r\n                    if (!next._called) {\r\n                        warn$1(message);\r\n                        return Promise.reject(new Error('Invalid navigation guard'));\r\n                    }\r\n                    return resolvedValue;\r\n                });\r\n                // TODO: test me!\r\n            }\r\n            else if (guardReturn !== undefined) {\r\n                // @ts-ignore: _called is added at canOnlyBeCalledOnce\r\n                if (!next._called) {\r\n                    warn$1(message);\r\n                    reject(new Error('Invalid navigation guard'));\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        guardCall.catch(err => reject(err));\r\n    });\r\n}\r\nfunction canOnlyBeCalledOnce(next, to, from) {\r\n    let called = 0;\r\n    return function () {\r\n        if (called++ === 1)\r\n            warn$1(`The \"next\" callback was called more than once in one navigation guard when going from \"${from.fullPath}\" to \"${to.fullPath}\". It should be called exactly one time in each navigation guard. This will fail in production.`);\r\n        // @ts-ignore: we put it in the original one because it's easier to check\r\n        next._called = true;\r\n        if (called === 1)\r\n            next.apply(null, arguments);\r\n    };\r\n}\r\nfunction extractComponentsGuards(matched, guardType, to, from) {\r\n    const guards = [];\r\n    for (const record of matched) {\r\n        for (const name in record.components) {\r\n            let rawComponent = record.components[name];\r\n            // warn if user wrote import('/component.vue') instead of () => import('./component.vue')\r\n            if ((process.env.NODE_ENV !== 'production') && 'then' in rawComponent) {\r\n                warn$1(`Component \"${name}\" in record with path \"${record.path}\" is a Promise instead of a function that returns a Promise. Did you write \"import('./MyPage.vue')\" instead of \"() => import('./MyPage.vue')\"? This will break in production if not fixed.`);\r\n                let promise = rawComponent;\r\n                rawComponent = () => promise;\r\n            }\r\n            // skip update and leave guards if the route component is not mounted\r\n            if (guardType !== 'beforeRouteEnter' && !record.instances[name])\r\n                continue;\r\n            if (isRouteComponent(rawComponent)) {\r\n                // __vccOpts is added by vue-class-component and contain the regular options\r\n                let options = rawComponent.__vccOpts || rawComponent;\r\n                const guard = options[guardType];\r\n                guard && guards.push(guardToPromiseFn(guard, to, from, record, name));\r\n            }\r\n            else {\r\n                // start requesting the chunk already\r\n                let componentPromise = rawComponent();\r\n                if ((process.env.NODE_ENV !== 'production') && !('catch' in componentPromise)) {\r\n                    warn$1(`Component \"${name}\" in record with path \"${record.path}\" is a function that does not return a Promise. If you were passing a functional component, make sure to add a \"displayName\" to the component. This will break in production if not fixed.`);\r\n                    componentPromise = Promise.resolve(componentPromise);\r\n                }\r\n                else {\r\n                    componentPromise = componentPromise.catch(() => null);\r\n                }\r\n                guards.push(() => componentPromise.then(resolved => {\r\n                    if (!resolved)\r\n                        return Promise.reject(new Error(`Couldn't resolve component \"${name}\" for the following record with path \"${record.path}\"`));\r\n                    const resolvedComponent = isESModule(resolved)\r\n                        ? resolved.default\r\n                        : resolved;\r\n                    // replace the function with the resolved component\r\n                    record.components[name] = resolvedComponent;\r\n                    // @ts-ignore: the options types are not propagated to Component\r\n                    const guard = resolvedComponent[guardType];\r\n                    return guard && guardToPromiseFn(guard, to, from, record, name)();\r\n                }));\r\n            }\r\n        }\r\n    }\r\n    return guards;\r\n}\r\n/**\r\n * Allows differentiating lazy components from functional components and vue-class-component\r\n * @param component\r\n */\r\nfunction isRouteComponent(component) {\r\n    return (typeof component === 'object' ||\r\n        'displayName' in component ||\r\n        'props' in component ||\r\n        '__vccOpts' in component);\r\n}\n\n// TODO: we could allow currentRoute as a prop to expose `isActive` and\r\n// `isExactActive` behavior should go through an RFC\r\nfunction useLink(props) {\r\n    const router = inject(routerKey);\r\n    const currentRoute = inject(routeLocationKey);\r\n    const route = computed(() => router.resolve(unref(props.to)));\r\n    const activeRecordIndex = computed(() => {\r\n        let { matched } = route.value;\r\n        let { length } = matched;\r\n        const routeMatched = matched[length - 1];\r\n        let currentMatched = currentRoute.matched;\r\n        if (!routeMatched || !currentMatched.length)\r\n            return -1;\r\n        let index = currentMatched.findIndex(isSameRouteRecord.bind(null, routeMatched));\r\n        if (index > -1)\r\n            return index;\r\n        // possible parent record\r\n        let parentRecordPath = getOriginalPath(matched[length - 2]);\r\n        return (\r\n        // we are dealing with nested routes\r\n        length > 1 &&\r\n            // if the parent and matched route have the same path, this link is\r\n            // referring to the empty child. Or we currently are on a different\r\n            // child of the same parent\r\n            getOriginalPath(routeMatched) === parentRecordPath &&\r\n            // avoid comparing the child with its parent\r\n            currentMatched[currentMatched.length - 1].path !== parentRecordPath\r\n            ? currentMatched.findIndex(isSameRouteRecord.bind(null, matched[length - 2]))\r\n            : index);\r\n    });\r\n    const isActive = computed(() => activeRecordIndex.value > -1 &&\r\n        includesParams(currentRoute.params, route.value.params));\r\n    const isExactActive = computed(() => activeRecordIndex.value > -1 &&\r\n        activeRecordIndex.value === currentRoute.matched.length - 1 &&\r\n        isSameRouteLocationParams(currentRoute.params, route.value.params));\r\n    function navigate(e = {}) {\r\n        if (guardEvent(e))\r\n            return router[unref(props.replace) ? 'replace' : 'push'](unref(props.to));\r\n        return Promise.resolve();\r\n    }\r\n    return {\r\n        route,\r\n        href: computed(() => route.value.href),\r\n        isActive,\r\n        isExactActive,\r\n        navigate,\r\n    };\r\n}\r\nconst RouterLinkImpl = defineComponent({\r\n    name: 'RouterLink',\r\n    props: {\r\n        to: {\r\n            type: [String, Object],\r\n            required: true,\r\n        },\r\n        activeClass: String,\r\n        // inactiveClass: String,\r\n        exactActiveClass: String,\r\n        custom: Boolean,\r\n        ariaCurrentValue: {\r\n            type: String,\r\n            default: 'page',\r\n        },\r\n    },\r\n    setup(props, { slots, attrs }) {\r\n        const link = reactive(useLink(props));\r\n        const { options } = inject(routerKey);\r\n        const elClass = computed(() => ({\r\n            [getLinkClass(props.activeClass, options.linkActiveClass, 'router-link-active')]: link.isActive,\r\n            // [getLinkClass(\r\n            //   props.inactiveClass,\r\n            //   options.linkInactiveClass,\r\n            //   'router-link-inactive'\r\n            // )]: !link.isExactActive,\r\n            [getLinkClass(props.exactActiveClass, options.linkExactActiveClass, 'router-link-exact-active')]: link.isExactActive,\r\n        }));\r\n        return () => {\r\n            const children = slots.default && slots.default(link);\r\n            return props.custom\r\n                ? children\r\n                : h('a', assign({\r\n                    'aria-current': link.isExactActive\r\n                        ? props.ariaCurrentValue\r\n                        : null,\r\n                    onClick: link.navigate,\r\n                    href: link.href,\r\n                }, attrs, {\r\n                    class: elClass.value,\r\n                }), children);\r\n        };\r\n    },\r\n});\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\n/**\r\n * Component to render a link that triggers a navigation on click.\r\n */\r\nconst RouterLink = RouterLinkImpl;\r\nfunction guardEvent(e) {\r\n    // don't redirect with control keys\r\n    if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)\r\n        return;\r\n    // don't redirect when preventDefault called\r\n    if (e.defaultPrevented)\r\n        return;\r\n    // don't redirect on right click\r\n    if (e.button !== undefined && e.button !== 0)\r\n        return;\r\n    // don't redirect if `target=\"_blank\"`\r\n    // @ts-ignore getAttribute does exist\r\n    if (e.currentTarget && e.currentTarget.getAttribute) {\r\n        // @ts-ignore getAttribute exists\r\n        const target = e.currentTarget.getAttribute('target');\r\n        if (/\\b_blank\\b/i.test(target))\r\n            return;\r\n    }\r\n    // this may be a Weex event which doesn't have this method\r\n    if (e.preventDefault)\r\n        e.preventDefault();\r\n    return true;\r\n}\r\nfunction includesParams(outer, inner) {\r\n    for (let key in inner) {\r\n        let innerValue = inner[key];\r\n        let outerValue = outer[key];\r\n        if (typeof innerValue === 'string') {\r\n            if (innerValue !== outerValue)\r\n                return false;\r\n        }\r\n        else {\r\n            if (!Array.isArray(outerValue) ||\r\n                outerValue.length !== innerValue.length ||\r\n                innerValue.some((value, i) => value !== outerValue[i]))\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Get the original path value of a record by following its aliasOf\r\n * @param record\r\n */\r\nfunction getOriginalPath(record) {\r\n    return record ? (record.aliasOf ? record.aliasOf.path : record.path) : '';\r\n}\r\n/**\r\n * Utility class to get the active class based on defaults.\r\n * @param propClass\r\n * @param globalClass\r\n * @param defaultClass\r\n */\r\nlet getLinkClass = (propClass, globalClass, defaultClass) => propClass != null\r\n    ? propClass\r\n    : globalClass != null\r\n        ? globalClass\r\n        : defaultClass;\n\nconst RouterViewImpl = defineComponent({\r\n    name: 'RouterView',\r\n    props: {\r\n        name: {\r\n            type: String,\r\n            default: 'default',\r\n        },\r\n        route: Object,\r\n    },\r\n    setup(props, { attrs, slots }) {\r\n        (process.env.NODE_ENV !== 'production') && warnDeprecatedUsage();\r\n        const injectedRoute = inject(routeLocationKey);\r\n        const depth = inject(viewDepthKey, 0);\r\n        const matchedRouteRef = computed(() => (props.route || injectedRoute).matched[depth]);\r\n        provide(viewDepthKey, depth + 1);\r\n        provide(matchedRouteKey, matchedRouteRef);\r\n        const viewRef = ref();\r\n        // watch at the same time the component instance, the route record we are\r\n        // rendering, and the name\r\n        watch(() => [viewRef.value, matchedRouteRef.value, props.name], ([instance, to, name], [oldInstance, from, oldName]) => {\r\n            // copy reused instances\r\n            if (to) {\r\n                // this will update the instance for new instances as well as reused\r\n                // instances when navigating to a new route\r\n                to.instances[name] = instance;\r\n                // the component instance is reused for a different route or name so\r\n                // we copy any saved update or leave guards\r\n                if (from && instance === oldInstance) {\r\n                    to.leaveGuards = from.leaveGuards;\r\n                    to.updateGuards = from.updateGuards;\r\n                }\r\n            }\r\n            // trigger beforeRouteEnter next callbacks\r\n            if (instance &&\r\n                to &&\r\n                // if there is no instance but to and from are the same this might be\r\n                // the first visit\r\n                (!from || !isSameRouteRecord(to, from) || !oldInstance)) {\r\n                (to.enterCallbacks[name] || []).forEach(callback => callback(instance));\r\n            }\r\n        }, { flush: 'post' });\r\n        return () => {\r\n            const route = props.route || injectedRoute;\r\n            const matchedRoute = matchedRouteRef.value;\r\n            const ViewComponent = matchedRoute && matchedRoute.components[props.name];\r\n            // we need the value at the time we render because when we unmount, we\r\n            // navigated to a different location so the value is different\r\n            const currentName = props.name;\r\n            if (!ViewComponent) {\r\n                return slots.default\r\n                    ? slots.default({ Component: ViewComponent, route })\r\n                    : null;\r\n            }\r\n            // props from route configuration\r\n            const routePropsOption = matchedRoute.props[props.name];\r\n            const routeProps = routePropsOption\r\n                ? routePropsOption === true\r\n                    ? route.params\r\n                    : typeof routePropsOption === 'function'\r\n                        ? routePropsOption(route)\r\n                        : routePropsOption\r\n                : null;\r\n            const onVnodeUnmounted = vnode => {\r\n                // remove the instance reference to prevent leak\r\n                if (vnode.component.isUnmounted) {\r\n                    matchedRoute.instances[currentName] = null;\r\n                }\r\n            };\r\n            const component = h(ViewComponent, assign({}, routeProps, attrs, {\r\n                onVnodeUnmounted,\r\n                ref: viewRef,\r\n            }));\r\n            return (\r\n            // pass the vnode to the slot as a prop.\r\n            // h and <component :is=\"...\"> both accept vnodes\r\n            slots.default\r\n                ? slots.default({ Component: component, route })\r\n                : component);\r\n        };\r\n    },\r\n});\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\n/**\r\n * Component to display the current route the user is at.\r\n */\r\nconst RouterView = RouterViewImpl;\r\n// warn against deprecated usage with <transition> & <keep-alive>\r\n// due to functional component being no longer eager in Vue 3\r\nfunction warnDeprecatedUsage() {\r\n    const instance = getCurrentInstance();\r\n    const parentName = instance.parent && instance.parent.type.name;\r\n    if (parentName &&\r\n        (parentName === 'KeepAlive' || parentName.includes('Transition'))) {\r\n        const comp = parentName === 'KeepAlive' ? 'keep-alive' : 'transition';\r\n        warn(`<router-view> can no longer be used directly inside <transition> or <keep-alive>.\\n` +\r\n            `Use slot props instead:\\n\\n` +\r\n            `<router-view v-slot=\"{ Component }\">\\n` +\r\n            `  <${comp}>\\n` +\r\n            `    <component :is=\"Component\" />\\n` +\r\n            `  </${comp}>\\n` +\r\n            `</router-view>`);\r\n    }\r\n}\n\n/**\r\n * Creates a Router instance that can be used by a Vue app.\r\n *\r\n * @param options - {@link RouterOptions}\r\n */\r\nfunction createRouter(options) {\r\n    const matcher = createRouterMatcher(options.routes, options);\r\n    let parseQuery$1 = options.parseQuery || parseQuery;\r\n    let stringifyQuery$1 = options.stringifyQuery || stringifyQuery;\r\n    let { scrollBehavior } = options;\r\n    let routerHistory = options.history;\r\n    const beforeGuards = useCallbacks();\r\n    const beforeResolveGuards = useCallbacks();\r\n    const afterGuards = useCallbacks();\r\n    const currentRoute = shallowRef(START_LOCATION_NORMALIZED);\r\n    let pendingLocation = START_LOCATION_NORMALIZED;\r\n    // leave the scrollRestoration if no scrollBehavior is provided\r\n    if (isBrowser && scrollBehavior && 'scrollRestoration' in history) {\r\n        history.scrollRestoration = 'manual';\r\n    }\r\n    const normalizeParams = applyToParams.bind(null, paramValue => '' + paramValue);\r\n    const encodeParams = applyToParams.bind(null, encodeParam);\r\n    const decodeParams = applyToParams.bind(null, decode);\r\n    function addRoute(parentOrRoute, route) {\r\n        let parent;\r\n        let record;\r\n        if (isRouteName(parentOrRoute)) {\r\n            parent = matcher.getRecordMatcher(parentOrRoute);\r\n            record = route;\r\n        }\r\n        else {\r\n            record = parentOrRoute;\r\n        }\r\n        return matcher.addRoute(record, parent);\r\n    }\r\n    function removeRoute(name) {\r\n        let recordMatcher = matcher.getRecordMatcher(name);\r\n        if (recordMatcher) {\r\n            matcher.removeRoute(recordMatcher);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Cannot remove non-existent route \"${String(name)}\"`);\r\n        }\r\n    }\r\n    function getRoutes() {\r\n        return matcher.getRoutes().map(routeMatcher => routeMatcher.record);\r\n    }\r\n    function hasRoute(name) {\r\n        return !!matcher.getRecordMatcher(name);\r\n    }\r\n    function resolve(rawLocation, currentLocation) {\r\n        // const objectLocation = routerLocationAsObject(rawLocation)\r\n        // we create a copy to modify it later\r\n        currentLocation = assign({}, currentLocation || currentRoute.value);\r\n        if (typeof rawLocation === 'string') {\r\n            let locationNormalized = parseURL(parseQuery$1, rawLocation, currentLocation.path);\r\n            let matchedRoute = matcher.resolve({ path: locationNormalized.path }, currentLocation);\r\n            let href = routerHistory.createHref(locationNormalized.fullPath);\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (href.startsWith('//'))\r\n                    warn(`Location \"${rawLocation}\" resolved to \"${href}\". A resolved location cannot start with multiple slashes.`);\r\n                else if (!matchedRoute.matched.length) {\r\n                    warn(`No match found for location with path \"${rawLocation}\"`);\r\n                }\r\n            }\r\n            // locationNormalized is always a new object\r\n            return assign(locationNormalized, matchedRoute, {\r\n                params: decodeParams(matchedRoute.params),\r\n                redirectedFrom: undefined,\r\n                href,\r\n            });\r\n        }\r\n        let matcherLocation;\r\n        // path could be relative in object as well\r\n        if ('path' in rawLocation) {\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                'params' in rawLocation &&\r\n                !('name' in rawLocation) &&\r\n                Object.keys(rawLocation.params).length) {\r\n                warn(`Path \"${rawLocation.path}\" was passed with params but they will be ignored. Use a named route alongside params instead.`);\r\n            }\r\n            matcherLocation = assign({}, rawLocation, {\r\n                path: parseURL(parseQuery$1, rawLocation.path, currentLocation.path).path,\r\n            });\r\n        }\r\n        else {\r\n            // pass encoded values to the matcher so it can produce encoded path and fullPath\r\n            matcherLocation = assign({}, rawLocation, {\r\n                params: encodeParams(rawLocation.params),\r\n            });\r\n            // current location params are decoded, we need to encode them in case the\r\n            // matcher merges the params\r\n            currentLocation.params = encodeParams(currentLocation.params);\r\n        }\r\n        let matchedRoute = matcher.resolve(matcherLocation, currentLocation);\r\n        const hash = encodeHash(rawLocation.hash || '');\r\n        if ((process.env.NODE_ENV !== 'production') && hash && !hash.startsWith('#')) {\r\n            warn(`A \\`hash\\` should always start with the character \"#\". Replace \"${hash}\" with \"#${hash}\".`);\r\n        }\r\n        // decoding them) the matcher might have merged current location params so\r\n        // we need to run the decoding again\r\n        matchedRoute.params = normalizeParams(decodeParams(matchedRoute.params));\r\n        const fullPath = stringifyURL(stringifyQuery$1, assign({}, rawLocation, {\r\n            hash,\r\n            path: matchedRoute.path,\r\n        }));\r\n        let href = routerHistory.createHref(fullPath);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            if (href.startsWith('//'))\r\n                warn(`Location \"${rawLocation}\" resolved to \"${href}\". A resolved location cannot start with multiple slashes.`);\r\n            else if (!matchedRoute.matched.length) {\r\n                warn(`No match found for location with path \"${'path' in rawLocation ? rawLocation.path : rawLocation}\"`);\r\n            }\r\n        }\r\n        return assign({\r\n            fullPath,\r\n            // keep the hash encoded so fullPath is effectively path + encodedQuery +\r\n            // hash\r\n            hash,\r\n            query: \r\n            // if the user is using a custom query lib like qs, we might have\r\n            // nested objects, so we keep the query as is, meaning it can contain\r\n            // numbers at `$route.query`, but at the point, the user will have to\r\n            // use their own type anyway.\r\n            // https://github.com/vuejs/vue-router-next/issues/328#issuecomment-649481567\r\n            stringifyQuery$1 === stringifyQuery\r\n                ? normalizeQuery(rawLocation.query)\r\n                : rawLocation.query,\r\n        }, matchedRoute, {\r\n            redirectedFrom: undefined,\r\n            href,\r\n        });\r\n    }\r\n    function locationAsObject(to) {\r\n        return typeof to === 'string' ? { path: to } : assign({}, to);\r\n    }\r\n    function checkCanceledNavigation(to, from) {\r\n        if (pendingLocation !== to) {\r\n            return createRouterError(8 /* NAVIGATION_CANCELLED */, {\r\n                from,\r\n                to,\r\n            });\r\n        }\r\n    }\r\n    function push(to) {\r\n        return pushWithRedirect(to);\r\n    }\r\n    function replace(to) {\r\n        return push(assign(locationAsObject(to), { replace: true }));\r\n    }\r\n    function pushWithRedirect(to, redirectedFrom) {\r\n        const targetLocation = (pendingLocation = resolve(to));\r\n        const from = currentRoute.value;\r\n        const data = to.state;\r\n        const force = to.force;\r\n        // to could be a string where `replace` is a function\r\n        const replace = to.replace === true;\r\n        const lastMatched = targetLocation.matched[targetLocation.matched.length - 1];\r\n        if (lastMatched && lastMatched.redirect) {\r\n            const { redirect } = lastMatched;\r\n            // transform it into an object to pass the original RouteLocaleOptions\r\n            let newTargetLocation = locationAsObject(typeof redirect === 'function' ? redirect(targetLocation) : redirect);\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                !('path' in newTargetLocation) &&\r\n                !('name' in newTargetLocation)) {\r\n                warn(`Invalid redirect found:\\n${JSON.stringify(newTargetLocation, null, 2)}\\n when navigating to \"${targetLocation.fullPath}\". A redirect must contain a name or path. This will break in production.`);\r\n                return Promise.reject(new Error('Invalid redirect'));\r\n            }\r\n            return pushWithRedirect(assign({\r\n                query: targetLocation.query,\r\n                hash: targetLocation.hash,\r\n                params: targetLocation.params,\r\n            }, newTargetLocation, {\r\n                state: data,\r\n                force,\r\n                replace,\r\n            }), \r\n            // keep original redirectedFrom if it exists\r\n            redirectedFrom || targetLocation);\r\n        }\r\n        // if it was a redirect we already called `pushWithRedirect` above\r\n        const toLocation = targetLocation;\r\n        toLocation.redirectedFrom = redirectedFrom;\r\n        let failure;\r\n        if (!force && isSameRouteLocation(stringifyQuery$1, from, targetLocation)) {\r\n            failure = createRouterError(16 /* NAVIGATION_DUPLICATED */, { to: toLocation, from });\r\n            // trigger scroll to allow scrolling to the same anchor\r\n            handleScroll(from, from, \r\n            // this is a push, the only way for it to be triggered from a\r\n            // history.listen is with a redirect, which makes it become a pus\r\n            true, \r\n            // This cannot be the first navigation because the initial location\r\n            // cannot be manually navigated to\r\n            false);\r\n        }\r\n        return (failure ? Promise.resolve(failure) : navigate(toLocation, from))\r\n            .catch((error) => {\r\n            if (isNavigationFailure(error, 4 /* NAVIGATION_ABORTED */ |\r\n                8 /* NAVIGATION_CANCELLED */ |\r\n                2 /* NAVIGATION_GUARD_REDIRECT */)) {\r\n                return error;\r\n            }\r\n            // unknown error, rejects\r\n            return triggerError(error);\r\n        })\r\n            .then((failure) => {\r\n            if (failure) {\r\n                if (isNavigationFailure(failure, 2 /* NAVIGATION_GUARD_REDIRECT */)) {\r\n                    if ((process.env.NODE_ENV !== 'production') &&\r\n                        // we are redirecting to the same location we were already at\r\n                        isSameRouteLocation(stringifyQuery$1, resolve(failure.to), toLocation) &&\r\n                        // and we have done it a couple of times\r\n                        redirectedFrom &&\r\n                        // @ts-ignore\r\n                        (redirectedFrom._count = redirectedFrom._count\r\n                            ? // @ts-ignore\r\n                                redirectedFrom._count + 1\r\n                            : 1) > 10) {\r\n                        warn(`Detected an infinite redirection in a navigation guard when going from \"${from.fullPath}\" to \"${toLocation.fullPath}\". Aborting to avoid a Stack Overflow. This will break in production if not fixed.`);\r\n                        return Promise.reject(new Error('Infinite redirect in navigation guard'));\r\n                    }\r\n                    return pushWithRedirect(\r\n                    // keep options\r\n                    assign(locationAsObject(failure.to), {\r\n                        state: data,\r\n                        force,\r\n                        replace,\r\n                    }), \r\n                    // preserve the original redirectedFrom if any\r\n                    redirectedFrom || toLocation);\r\n                }\r\n            }\r\n            else {\r\n                // if we fail we don't finalize the navigation\r\n                failure = finalizeNavigation(toLocation, from, true, replace, data);\r\n            }\r\n            triggerAfterEach(toLocation, from, failure);\r\n            return failure;\r\n        });\r\n    }\r\n    /**\r\n     * Helper to reject and skip all navigation guards if a new navigation happened\r\n     * @param to\r\n     * @param from\r\n     */\r\n    function checkCanceledNavigationAndReject(to, from) {\r\n        const error = checkCanceledNavigation(to, from);\r\n        return error ? Promise.reject(error) : Promise.resolve();\r\n    }\r\n    // TODO: refactor the whole before guards by internally using router.beforeEach\r\n    function navigate(to, from) {\r\n        let guards;\r\n        const [leavingRecords, updatingRecords, enteringRecords,] = extractChangingRecords(to, from);\r\n        // all components here have been resolved once because we are leaving\r\n        guards = extractComponentsGuards(leavingRecords.reverse(), 'beforeRouteLeave', to, from);\r\n        // leavingRecords is already reversed\r\n        for (const record of leavingRecords) {\r\n            for (const guard of record.leaveGuards) {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            }\r\n        }\r\n        const canceledNavigationCheck = checkCanceledNavigationAndReject.bind(null, to, from);\r\n        guards.push(canceledNavigationCheck);\r\n        // run the queue of per route beforeRouteLeave guards\r\n        return (runGuardQueue(guards)\r\n            .then(() => {\r\n            // check global guards beforeEach\r\n            guards = [];\r\n            for (const guard of beforeGuards.list()) {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check in components beforeRouteUpdate\r\n            guards = extractComponentsGuards(updatingRecords, 'beforeRouteUpdate', to, from);\r\n            for (const record of updatingRecords) {\r\n                for (const guard of record.updateGuards) {\r\n                    guards.push(guardToPromiseFn(guard, to, from));\r\n                }\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check the route beforeEnter\r\n            guards = [];\r\n            for (const record of to.matched) {\r\n                // do not trigger beforeEnter on reused views\r\n                if (record.beforeEnter && from.matched.indexOf(record) < 0) {\r\n                    if (Array.isArray(record.beforeEnter)) {\r\n                        for (const beforeEnter of record.beforeEnter)\r\n                            guards.push(guardToPromiseFn(beforeEnter, to, from));\r\n                    }\r\n                    else {\r\n                        guards.push(guardToPromiseFn(record.beforeEnter, to, from));\r\n                    }\r\n                }\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // NOTE: at this point to.matched is normalized and does not contain any () => Promise<Component>\r\n            // clear existing enterCallbacks, these are added by extractComponentsGuards\r\n            to.matched.forEach(record => (record.enterCallbacks = {}));\r\n            // check in-component beforeRouteEnter\r\n            guards = extractComponentsGuards(enteringRecords, 'beforeRouteEnter', to, from);\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check global guards beforeResolve\r\n            guards = [];\r\n            for (const guard of beforeResolveGuards.list()) {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            return runGuardQueue(guards);\r\n        })\r\n            // catch any navigation canceled\r\n            .catch(err => isNavigationFailure(err, 8 /* NAVIGATION_CANCELLED */)\r\n            ? err\r\n            : Promise.reject(err)));\r\n    }\r\n    function triggerAfterEach(to, from, failure) {\r\n        // navigation is confirmed, call afterGuards\r\n        // TODO: wrap with error handlers\r\n        for (const guard of afterGuards.list())\r\n            guard(to, from, failure);\r\n    }\r\n    /**\r\n     * - Cleans up any navigation guards\r\n     * - Changes the url if necessary\r\n     * - Calls the scrollBehavior\r\n     */\r\n    function finalizeNavigation(toLocation, from, isPush, replace, data) {\r\n        // a more recent navigation took place\r\n        const error = checkCanceledNavigation(toLocation, from);\r\n        if (error)\r\n            return error;\r\n        // only consider as push if it's not the first navigation\r\n        const isFirstNavigation = from === START_LOCATION_NORMALIZED;\r\n        const state = !isBrowser ? {} : history.state;\r\n        // change URL only if the user did a push/replace and if it's not the initial navigation because\r\n        // it's just reflecting the url\r\n        if (isPush) {\r\n            // on the initial navigation, we want to reuse the scroll position from\r\n            // history state if it exists\r\n            if (replace || isFirstNavigation)\r\n                routerHistory.replace(toLocation.fullPath, assign({\r\n                    scroll: isFirstNavigation && state && state.scroll,\r\n                }, data));\r\n            else\r\n                routerHistory.push(toLocation.fullPath, data);\r\n        }\r\n        // accept current navigation\r\n        currentRoute.value = toLocation;\r\n        handleScroll(toLocation, from, isPush, isFirstNavigation);\r\n        markAsReady();\r\n    }\r\n    let removeHistoryListener;\r\n    // attach listener to history to trigger navigations\r\n    function setupListeners() {\r\n        removeHistoryListener = routerHistory.listen((to, _from, info) => {\r\n            // cannot be a redirect route because it was in history\r\n            const toLocation = resolve(to);\r\n            pendingLocation = toLocation;\r\n            const from = currentRoute.value;\r\n            // TODO: should be moved to web history?\r\n            if (isBrowser) {\r\n                saveScrollPosition(getScrollKey(from.fullPath, info.delta), computeScrollPosition());\r\n            }\r\n            navigate(toLocation, from)\r\n                .catch((error) => {\r\n                if (isNavigationFailure(error, 4 /* NAVIGATION_ABORTED */ | 8 /* NAVIGATION_CANCELLED */)) {\r\n                    return error;\r\n                }\r\n                if (isNavigationFailure(error, 2 /* NAVIGATION_GUARD_REDIRECT */)) {\r\n                    // do not restore history on unknown direction\r\n                    if (info.delta)\r\n                        routerHistory.go(-info.delta, false);\r\n                    // the error is already handled by router.push we just want to avoid\r\n                    // logging the error\r\n                    pushWithRedirect(error.to, toLocation\r\n                    // avoid an uncaught rejection\r\n                    ).catch(noop);\r\n                    // avoid the then branch\r\n                    return Promise.reject();\r\n                }\r\n                // do not restore history on unknown direction\r\n                if (info.delta)\r\n                    routerHistory.go(-info.delta, false);\r\n                // unrecognized error, transfer to the global handler\r\n                return triggerError(error);\r\n            })\r\n                .then((failure) => {\r\n                failure =\r\n                    failure ||\r\n                        finalizeNavigation(\r\n                        // after navigation, all matched components are resolved\r\n                        toLocation, from, false);\r\n                // revert the navigation\r\n                if (failure && info.delta)\r\n                    routerHistory.go(-info.delta, false);\r\n                triggerAfterEach(toLocation, from, failure);\r\n            })\r\n                .catch(noop);\r\n        });\r\n    }\r\n    // Initialization and Errors\r\n    let readyHandlers = useCallbacks();\r\n    let errorHandlers = useCallbacks();\r\n    let ready;\r\n    /**\r\n     * Trigger errorHandlers added via onError and throws the error as well\r\n     * @param error - error to throw\r\n     * @returns the error as a rejected promise\r\n     */\r\n    function triggerError(error) {\r\n        markAsReady(error);\r\n        errorHandlers.list().forEach(handler => handler(error));\r\n        return Promise.reject(error);\r\n    }\r\n    function isReady() {\r\n        if (ready && currentRoute.value !== START_LOCATION_NORMALIZED)\r\n            return Promise.resolve();\r\n        return new Promise((resolve, reject) => {\r\n            readyHandlers.add([resolve, reject]);\r\n        });\r\n    }\r\n    /**\r\n     * Mark the router as ready, resolving the promised returned by isReady(). Can\r\n     * only be called once, otherwise does nothing.\r\n     * @param err - optional error\r\n     */\r\n    function markAsReady(err) {\r\n        if (ready)\r\n            return;\r\n        ready = true;\r\n        setupListeners();\r\n        readyHandlers\r\n            .list()\r\n            .forEach(([resolve, reject]) => (err ? reject(err) : resolve()));\r\n        readyHandlers.reset();\r\n    }\r\n    // Scroll behavior\r\n    function handleScroll(to, from, isPush, isFirstNavigation) {\r\n        if (!isBrowser || !scrollBehavior)\r\n            return Promise.resolve();\r\n        let scrollPosition = (!isPush && getSavedScrollPosition(getScrollKey(to.fullPath, 0))) ||\r\n            ((isFirstNavigation || !isPush) &&\r\n                history.state &&\r\n                history.state.scroll) ||\r\n            null;\r\n        return nextTick()\r\n            .then(() => scrollBehavior(to, from, scrollPosition))\r\n            .then(position => position && scrollToPosition(position))\r\n            .catch(triggerError);\r\n    }\r\n    const go = (delta) => routerHistory.go(delta);\r\n    let started;\r\n    const installedApps = new Set();\r\n    const router = {\r\n        currentRoute,\r\n        addRoute,\r\n        removeRoute,\r\n        hasRoute,\r\n        getRoutes,\r\n        resolve,\r\n        options,\r\n        push,\r\n        replace,\r\n        go,\r\n        back: () => go(-1),\r\n        forward: () => go(1),\r\n        beforeEach: beforeGuards.add,\r\n        beforeResolve: beforeResolveGuards.add,\r\n        afterEach: afterGuards.add,\r\n        onError: errorHandlers.add,\r\n        isReady,\r\n        install(app) {\r\n            const router = this;\r\n            app.component('RouterLink', RouterLink);\r\n            app.component('RouterView', RouterView);\r\n            app.config.globalProperties.$router = router;\r\n            Object.defineProperty(app.config.globalProperties, '$route', {\r\n                get: () => unref(currentRoute),\r\n            });\r\n            // this initial navigation is only necessary on client, on server it doesn't\r\n            // make sense because it will create an extra unnecessary navigation and could\r\n            // lead to problems\r\n            if (isBrowser &&\r\n                // used for the initial navigation client side to avoid pushing\r\n                // multiple times when the router is used in multiple apps\r\n                !started &&\r\n                currentRoute.value === START_LOCATION_NORMALIZED) {\r\n                // see above\r\n                started = true;\r\n                push(routerHistory.location).catch(err => {\r\n                    if ((process.env.NODE_ENV !== 'production'))\r\n                        warn('Unexpected error when starting the router:', err);\r\n                });\r\n            }\r\n            const reactiveRoute = {};\r\n            for (let key in START_LOCATION_NORMALIZED) {\r\n                // @ts-ignore: the key matches\r\n                reactiveRoute[key] = computed(() => currentRoute.value[key]);\r\n            }\r\n            app.provide(routerKey, router);\r\n            app.provide(routeLocationKey, reactive(reactiveRoute));\r\n            let unmountApp = app.unmount;\r\n            installedApps.add(app);\r\n            app.unmount = function () {\r\n                installedApps.delete(app);\r\n                if (installedApps.size < 1) {\r\n                    removeHistoryListener();\r\n                    currentRoute.value = START_LOCATION_NORMALIZED;\r\n                    started = false;\r\n                    ready = false;\r\n                }\r\n                unmountApp.call(this, arguments);\r\n            };\r\n        },\r\n    };\r\n    return router;\r\n}\r\nfunction runGuardQueue(guards) {\r\n    return guards.reduce((promise, guard) => promise.then(() => guard()), Promise.resolve());\r\n}\r\nfunction extractChangingRecords(to, from) {\r\n    const leavingRecords = [];\r\n    const updatingRecords = [];\r\n    const enteringRecords = [];\r\n    const len = Math.max(from.matched.length, to.matched.length);\r\n    for (let i = 0; i < len; i++) {\r\n        const recordFrom = from.matched[i];\r\n        if (recordFrom) {\r\n            if (to.matched.indexOf(recordFrom) < 0)\r\n                leavingRecords.push(recordFrom);\r\n            else\r\n                updatingRecords.push(recordFrom);\r\n        }\r\n        const recordTo = to.matched[i];\r\n        if (recordTo) {\r\n            // the type doesn't matter because we are comparing per reference\r\n            if (from.matched.indexOf(recordTo) < 0)\r\n                enteringRecords.push(recordTo);\r\n        }\r\n    }\r\n    return [leavingRecords, updatingRecords, enteringRecords];\r\n}\n\n/**\r\n * Returns the router instance. Equivalent to using `$router` inside\r\n * templates.\r\n */\r\nfunction useRouter() {\r\n    return inject(routerKey);\r\n}\r\n/**\r\n * Returns the current route location. Equivalent to using `$route` inside\r\n * templates.\r\n */\r\nfunction useRoute() {\r\n    return inject(routeLocationKey);\r\n}\n\nexport { NavigationFailureType, RouterLink, RouterView, START_LOCATION_NORMALIZED as START_LOCATION, createMemoryHistory, createRouter, createRouterMatcher, createWebHashHistory, createWebHistory, isNavigationFailure, onBeforeRouteLeave, onBeforeRouteUpdate, parseQuery, stringifyQuery, useLink, useRoute, useRouter };\n","import { EMPTY_OBJ, isArray, isMap, isIntegerKey, isSymbol, extend, hasOwn, isObject, hasChanged, capitalize, toRawType, def, isFunction, NOOP } from '@vue/shared';\n\nconst targetMap = new WeakMap();\r\nconst effectStack = [];\r\nlet activeEffect;\r\nconst ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'iterate' : '');\r\nconst MAP_KEY_ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'Map key iterate' : '');\r\nfunction isEffect(fn) {\r\n    return fn && fn._isEffect === true;\r\n}\r\nfunction effect(fn, options = EMPTY_OBJ) {\r\n    if (isEffect(fn)) {\r\n        fn = fn.raw;\r\n    }\r\n    const effect = createReactiveEffect(fn, options);\r\n    if (!options.lazy) {\r\n        effect();\r\n    }\r\n    return effect;\r\n}\r\nfunction stop(effect) {\r\n    if (effect.active) {\r\n        cleanup(effect);\r\n        if (effect.options.onStop) {\r\n            effect.options.onStop();\r\n        }\r\n        effect.active = false;\r\n    }\r\n}\r\nlet uid = 0;\r\nfunction createReactiveEffect(fn, options) {\r\n    const effect = function reactiveEffect() {\r\n        if (!effect.active) {\r\n            return options.scheduler ? undefined : fn();\r\n        }\r\n        if (!effectStack.includes(effect)) {\r\n            cleanup(effect);\r\n            try {\r\n                enableTracking();\r\n                effectStack.push(effect);\r\n                activeEffect = effect;\r\n                return fn();\r\n            }\r\n            finally {\r\n                effectStack.pop();\r\n                resetTracking();\r\n                activeEffect = effectStack[effectStack.length - 1];\r\n            }\r\n        }\r\n    };\r\n    effect.id = uid++;\r\n    effect._isEffect = true;\r\n    effect.active = true;\r\n    effect.raw = fn;\r\n    effect.deps = [];\r\n    effect.options = options;\r\n    return effect;\r\n}\r\nfunction cleanup(effect) {\r\n    const { deps } = effect;\r\n    if (deps.length) {\r\n        for (let i = 0; i < deps.length; i++) {\r\n            deps[i].delete(effect);\r\n        }\r\n        deps.length = 0;\r\n    }\r\n}\r\nlet shouldTrack = true;\r\nconst trackStack = [];\r\nfunction pauseTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = false;\r\n}\r\nfunction enableTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = true;\r\n}\r\nfunction resetTracking() {\r\n    const last = trackStack.pop();\r\n    shouldTrack = last === undefined ? true : last;\r\n}\r\nfunction track(target, type, key) {\r\n    if (!shouldTrack || activeEffect === undefined) {\r\n        return;\r\n    }\r\n    let depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        targetMap.set(target, (depsMap = new Map()));\r\n    }\r\n    let dep = depsMap.get(key);\r\n    if (!dep) {\r\n        depsMap.set(key, (dep = new Set()));\r\n    }\r\n    if (!dep.has(activeEffect)) {\r\n        dep.add(activeEffect);\r\n        activeEffect.deps.push(dep);\r\n        if ((process.env.NODE_ENV !== 'production') && activeEffect.options.onTrack) {\r\n            activeEffect.options.onTrack({\r\n                effect: activeEffect,\r\n                target,\r\n                type,\r\n                key\r\n            });\r\n        }\r\n    }\r\n}\r\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\r\n    const depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        // never been tracked\r\n        return;\r\n    }\r\n    const effects = new Set();\r\n    const add = (effectsToAdd) => {\r\n        if (effectsToAdd) {\r\n            effectsToAdd.forEach(effect => {\r\n                if (effect !== activeEffect || effect.options.allowRecurse) {\r\n                    effects.add(effect);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    if (type === \"clear\" /* CLEAR */) {\r\n        // collection being cleared\r\n        // trigger all effects for target\r\n        depsMap.forEach(add);\r\n    }\r\n    else if (key === 'length' && isArray(target)) {\r\n        depsMap.forEach((dep, key) => {\r\n            if (key === 'length' || key >= newValue) {\r\n                add(dep);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        // schedule runs for SET | ADD | DELETE\r\n        if (key !== void 0) {\r\n            add(depsMap.get(key));\r\n        }\r\n        // also run for iteration key on ADD | DELETE | Map.SET\r\n        switch (type) {\r\n            case \"add\" /* ADD */:\r\n                if (!isArray(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                else if (isIntegerKey(key)) {\r\n                    // new index added to array -> length changes\r\n                    add(depsMap.get('length'));\r\n                }\r\n                break;\r\n            case \"delete\" /* DELETE */:\r\n                if (!isArray(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                break;\r\n            case \"set\" /* SET */:\r\n                if (isMap(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    const run = (effect) => {\r\n        if ((process.env.NODE_ENV !== 'production') && effect.options.onTrigger) {\r\n            effect.options.onTrigger({\r\n                effect,\r\n                target,\r\n                key,\r\n                type,\r\n                newValue,\r\n                oldValue,\r\n                oldTarget\r\n            });\r\n        }\r\n        if (effect.options.scheduler) {\r\n            effect.options.scheduler(effect);\r\n        }\r\n        else {\r\n            effect();\r\n        }\r\n    };\r\n    effects.forEach(run);\r\n}\n\nconst builtInSymbols = new Set(Object.getOwnPropertyNames(Symbol)\r\n    .map(key => Symbol[key])\r\n    .filter(isSymbol));\r\nconst get = /*#__PURE__*/ createGetter();\r\nconst shallowGet = /*#__PURE__*/ createGetter(false, true);\r\nconst readonlyGet = /*#__PURE__*/ createGetter(true);\r\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true);\r\nconst arrayInstrumentations = {};\r\n['includes', 'indexOf', 'lastIndexOf'].forEach(key => {\r\n    const method = Array.prototype[key];\r\n    arrayInstrumentations[key] = function (...args) {\r\n        const arr = toRaw(this);\r\n        for (let i = 0, l = this.length; i < l; i++) {\r\n            track(arr, \"get\" /* GET */, i + '');\r\n        }\r\n        // we run the method using the original args first (which may be reactive)\r\n        const res = method.apply(arr, args);\r\n        if (res === -1 || res === false) {\r\n            // if that didn't work, run it again using raw values.\r\n            return method.apply(arr, args.map(toRaw));\r\n        }\r\n        else {\r\n            return res;\r\n        }\r\n    };\r\n});\r\n['push', 'pop', 'shift', 'unshift', 'splice'].forEach(key => {\r\n    const method = Array.prototype[key];\r\n    arrayInstrumentations[key] = function (...args) {\r\n        pauseTracking();\r\n        const res = method.apply(this, args);\r\n        enableTracking();\r\n        return res;\r\n    };\r\n});\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n    return function get(target, key, receiver) {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */ &&\r\n            receiver === (isReadonly ? readonlyMap : reactiveMap).get(target)) {\r\n            return target;\r\n        }\r\n        const targetIsArray = isArray(target);\r\n        if (targetIsArray && hasOwn(arrayInstrumentations, key)) {\r\n            return Reflect.get(arrayInstrumentations, key, receiver);\r\n        }\r\n        const res = Reflect.get(target, key, receiver);\r\n        const keyIsSymbol = isSymbol(key);\r\n        if (keyIsSymbol\r\n            ? builtInSymbols.has(key)\r\n            : key === `__proto__` || key === `__v_isRef`) {\r\n            return res;\r\n        }\r\n        if (!isReadonly) {\r\n            track(target, \"get\" /* GET */, key);\r\n        }\r\n        if (shallow) {\r\n            return res;\r\n        }\r\n        if (isRef(res)) {\r\n            // ref unwrapping - does not apply for Array + integer key.\r\n            const shouldUnwrap = !targetIsArray || !isIntegerKey(key);\r\n            return shouldUnwrap ? res.value : res;\r\n        }\r\n        if (isObject(res)) {\r\n            // Convert returned value into a proxy as well. we do the isObject check\r\n            // here to avoid invalid value warning. Also need to lazy access readonly\r\n            // and reactive here to avoid circular dependency.\r\n            return isReadonly ? readonly(res) : reactive(res);\r\n        }\r\n        return res;\r\n    };\r\n}\r\nconst set = /*#__PURE__*/ createSetter();\r\nconst shallowSet = /*#__PURE__*/ createSetter(true);\r\nfunction createSetter(shallow = false) {\r\n    return function set(target, key, value, receiver) {\r\n        const oldValue = target[key];\r\n        if (!shallow) {\r\n            value = toRaw(value);\r\n            if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\r\n                oldValue.value = value;\r\n                return true;\r\n            }\r\n        }\r\n        const hadKey = isArray(target) && isIntegerKey(key)\r\n            ? Number(key) < target.length\r\n            : hasOwn(target, key);\r\n        const result = Reflect.set(target, key, value, receiver);\r\n        // don't trigger if target is something up in the prototype chain of original\r\n        if (target === toRaw(receiver)) {\r\n            if (!hadKey) {\r\n                trigger(target, \"add\" /* ADD */, key, value);\r\n            }\r\n            else if (hasChanged(value, oldValue)) {\r\n                trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n}\r\nfunction deleteProperty(target, key) {\r\n    const hadKey = hasOwn(target, key);\r\n    const oldValue = target[key];\r\n    const result = Reflect.deleteProperty(target, key);\r\n    if (result && hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction has(target, key) {\r\n    const result = Reflect.has(target, key);\r\n    if (!isSymbol(key) || !builtInSymbols.has(key)) {\r\n        track(target, \"has\" /* HAS */, key);\r\n    }\r\n    return result;\r\n}\r\nfunction ownKeys(target) {\r\n    track(target, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n    return Reflect.ownKeys(target);\r\n}\r\nconst mutableHandlers = {\r\n    get,\r\n    set,\r\n    deleteProperty,\r\n    has,\r\n    ownKeys\r\n};\r\nconst readonlyHandlers = {\r\n    get: readonlyGet,\r\n    set(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    },\r\n    deleteProperty(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    }\r\n};\r\nconst shallowReactiveHandlers = extend({}, mutableHandlers, {\r\n    get: shallowGet,\r\n    set: shallowSet\r\n});\r\n// Props handlers are special in the sense that it should not unwrap top-level\r\n// refs (in order to allow refs to be explicitly passed down), but should\r\n// retain the reactivity of the normal readonly object.\r\nconst shallowReadonlyHandlers = extend({}, readonlyHandlers, {\r\n    get: shallowReadonlyGet\r\n});\n\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\r\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\r\nconst toShallow = (value) => value;\r\nconst getProto = (v) => Reflect.getPrototypeOf(v);\r\nfunction get$1(target, key, isReadonly = false, isShallow = false) {\r\n    // #1772: readonly(reactive(Map)) should return readonly + reactive version\r\n    // of the value\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"get\" /* GET */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"get\" /* GET */, rawKey);\r\n    const { has } = getProto(rawTarget);\r\n    const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n    if (has.call(rawTarget, key)) {\r\n        return wrap(target.get(key));\r\n    }\r\n    else if (has.call(rawTarget, rawKey)) {\r\n        return wrap(target.get(rawKey));\r\n    }\r\n}\r\nfunction has$1(key, isReadonly = false) {\r\n    const target = this[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"has\" /* HAS */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"has\" /* HAS */, rawKey);\r\n    return key === rawKey\r\n        ? target.has(key)\r\n        : target.has(key) || target.has(rawKey);\r\n}\r\nfunction size(target, isReadonly = false) {\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    !isReadonly && track(toRaw(target), \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n    return Reflect.get(target, 'size', target);\r\n}\r\nfunction add(value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const proto = getProto(target);\r\n    const hadKey = proto.has.call(target, value);\r\n    const result = target.add(value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, value, value);\r\n    }\r\n    return result;\r\n}\r\nfunction set$1(key, value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get.call(target, key);\r\n    const result = target.set(key, value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, key, value);\r\n    }\r\n    else if (hasChanged(value, oldValue)) {\r\n        trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction deleteEntry(key) {\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get ? get.call(target, key) : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.delete(key);\r\n    if (hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction clear() {\r\n    const target = toRaw(this);\r\n    const hadItems = target.size !== 0;\r\n    const oldTarget = (process.env.NODE_ENV !== 'production')\r\n        ? isMap(target)\r\n            ? new Map(target)\r\n            : new Set(target)\r\n        : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.clear();\r\n    if (hadItems) {\r\n        trigger(target, \"clear\" /* CLEAR */, undefined, undefined, oldTarget);\r\n    }\r\n    return result;\r\n}\r\nfunction createForEach(isReadonly, isShallow) {\r\n    return function forEach(callback, thisArg) {\r\n        const observed = this;\r\n        const target = observed[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n        !isReadonly && track(rawTarget, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n        return target.forEach((value, key) => {\r\n            // important: make sure the callback is\r\n            // 1. invoked with the reactive map as `this` and 3rd arg\r\n            // 2. the value received should be a corresponding reactive/readonly.\r\n            return callback.call(thisArg, wrap(value), wrap(key), observed);\r\n        });\r\n    };\r\n}\r\nfunction createIterableMethod(method, isReadonly, isShallow) {\r\n    return function (...args) {\r\n        const target = this[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const targetIsMap = isMap(rawTarget);\r\n        const isPair = method === 'entries' || (method === Symbol.iterator && targetIsMap);\r\n        const isKeyOnly = method === 'keys' && targetIsMap;\r\n        const innerIterator = target[method](...args);\r\n        const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n        !isReadonly &&\r\n            track(rawTarget, \"iterate\" /* ITERATE */, isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);\r\n        // return a wrapped iterator which returns observed versions of the\r\n        // values emitted from the real iterator\r\n        return {\r\n            // iterator protocol\r\n            next() {\r\n                const { value, done } = innerIterator.next();\r\n                return done\r\n                    ? { value, done }\r\n                    : {\r\n                        value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n                        done\r\n                    };\r\n            },\r\n            // iterable protocol\r\n            [Symbol.iterator]() {\r\n                return this;\r\n            }\r\n        };\r\n    };\r\n}\r\nfunction createReadonlyMethod(type) {\r\n    return function (...args) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const key = args[0] ? `on key \"${args[0]}\" ` : ``;\r\n            console.warn(`${capitalize(type)} operation ${key}failed: target is readonly.`, toRaw(this));\r\n        }\r\n        return type === \"delete\" /* DELETE */ ? false : this;\r\n    };\r\n}\r\nconst mutableInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, false)\r\n};\r\nconst shallowInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, false, true);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, true)\r\n};\r\nconst readonlyInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, true);\r\n    },\r\n    get size() {\r\n        return size(this, true);\r\n    },\r\n    has(key) {\r\n        return has$1.call(this, key, true);\r\n    },\r\n    add: createReadonlyMethod(\"add\" /* ADD */),\r\n    set: createReadonlyMethod(\"set\" /* SET */),\r\n    delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n    clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n    forEach: createForEach(true, false)\r\n};\r\nconst iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];\r\niteratorMethods.forEach(method => {\r\n    mutableInstrumentations[method] = createIterableMethod(method, false, false);\r\n    readonlyInstrumentations[method] = createIterableMethod(method, true, false);\r\n    shallowInstrumentations[method] = createIterableMethod(method, false, true);\r\n});\r\nfunction createInstrumentationGetter(isReadonly, shallow) {\r\n    const instrumentations = shallow\r\n        ? shallowInstrumentations\r\n        : isReadonly\r\n            ? readonlyInstrumentations\r\n            : mutableInstrumentations;\r\n    return (target, key, receiver) => {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */) {\r\n            return target;\r\n        }\r\n        return Reflect.get(hasOwn(instrumentations, key) && key in target\r\n            ? instrumentations\r\n            : target, key, receiver);\r\n    };\r\n}\r\nconst mutableCollectionHandlers = {\r\n    get: createInstrumentationGetter(false, false)\r\n};\r\nconst shallowCollectionHandlers = {\r\n    get: createInstrumentationGetter(false, true)\r\n};\r\nconst readonlyCollectionHandlers = {\r\n    get: createInstrumentationGetter(true, false)\r\n};\r\nfunction checkIdentityKeys(target, has, key) {\r\n    const rawKey = toRaw(key);\r\n    if (rawKey !== key && has.call(target, rawKey)) {\r\n        const type = toRawType(target);\r\n        console.warn(`Reactive ${type} contains both the raw and reactive ` +\r\n            `versions of the same object${type === `Map` ? `as keys` : ``}, ` +\r\n            `which can lead to inconsistencies. ` +\r\n            `Avoid differentiating between the raw and reactive versions ` +\r\n            `of an object and only use the reactive version if possible.`);\r\n    }\r\n}\n\nconst reactiveMap = new WeakMap();\r\nconst readonlyMap = new WeakMap();\r\nfunction targetTypeMap(rawType) {\r\n    switch (rawType) {\r\n        case 'Object':\r\n        case 'Array':\r\n            return 1 /* COMMON */;\r\n        case 'Map':\r\n        case 'Set':\r\n        case 'WeakMap':\r\n        case 'WeakSet':\r\n            return 2 /* COLLECTION */;\r\n        default:\r\n            return 0 /* INVALID */;\r\n    }\r\n}\r\nfunction getTargetType(value) {\r\n    return value[\"__v_skip\" /* SKIP */] || !Object.isExtensible(value)\r\n        ? 0 /* INVALID */\r\n        : targetTypeMap(toRawType(value));\r\n}\r\nfunction reactive(target) {\r\n    // if trying to observe a readonly proxy, return the readonly version.\r\n    if (target && target[\"__v_isReadonly\" /* IS_READONLY */]) {\r\n        return target;\r\n    }\r\n    return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers);\r\n}\r\n// Return a reactive-copy of the original object, where only the root level\r\n// properties are reactive, and does NOT unwrap refs nor recursively convert\r\n// returned properties.\r\nfunction shallowReactive(target) {\r\n    return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers);\r\n}\r\nfunction readonly(target) {\r\n    return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers);\r\n}\r\n// Return a reactive-copy of the original object, where only the root level\r\n// properties are readonly, and does NOT unwrap refs nor recursively convert\r\n// returned properties.\r\n// This is used for creating the props proxy object for stateful components.\r\nfunction shallowReadonly(target) {\r\n    return createReactiveObject(target, true, shallowReadonlyHandlers, readonlyCollectionHandlers);\r\n}\r\nfunction createReactiveObject(target, isReadonly, baseHandlers, collectionHandlers) {\r\n    if (!isObject(target)) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`value cannot be made reactive: ${String(target)}`);\r\n        }\r\n        return target;\r\n    }\r\n    // target is already a Proxy, return it.\r\n    // exception: calling readonly() on a reactive object\r\n    if (target[\"__v_raw\" /* RAW */] &&\r\n        !(isReadonly && target[\"__v_isReactive\" /* IS_REACTIVE */])) {\r\n        return target;\r\n    }\r\n    // target already has corresponding Proxy\r\n    const proxyMap = isReadonly ? readonlyMap : reactiveMap;\r\n    const existingProxy = proxyMap.get(target);\r\n    if (existingProxy) {\r\n        return existingProxy;\r\n    }\r\n    // only a whitelist of value types can be observed.\r\n    const targetType = getTargetType(target);\r\n    if (targetType === 0 /* INVALID */) {\r\n        return target;\r\n    }\r\n    const proxy = new Proxy(target, targetType === 2 /* COLLECTION */ ? collectionHandlers : baseHandlers);\r\n    proxyMap.set(target, proxy);\r\n    return proxy;\r\n}\r\nfunction isReactive(value) {\r\n    if (isReadonly(value)) {\r\n        return isReactive(value[\"__v_raw\" /* RAW */]);\r\n    }\r\n    return !!(value && value[\"__v_isReactive\" /* IS_REACTIVE */]);\r\n}\r\nfunction isReadonly(value) {\r\n    return !!(value && value[\"__v_isReadonly\" /* IS_READONLY */]);\r\n}\r\nfunction isProxy(value) {\r\n    return isReactive(value) || isReadonly(value);\r\n}\r\nfunction toRaw(observed) {\r\n    return ((observed && toRaw(observed[\"__v_raw\" /* RAW */])) || observed);\r\n}\r\nfunction markRaw(value) {\r\n    def(value, \"__v_skip\" /* SKIP */, true);\r\n    return value;\r\n}\n\nconst convert = (val) => isObject(val) ? reactive(val) : val;\r\nfunction isRef(r) {\r\n    return Boolean(r && r.__v_isRef === true);\r\n}\r\nfunction ref(value) {\r\n    return createRef(value);\r\n}\r\nfunction shallowRef(value) {\r\n    return createRef(value, true);\r\n}\r\nclass RefImpl {\r\n    constructor(_rawValue, _shallow = false) {\r\n        this._rawValue = _rawValue;\r\n        this._shallow = _shallow;\r\n        this.__v_isRef = true;\r\n        this._value = _shallow ? _rawValue : convert(_rawValue);\r\n    }\r\n    get value() {\r\n        track(toRaw(this), \"get\" /* GET */, 'value');\r\n        return this._value;\r\n    }\r\n    set value(newVal) {\r\n        if (hasChanged(toRaw(newVal), this._rawValue)) {\r\n            this._rawValue = newVal;\r\n            this._value = this._shallow ? newVal : convert(newVal);\r\n            trigger(toRaw(this), \"set\" /* SET */, 'value', newVal);\r\n        }\r\n    }\r\n}\r\nfunction createRef(rawValue, shallow = false) {\r\n    if (isRef(rawValue)) {\r\n        return rawValue;\r\n    }\r\n    return new RefImpl(rawValue, shallow);\r\n}\r\nfunction triggerRef(ref) {\r\n    trigger(ref, \"set\" /* SET */, 'value', (process.env.NODE_ENV !== 'production') ? ref.value : void 0);\r\n}\r\nfunction unref(ref) {\r\n    return isRef(ref) ? ref.value : ref;\r\n}\r\nconst shallowUnwrapHandlers = {\r\n    get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\r\n    set: (target, key, value, receiver) => {\r\n        const oldValue = target[key];\r\n        if (isRef(oldValue) && !isRef(value)) {\r\n            oldValue.value = value;\r\n            return true;\r\n        }\r\n        else {\r\n            return Reflect.set(target, key, value, receiver);\r\n        }\r\n    }\r\n};\r\nfunction proxyRefs(objectWithRefs) {\r\n    return isReactive(objectWithRefs)\r\n        ? objectWithRefs\r\n        : new Proxy(objectWithRefs, shallowUnwrapHandlers);\r\n}\r\nclass CustomRefImpl {\r\n    constructor(factory) {\r\n        this.__v_isRef = true;\r\n        const { get, set } = factory(() => track(this, \"get\" /* GET */, 'value'), () => trigger(this, \"set\" /* SET */, 'value'));\r\n        this._get = get;\r\n        this._set = set;\r\n    }\r\n    get value() {\r\n        return this._get();\r\n    }\r\n    set value(newVal) {\r\n        this._set(newVal);\r\n    }\r\n}\r\nfunction customRef(factory) {\r\n    return new CustomRefImpl(factory);\r\n}\r\nfunction toRefs(object) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isProxy(object)) {\r\n        console.warn(`toRefs() expects a reactive object but received a plain one.`);\r\n    }\r\n    const ret = isArray(object) ? new Array(object.length) : {};\r\n    for (const key in object) {\r\n        ret[key] = toRef(object, key);\r\n    }\r\n    return ret;\r\n}\r\nclass ObjectRefImpl {\r\n    constructor(_object, _key) {\r\n        this._object = _object;\r\n        this._key = _key;\r\n        this.__v_isRef = true;\r\n    }\r\n    get value() {\r\n        return this._object[this._key];\r\n    }\r\n    set value(newVal) {\r\n        this._object[this._key] = newVal;\r\n    }\r\n}\r\nfunction toRef(object, key) {\r\n    return isRef(object[key])\r\n        ? object[key]\r\n        : new ObjectRefImpl(object, key);\r\n}\n\nclass ComputedRefImpl {\r\n    constructor(getter, _setter, isReadonly) {\r\n        this._setter = _setter;\r\n        this._dirty = true;\r\n        this.__v_isRef = true;\r\n        this.effect = effect(getter, {\r\n            lazy: true,\r\n            scheduler: () => {\r\n                if (!this._dirty) {\r\n                    this._dirty = true;\r\n                    trigger(toRaw(this), \"set\" /* SET */, 'value');\r\n                }\r\n            }\r\n        });\r\n        this[\"__v_isReadonly\" /* IS_READONLY */] = isReadonly;\r\n    }\r\n    get value() {\r\n        if (this._dirty) {\r\n            this._value = this.effect();\r\n            this._dirty = false;\r\n        }\r\n        track(toRaw(this), \"get\" /* GET */, 'value');\r\n        return this._value;\r\n    }\r\n    set value(newValue) {\r\n        this._setter(newValue);\r\n    }\r\n}\r\nfunction computed(getterOrOptions) {\r\n    let getter;\r\n    let setter;\r\n    if (isFunction(getterOrOptions)) {\r\n        getter = getterOrOptions;\r\n        setter = (process.env.NODE_ENV !== 'production')\r\n            ? () => {\r\n                console.warn('Write operation failed: computed value is readonly');\r\n            }\r\n            : NOOP;\r\n    }\r\n    else {\r\n        getter = getterOrOptions.get;\r\n        setter = getterOrOptions.set;\r\n    }\r\n    return new ComputedRefImpl(getter, setter, isFunction(getterOrOptions) || !getterOrOptions.set);\r\n}\n\nexport { ITERATE_KEY, computed, customRef, effect, enableTracking, isProxy, isReactive, isReadonly, isRef, markRaw, pauseTracking, proxyRefs, reactive, readonly, ref, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, track, trigger, triggerRef, unref };\n","import { pauseTracking, resetTracking, isRef, toRaw, isProxy, shallowReactive, trigger, effect, stop, isReactive, reactive, shallowReadonly, track, proxyRefs, computed as computed$1, ref } from '@vue/reactivity';\nexport { customRef, isProxy, isReactive, isReadonly, isRef, markRaw, proxyRefs, reactive, readonly, ref, shallowReactive, shallowReadonly, shallowRef, toRaw, toRef, toRefs, triggerRef, unref } from '@vue/reactivity';\nimport { isString, isFunction, isPromise, isArray, extend, EMPTY_OBJ, capitalize, hyphenate, isOn, hasOwn, isModelListener, toNumber, camelize, EMPTY_ARR, normalizeClass, isObject, normalizeStyle, def, isReservedProp, toRawType, makeMap, remove, invokeArrayFns, NO, getGlobalThis, NOOP, hasChanged, isMap, isSet, isGloballyWhitelisted } from '@vue/shared';\nexport { camelize, capitalize, toDisplayString } from '@vue/shared';\n\nconst stack = [];\r\nfunction pushWarningContext(vnode) {\r\n    stack.push(vnode);\r\n}\r\nfunction popWarningContext() {\r\n    stack.pop();\r\n}\r\nfunction warn(msg, ...args) {\r\n    // avoid props formatting or warn handler tracking deps that might be mutated\r\n    // during patch, leading to infinite recursion.\r\n    pauseTracking();\r\n    const instance = stack.length ? stack[stack.length - 1].component : null;\r\n    const appWarnHandler = instance && instance.appContext.config.warnHandler;\r\n    const trace = getComponentTrace();\r\n    if (appWarnHandler) {\r\n        callWithErrorHandling(appWarnHandler, instance, 11 /* APP_WARN_HANDLER */, [\r\n            msg + args.join(''),\r\n            instance && instance.proxy,\r\n            trace\r\n                .map(({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`)\r\n                .join('\\n'),\r\n            trace\r\n        ]);\r\n    }\r\n    else {\r\n        const warnArgs = [`[Vue warn]: ${msg}`, ...args];\r\n        /* istanbul ignore if */\r\n        if (trace.length &&\r\n            // avoid spamming console during tests\r\n            !false) {\r\n            warnArgs.push(`\\n`, ...formatTrace(trace));\r\n        }\r\n        console.warn(...warnArgs);\r\n    }\r\n    resetTracking();\r\n}\r\nfunction getComponentTrace() {\r\n    let currentVNode = stack[stack.length - 1];\r\n    if (!currentVNode) {\r\n        return [];\r\n    }\r\n    // we can't just use the stack because it will be incomplete during updates\r\n    // that did not start from the root. Re-construct the parent chain using\r\n    // instance parent pointers.\r\n    const normalizedStack = [];\r\n    while (currentVNode) {\r\n        const last = normalizedStack[0];\r\n        if (last && last.vnode === currentVNode) {\r\n            last.recurseCount++;\r\n        }\r\n        else {\r\n            normalizedStack.push({\r\n                vnode: currentVNode,\r\n                recurseCount: 0\r\n            });\r\n        }\r\n        const parentInstance = currentVNode.component && currentVNode.component.parent;\r\n        currentVNode = parentInstance && parentInstance.vnode;\r\n    }\r\n    return normalizedStack;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatTrace(trace) {\r\n    const logs = [];\r\n    trace.forEach((entry, i) => {\r\n        logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry));\r\n    });\r\n    return logs;\r\n}\r\nfunction formatTraceEntry({ vnode, recurseCount }) {\r\n    const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\r\n    const isRoot = vnode.component ? vnode.component.parent == null : false;\r\n    const open = ` at <${formatComponentName(vnode.component, vnode.type, isRoot)}`;\r\n    const close = `>` + postfix;\r\n    return vnode.props\r\n        ? [open, ...formatProps(vnode.props), close]\r\n        : [open + close];\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProps(props) {\r\n    const res = [];\r\n    const keys = Object.keys(props);\r\n    keys.slice(0, 3).forEach(key => {\r\n        res.push(...formatProp(key, props[key]));\r\n    });\r\n    if (keys.length > 3) {\r\n        res.push(` ...`);\r\n    }\r\n    return res;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProp(key, value, raw) {\r\n    if (isString(value)) {\r\n        value = JSON.stringify(value);\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (typeof value === 'number' ||\r\n        typeof value === 'boolean' ||\r\n        value == null) {\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (isRef(value)) {\r\n        value = formatProp(key, toRaw(value.value), true);\r\n        return raw ? value : [`${key}=Ref<`, value, `>`];\r\n    }\r\n    else if (isFunction(value)) {\r\n        return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\r\n    }\r\n    else {\r\n        value = toRaw(value);\r\n        return raw ? value : [`${key}=`, value];\r\n    }\r\n}\n\nconst ErrorTypeStrings = {\r\n    [\"bc\" /* BEFORE_CREATE */]: 'beforeCreate hook',\r\n    [\"c\" /* CREATED */]: 'created hook',\r\n    [\"bm\" /* BEFORE_MOUNT */]: 'beforeMount hook',\r\n    [\"m\" /* MOUNTED */]: 'mounted hook',\r\n    [\"bu\" /* BEFORE_UPDATE */]: 'beforeUpdate hook',\r\n    [\"u\" /* UPDATED */]: 'updated',\r\n    [\"bum\" /* BEFORE_UNMOUNT */]: 'beforeUnmount hook',\r\n    [\"um\" /* UNMOUNTED */]: 'unmounted hook',\r\n    [\"a\" /* ACTIVATED */]: 'activated hook',\r\n    [\"da\" /* DEACTIVATED */]: 'deactivated hook',\r\n    [\"ec\" /* ERROR_CAPTURED */]: 'errorCaptured hook',\r\n    [\"rtc\" /* RENDER_TRACKED */]: 'renderTracked hook',\r\n    [\"rtg\" /* RENDER_TRIGGERED */]: 'renderTriggered hook',\r\n    [0 /* SETUP_FUNCTION */]: 'setup function',\r\n    [1 /* RENDER_FUNCTION */]: 'render function',\r\n    [2 /* WATCH_GETTER */]: 'watcher getter',\r\n    [3 /* WATCH_CALLBACK */]: 'watcher callback',\r\n    [4 /* WATCH_CLEANUP */]: 'watcher cleanup function',\r\n    [5 /* NATIVE_EVENT_HANDLER */]: 'native event handler',\r\n    [6 /* COMPONENT_EVENT_HANDLER */]: 'component event handler',\r\n    [7 /* VNODE_HOOK */]: 'vnode hook',\r\n    [8 /* DIRECTIVE_HOOK */]: 'directive hook',\r\n    [9 /* TRANSITION_HOOK */]: 'transition hook',\r\n    [10 /* APP_ERROR_HANDLER */]: 'app errorHandler',\r\n    [11 /* APP_WARN_HANDLER */]: 'app warnHandler',\r\n    [12 /* FUNCTION_REF */]: 'ref function',\r\n    [13 /* ASYNC_COMPONENT_LOADER */]: 'async component loader',\r\n    [14 /* SCHEDULER */]: 'scheduler flush. This is likely a Vue internals bug. ' +\r\n        'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-next'\r\n};\r\nfunction callWithErrorHandling(fn, instance, type, args) {\r\n    let res;\r\n    try {\r\n        res = args ? fn(...args) : fn();\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, type);\r\n    }\r\n    return res;\r\n}\r\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\r\n    if (isFunction(fn)) {\r\n        const res = callWithErrorHandling(fn, instance, type, args);\r\n        if (res && isPromise(res)) {\r\n            res.catch(err => {\r\n                handleError(err, instance, type);\r\n            });\r\n        }\r\n        return res;\r\n    }\r\n    const values = [];\r\n    for (let i = 0; i < fn.length; i++) {\r\n        values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\r\n    }\r\n    return values;\r\n}\r\nfunction handleError(err, instance, type, throwInDev = true) {\r\n    const contextVNode = instance ? instance.vnode : null;\r\n    if (instance) {\r\n        let cur = instance.parent;\r\n        // the exposed instance is the render proxy to keep it consistent with 2.x\r\n        const exposedInstance = instance.proxy;\r\n        // in production the hook receives only the error code\r\n        const errorInfo = (process.env.NODE_ENV !== 'production') ? ErrorTypeStrings[type] : type;\r\n        while (cur) {\r\n            const errorCapturedHooks = cur.ec;\r\n            if (errorCapturedHooks) {\r\n                for (let i = 0; i < errorCapturedHooks.length; i++) {\r\n                    if (errorCapturedHooks[i](err, exposedInstance, errorInfo)) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            cur = cur.parent;\r\n        }\r\n        // app-level handling\r\n        const appErrorHandler = instance.appContext.config.errorHandler;\r\n        if (appErrorHandler) {\r\n            callWithErrorHandling(appErrorHandler, null, 10 /* APP_ERROR_HANDLER */, [err, exposedInstance, errorInfo]);\r\n            return;\r\n        }\r\n    }\r\n    logError(err, type, contextVNode, throwInDev);\r\n}\r\nfunction logError(err, type, contextVNode, throwInDev = true) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const info = ErrorTypeStrings[type];\r\n        if (contextVNode) {\r\n            pushWarningContext(contextVNode);\r\n        }\r\n        warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`);\r\n        if (contextVNode) {\r\n            popWarningContext();\r\n        }\r\n        // crash in dev by default so it's more noticeable\r\n        if (throwInDev) {\r\n            throw err;\r\n        }\r\n        else {\r\n            console.error(err);\r\n        }\r\n    }\r\n    else {\r\n        // recover in prod to reduce the impact on end-user\r\n        console.error(err);\r\n    }\r\n}\n\nlet isFlushing = false;\r\nlet isFlushPending = false;\r\nconst queue = [];\r\nlet flushIndex = 0;\r\nconst pendingPreFlushCbs = [];\r\nlet activePreFlushCbs = null;\r\nlet preFlushIndex = 0;\r\nconst pendingPostFlushCbs = [];\r\nlet activePostFlushCbs = null;\r\nlet postFlushIndex = 0;\r\nconst resolvedPromise = Promise.resolve();\r\nlet currentFlushPromise = null;\r\nlet currentPreFlushParentJob = null;\r\nconst RECURSION_LIMIT = 100;\r\nfunction nextTick(fn) {\r\n    const p = currentFlushPromise || resolvedPromise;\r\n    return fn ? p.then(fn) : p;\r\n}\r\nfunction queueJob(job) {\r\n    // the dedupe search uses the startIndex argument of Array.includes()\r\n    // by default the search index includes the current job that is being run\r\n    // so it cannot recursively trigger itself again.\r\n    // if the job is a watch() callback, the search will start with a +1 index to\r\n    // allow it recursively trigger itself - it is the user's responsibility to\r\n    // ensure it doesn't end up in an infinite loop.\r\n    if ((!queue.length ||\r\n        !queue.includes(job, isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex)) &&\r\n        job !== currentPreFlushParentJob) {\r\n        queue.push(job);\r\n        queueFlush();\r\n    }\r\n}\r\nfunction queueFlush() {\r\n    if (!isFlushing && !isFlushPending) {\r\n        isFlushPending = true;\r\n        currentFlushPromise = resolvedPromise.then(flushJobs);\r\n    }\r\n}\r\nfunction invalidateJob(job) {\r\n    const i = queue.indexOf(job);\r\n    if (i > -1) {\r\n        queue[i] = null;\r\n    }\r\n}\r\nfunction queueCb(cb, activeQueue, pendingQueue, index) {\r\n    if (!isArray(cb)) {\r\n        if (!activeQueue ||\r\n            !activeQueue.includes(cb, cb.allowRecurse ? index + 1 : index)) {\r\n            pendingQueue.push(cb);\r\n        }\r\n    }\r\n    else {\r\n        // if cb is an array, it is a component lifecycle hook which can only be\r\n        // triggered by a job, which is already deduped in the main queue, so\r\n        // we can skip duplicate check here to improve perf\r\n        pendingQueue.push(...cb);\r\n    }\r\n    queueFlush();\r\n}\r\nfunction queuePreFlushCb(cb) {\r\n    queueCb(cb, activePreFlushCbs, pendingPreFlushCbs, preFlushIndex);\r\n}\r\nfunction queuePostFlushCb(cb) {\r\n    queueCb(cb, activePostFlushCbs, pendingPostFlushCbs, postFlushIndex);\r\n}\r\nfunction flushPreFlushCbs(seen, parentJob = null) {\r\n    if (pendingPreFlushCbs.length) {\r\n        currentPreFlushParentJob = parentJob;\r\n        activePreFlushCbs = [...new Set(pendingPreFlushCbs)];\r\n        pendingPreFlushCbs.length = 0;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        for (preFlushIndex = 0; preFlushIndex < activePreFlushCbs.length; preFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, activePreFlushCbs[preFlushIndex]);\r\n            }\r\n            activePreFlushCbs[preFlushIndex]();\r\n        }\r\n        activePreFlushCbs = null;\r\n        preFlushIndex = 0;\r\n        currentPreFlushParentJob = null;\r\n        // recursively flush until it drains\r\n        flushPreFlushCbs(seen, parentJob);\r\n    }\r\n}\r\nfunction flushPostFlushCbs(seen) {\r\n    if (pendingPostFlushCbs.length) {\r\n        const deduped = [...new Set(pendingPostFlushCbs)];\r\n        pendingPostFlushCbs.length = 0;\r\n        // #1947 already has active queue, nested flushPostFlushCbs call\r\n        if (activePostFlushCbs) {\r\n            activePostFlushCbs.push(...deduped);\r\n            return;\r\n        }\r\n        activePostFlushCbs = deduped;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        activePostFlushCbs.sort((a, b) => getId(a) - getId(b));\r\n        for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, activePostFlushCbs[postFlushIndex]);\r\n            }\r\n            activePostFlushCbs[postFlushIndex]();\r\n        }\r\n        activePostFlushCbs = null;\r\n        postFlushIndex = 0;\r\n    }\r\n}\r\nconst getId = (job) => job.id == null ? Infinity : job.id;\r\nfunction flushJobs(seen) {\r\n    isFlushPending = false;\r\n    isFlushing = true;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        seen = seen || new Map();\r\n    }\r\n    flushPreFlushCbs(seen);\r\n    // Sort queue before flush.\r\n    // This ensures that:\r\n    // 1. Components are updated from parent to child. (because parent is always\r\n    //    created before the child so its render effect will have smaller\r\n    //    priority number)\r\n    // 2. If a component is unmounted during a parent component's update,\r\n    //    its update can be skipped.\r\n    // Jobs can never be null before flush starts, since they are only invalidated\r\n    // during execution of another flushed job.\r\n    queue.sort((a, b) => getId(a) - getId(b));\r\n    try {\r\n        for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\r\n            const job = queue[flushIndex];\r\n            if (job) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkRecursiveUpdates(seen, job);\r\n                }\r\n                callWithErrorHandling(job, null, 14 /* SCHEDULER */);\r\n            }\r\n        }\r\n    }\r\n    finally {\r\n        flushIndex = 0;\r\n        queue.length = 0;\r\n        flushPostFlushCbs(seen);\r\n        isFlushing = false;\r\n        currentFlushPromise = null;\r\n        // some postFlushCb queued jobs!\r\n        // keep flushing until it drains.\r\n        if (queue.length || pendingPostFlushCbs.length) {\r\n            flushJobs(seen);\r\n        }\r\n    }\r\n}\r\nfunction checkRecursiveUpdates(seen, fn) {\r\n    if (!seen.has(fn)) {\r\n        seen.set(fn, 1);\r\n    }\r\n    else {\r\n        const count = seen.get(fn);\r\n        if (count > RECURSION_LIMIT) {\r\n            throw new Error(`Maximum recursive updates exceeded. ` +\r\n                `This means you have a reactive effect that is mutating its own ` +\r\n                `dependencies and thus recursively triggering itself. Possible sources ` +\r\n                `include component template, render function, updated hook or ` +\r\n                `watcher source function.`);\r\n        }\r\n        else {\r\n            seen.set(fn, count + 1);\r\n        }\r\n    }\r\n}\n\n/* eslint-disable no-restricted-globals */\r\nlet isHmrUpdating = false;\r\nconst hmrDirtyComponents = new Set();\r\n// Expose the HMR runtime on the global object\r\n// This makes it entirely tree-shakable without polluting the exports and makes\r\n// it easier to be used in toolings like vue-loader\r\n// Note: for a component to be eligible for HMR it also needs the __hmrId option\r\n// to be set so that its instances can be registered / removed.\r\nif ((process.env.NODE_ENV !== 'production')) {\r\n    const globalObject = typeof global !== 'undefined'\r\n        ? global\r\n        : typeof self !== 'undefined'\r\n            ? self\r\n            : typeof window !== 'undefined'\r\n                ? window\r\n                : {};\r\n    globalObject.__VUE_HMR_RUNTIME__ = {\r\n        createRecord: tryWrap(createRecord),\r\n        rerender: tryWrap(rerender),\r\n        reload: tryWrap(reload)\r\n    };\r\n}\r\nconst map = new Map();\r\nfunction registerHMR(instance) {\r\n    const id = instance.type.__hmrId;\r\n    let record = map.get(id);\r\n    if (!record) {\r\n        createRecord(id);\r\n        record = map.get(id);\r\n    }\r\n    record.add(instance);\r\n}\r\nfunction unregisterHMR(instance) {\r\n    map.get(instance.type.__hmrId).delete(instance);\r\n}\r\nfunction createRecord(id) {\r\n    if (map.has(id)) {\r\n        return false;\r\n    }\r\n    map.set(id, new Set());\r\n    return true;\r\n}\r\nfunction rerender(id, newRender) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    Array.from(record).forEach(instance => {\r\n        if (newRender) {\r\n            instance.render = newRender;\r\n        }\r\n        instance.renderCache = [];\r\n        // this flag forces child components with slot content to update\r\n        isHmrUpdating = true;\r\n        instance.update();\r\n        isHmrUpdating = false;\r\n    });\r\n}\r\nfunction reload(id, newComp) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    Array.from(record).forEach(instance => {\r\n        const comp = instance.type;\r\n        if (!hmrDirtyComponents.has(comp)) {\r\n            // 1. Update existing comp definition to match new one\r\n            newComp = isClassComponent(newComp) ? newComp.__vccOpts : newComp;\r\n            extend(comp, newComp);\r\n            for (const key in comp) {\r\n                if (!(key in newComp)) {\r\n                    delete comp[key];\r\n                }\r\n            }\r\n            // 2. Mark component dirty. This forces the renderer to replace the component\r\n            // on patch.\r\n            hmrDirtyComponents.add(comp);\r\n            // 3. Make sure to unmark the component after the reload.\r\n            queuePostFlushCb(() => {\r\n                hmrDirtyComponents.delete(comp);\r\n            });\r\n        }\r\n        if (instance.parent) {\r\n            // 4. Force the parent instance to re-render. This will cause all updated\r\n            // components to be unmounted and re-mounted. Queue the update so that we\r\n            // don't end up forcing the same parent to re-render multiple times.\r\n            queueJob(instance.parent.update);\r\n        }\r\n        else if (instance.appContext.reload) {\r\n            // root instance mounted via createApp() has a reload method\r\n            instance.appContext.reload();\r\n        }\r\n        else if (typeof window !== 'undefined') {\r\n            // root instance inside tree created via raw render(). Force reload.\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            console.warn('[HMR] Root or manually mounted instance modified. Full reload required.');\r\n        }\r\n    });\r\n}\r\nfunction tryWrap(fn) {\r\n    return (id, arg) => {\r\n        try {\r\n            return fn(id, arg);\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            console.warn(`[HMR] Something went wrong during Vue component hot-reload. ` +\r\n                `Full reload required.`);\r\n        }\r\n    };\r\n}\n\nlet devtools;\r\nfunction setDevtoolsHook(hook) {\r\n    devtools = hook;\r\n}\r\nfunction devtoolsInitApp(app, version) {\r\n    // TODO queue if devtools is undefined\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:init\" /* APP_INIT */, app, version, {\r\n        Fragment,\r\n        Text,\r\n        Comment,\r\n        Static\r\n    });\r\n}\r\nfunction devtoolsUnmountApp(app) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:unmount\" /* APP_UNMOUNT */, app);\r\n}\r\nconst devtoolsComponentAdded = /*#__PURE__*/ createDevtoolsComponentHook(\"component:added\" /* COMPONENT_ADDED */);\r\nconst devtoolsComponentUpdated = /*#__PURE__*/ createDevtoolsComponentHook(\"component:updated\" /* COMPONENT_UPDATED */);\r\nconst devtoolsComponentRemoved = /*#__PURE__*/ createDevtoolsComponentHook(\"component:removed\" /* COMPONENT_REMOVED */);\r\nfunction createDevtoolsComponentHook(hook) {\r\n    return (component) => {\r\n        if (!devtools)\r\n            return;\r\n        devtools.emit(hook, component.appContext.app, component.uid, component.parent ? component.parent.uid : undefined);\r\n    };\r\n}\r\nfunction devtoolsComponentEmit(component, event, params) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"component:emit\" /* COMPONENT_EMIT */, component.appContext.app, component, event, params);\r\n}\n\nfunction emit(instance, event, ...args) {\r\n    const props = instance.vnode.props || EMPTY_OBJ;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const { emitsOptions, propsOptions: [propsOptions] } = instance;\r\n        if (emitsOptions) {\r\n            if (!(event in emitsOptions)) {\r\n                if (!propsOptions || !(`on` + capitalize(event) in propsOptions)) {\r\n                    warn(`Component emitted event \"${event}\" but it is neither declared in ` +\r\n                        `the emits option nor as an \"on${capitalize(event)}\" prop.`);\r\n                }\r\n            }\r\n            else {\r\n                const validator = emitsOptions[event];\r\n                if (isFunction(validator)) {\r\n                    const isValid = validator(...args);\r\n                    if (!isValid) {\r\n                        warn(`Invalid event arguments: event validation failed for event \"${event}\".`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsComponentEmit(instance, event, args);\r\n    }\r\n    let handlerName = `on${capitalize(event)}`;\r\n    let handler = props[handlerName];\r\n    // for v-model update:xxx events, also trigger kebab-case equivalent\r\n    // for props passed via kebab-case\r\n    if (!handler && event.startsWith('update:')) {\r\n        handlerName = `on${capitalize(hyphenate(event))}`;\r\n        handler = props[handlerName];\r\n    }\r\n    if (!handler) {\r\n        handler = props[handlerName + `Once`];\r\n        if (!instance.emitted) {\r\n            (instance.emitted = {})[handlerName] = true;\r\n        }\r\n        else if (instance.emitted[handlerName]) {\r\n            return;\r\n        }\r\n    }\r\n    if (handler) {\r\n        callWithAsyncErrorHandling(handler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n}\r\nfunction normalizeEmitsOptions(comp, appContext, asMixin = false) {\r\n    const appId = appContext.app ? appContext.app._uid : -1;\r\n    const cache = comp.__emits || (comp.__emits = {});\r\n    const cached = cache[appId];\r\n    if (cached !== undefined) {\r\n        return cached;\r\n    }\r\n    const raw = comp.emits;\r\n    let normalized = {};\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendEmits = (raw) => {\r\n            hasExtends = true;\r\n            extend(normalized, normalizeEmitsOptions(raw, appContext, true));\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendEmits);\r\n        }\r\n        if (comp.extends) {\r\n            extendEmits(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendEmits);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        return (cache[appId] = null);\r\n    }\r\n    if (isArray(raw)) {\r\n        raw.forEach(key => (normalized[key] = null));\r\n    }\r\n    else {\r\n        extend(normalized, raw);\r\n    }\r\n    return (cache[appId] = normalized);\r\n}\r\n// Check if an incoming prop key is a declared emit event listener.\r\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\r\n// both considered matched listeners.\r\nfunction isEmitListener(options, key) {\r\n    if (!options || !isOn(key)) {\r\n        return false;\r\n    }\r\n    key = key.replace(/Once$/, '');\r\n    return (hasOwn(options, key[2].toLowerCase() + key.slice(3)) ||\r\n        hasOwn(options, key.slice(2)));\r\n}\n\n// mark the current rendering instance for asset resolution (e.g.\r\n// resolveComponent, resolveDirective) during render\r\nlet currentRenderingInstance = null;\r\nfunction setCurrentRenderingInstance(instance) {\r\n    currentRenderingInstance = instance;\r\n}\r\n// dev only flag to track whether $attrs was used during render.\r\n// If $attrs was used during render then the warning for failed attrs\r\n// fallthrough can be suppressed.\r\nlet accessedAttrs = false;\r\nfunction markAttrsAccessed() {\r\n    accessedAttrs = true;\r\n}\r\nfunction renderComponentRoot(instance) {\r\n    const { type: Component, vnode, proxy, withProxy, props, propsOptions: [propsOptions], slots, attrs, emit, render, renderCache, data, setupState, ctx } = instance;\r\n    let result;\r\n    currentRenderingInstance = instance;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        accessedAttrs = false;\r\n    }\r\n    try {\r\n        let fallthroughAttrs;\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            // withProxy is a proxy with a different `has` trap only for\r\n            // runtime-compiled render functions using `with` block.\r\n            const proxyToUse = withProxy || proxy;\r\n            result = normalizeVNode(render.call(proxyToUse, proxyToUse, renderCache, props, setupState, data, ctx));\r\n            fallthroughAttrs = attrs;\r\n        }\r\n        else {\r\n            // functional\r\n            const render = Component;\r\n            // in dev, mark attrs accessed if optional props (attrs === props)\r\n            if ((process.env.NODE_ENV !== 'production') && attrs === props) {\r\n                markAttrsAccessed();\r\n            }\r\n            result = normalizeVNode(render.length > 1\r\n                ? render(props, (process.env.NODE_ENV !== 'production')\r\n                    ? {\r\n                        get attrs() {\r\n                            markAttrsAccessed();\r\n                            return attrs;\r\n                        },\r\n                        slots,\r\n                        emit\r\n                    }\r\n                    : { attrs, slots, emit })\r\n                : render(props, null /* we know it doesn't need it */));\r\n            fallthroughAttrs = Component.props\r\n                ? attrs\r\n                : getFunctionalFallthrough(attrs);\r\n        }\r\n        // attr merging\r\n        // in dev mode, comments are preserved, and it's possible for a template\r\n        // to have comments along side the root element which makes it a fragment\r\n        let root = result;\r\n        let setRoot = undefined;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            ;\r\n            [root, setRoot] = getChildRoot(result);\r\n        }\r\n        if (Component.inheritAttrs !== false && fallthroughAttrs) {\r\n            const keys = Object.keys(fallthroughAttrs);\r\n            const { shapeFlag } = root;\r\n            if (keys.length) {\r\n                if (shapeFlag & 1 /* ELEMENT */ ||\r\n                    shapeFlag & 6 /* COMPONENT */) {\r\n                    if (propsOptions && keys.some(isModelListener)) {\r\n                        // If a v-model listener (onUpdate:xxx) has a corresponding declared\r\n                        // prop, it indicates this component expects to handle v-model and\r\n                        // it should not fallthrough.\r\n                        // related: #1543, #1643, #1989\r\n                        fallthroughAttrs = filterModelListeners(fallthroughAttrs, propsOptions);\r\n                    }\r\n                    root = cloneVNode(root, fallthroughAttrs);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production') && !accessedAttrs && root.type !== Comment) {\r\n                    const allAttrs = Object.keys(attrs);\r\n                    const eventAttrs = [];\r\n                    const extraAttrs = [];\r\n                    for (let i = 0, l = allAttrs.length; i < l; i++) {\r\n                        const key = allAttrs[i];\r\n                        if (isOn(key)) {\r\n                            // ignore v-model handlers when they fail to fallthrough\r\n                            if (!isModelListener(key)) {\r\n                                // remove `on`, lowercase first letter to reflect event casing\r\n                                // accurately\r\n                                eventAttrs.push(key[2].toLowerCase() + key.slice(3));\r\n                            }\r\n                        }\r\n                        else {\r\n                            extraAttrs.push(key);\r\n                        }\r\n                    }\r\n                    if (extraAttrs.length) {\r\n                        warn(`Extraneous non-props attributes (` +\r\n                            `${extraAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes.`);\r\n                    }\r\n                    if (eventAttrs.length) {\r\n                        warn(`Extraneous non-emits event listeners (` +\r\n                            `${eventAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes. ` +\r\n                            `If the listener is intended to be a component custom event listener only, ` +\r\n                            `declare it using the \"emits\" option.`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // inherit directives\r\n        if (vnode.dirs) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Runtime directive used on component with non-element root node. ` +\r\n                    `The directives will not function as intended.`);\r\n            }\r\n            root.dirs = vnode.dirs;\r\n        }\r\n        // inherit transition data\r\n        if (vnode.transition) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Component inside <Transition> renders non-element root node ` +\r\n                    `that cannot be animated.`);\r\n            }\r\n            root.transition = vnode.transition;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && setRoot) {\r\n            setRoot(root);\r\n        }\r\n        else {\r\n            result = root;\r\n        }\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, 1 /* RENDER_FUNCTION */);\r\n        result = createVNode(Comment);\r\n    }\r\n    currentRenderingInstance = null;\r\n    return result;\r\n}\r\n/**\r\n * dev only\r\n * In dev mode, template root level comments are rendered, which turns the\r\n * template into a fragment root, but we need to locate the single element\r\n * root for attrs and scope id processing.\r\n */\r\nconst getChildRoot = (vnode) => {\r\n    if (vnode.type !== Fragment) {\r\n        return [vnode, undefined];\r\n    }\r\n    const rawChildren = vnode.children;\r\n    const dynamicChildren = vnode.dynamicChildren;\r\n    const childRoot = filterSingleRoot(rawChildren);\r\n    if (!childRoot) {\r\n        return [vnode, undefined];\r\n    }\r\n    const index = rawChildren.indexOf(childRoot);\r\n    const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;\r\n    const setRoot = (updatedRoot) => {\r\n        rawChildren[index] = updatedRoot;\r\n        if (dynamicIndex > -1) {\r\n            dynamicChildren[dynamicIndex] = updatedRoot;\r\n        }\r\n        else if (dynamicChildren && updatedRoot.patchFlag > 0) {\r\n            dynamicChildren.push(updatedRoot);\r\n        }\r\n    };\r\n    return [normalizeVNode(childRoot), setRoot];\r\n};\r\n/**\r\n * dev only\r\n */\r\nfunction filterSingleRoot(children) {\r\n    const filtered = children.filter(child => {\r\n        return !(isVNode(child) &&\r\n            child.type === Comment &&\r\n            child.children !== 'v-if');\r\n    });\r\n    return filtered.length === 1 && isVNode(filtered[0]) ? filtered[0] : null;\r\n}\r\nconst getFunctionalFallthrough = (attrs) => {\r\n    let res;\r\n    for (const key in attrs) {\r\n        if (key === 'class' || key === 'style' || isOn(key)) {\r\n            (res || (res = {}))[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst filterModelListeners = (attrs, props) => {\r\n    const res = {};\r\n    for (const key in attrs) {\r\n        if (!isModelListener(key) || !(key.slice(9) in props)) {\r\n            res[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst isElementRoot = (vnode) => {\r\n    return (vnode.shapeFlag & 6 /* COMPONENT */ ||\r\n        vnode.shapeFlag & 1 /* ELEMENT */ ||\r\n        vnode.type === Comment // potential v-if branch switch\r\n    );\r\n};\r\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\r\n    const { props: prevProps, children: prevChildren, component } = prevVNode;\r\n    const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\r\n    const emits = component.emitsOptions;\r\n    // Parent component's render function was hot-updated. Since this may have\r\n    // caused the child component's slots content to have changed, we need to\r\n    // force the child to update as well.\r\n    if ((process.env.NODE_ENV !== 'production') && (prevChildren || nextChildren) && isHmrUpdating) {\r\n        return true;\r\n    }\r\n    // force child update for runtime directive or transition on component vnode.\r\n    if (nextVNode.dirs || nextVNode.transition) {\r\n        return true;\r\n    }\r\n    if (optimized && patchFlag > 0) {\r\n        if (patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n            // slot content that references values that might have changed,\r\n            // e.g. in a v-for\r\n            return true;\r\n        }\r\n        if (patchFlag & 16 /* FULL_PROPS */) {\r\n            if (!prevProps) {\r\n                return !!nextProps;\r\n            }\r\n            // presence of this flag indicates props are always non-null\r\n            return hasPropsChanged(prevProps, nextProps, emits);\r\n        }\r\n        else if (patchFlag & 8 /* PROPS */) {\r\n            const dynamicProps = nextVNode.dynamicProps;\r\n            for (let i = 0; i < dynamicProps.length; i++) {\r\n                const key = dynamicProps[i];\r\n                if (nextProps[key] !== prevProps[key] &&\r\n                    !isEmitListener(emits, key)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // this path is only taken by manually written render functions\r\n        // so presence of any children leads to a forced update\r\n        if (prevChildren || nextChildren) {\r\n            if (!nextChildren || !nextChildren.$stable) {\r\n                return true;\r\n            }\r\n        }\r\n        if (prevProps === nextProps) {\r\n            return false;\r\n        }\r\n        if (!prevProps) {\r\n            return !!nextProps;\r\n        }\r\n        if (!nextProps) {\r\n            return true;\r\n        }\r\n        return hasPropsChanged(prevProps, nextProps, emits);\r\n    }\r\n    return false;\r\n}\r\nfunction hasPropsChanged(prevProps, nextProps, emitsOptions) {\r\n    const nextKeys = Object.keys(nextProps);\r\n    if (nextKeys.length !== Object.keys(prevProps).length) {\r\n        return true;\r\n    }\r\n    for (let i = 0; i < nextKeys.length; i++) {\r\n        const key = nextKeys[i];\r\n        if (nextProps[key] !== prevProps[key] &&\r\n            !isEmitListener(emitsOptions, key)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction updateHOCHostEl({ vnode, parent }, el // HostNode\r\n) {\r\n    while (parent && parent.subTree === vnode) {\r\n        (vnode = parent.vnode).el = el;\r\n        parent = parent.parent;\r\n    }\r\n}\n\nconst isSuspense = (type) => type.__isSuspense;\r\n// Suspense exposes a component-like API, and is treated like a component\r\n// in the compiler, but internally it's a special built-in type that hooks\r\n// directly into the renderer.\r\nconst SuspenseImpl = {\r\n    // In order to make Suspense tree-shakable, we need to avoid importing it\r\n    // directly in the renderer. The renderer checks for the __isSuspense flag\r\n    // on a vnode's type and calls the `process` method, passing in renderer\r\n    // internals.\r\n    __isSuspense: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, \r\n    // platform-specific impl passed from renderer\r\n    rendererInternals) {\r\n        if (n1 == null) {\r\n            mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, rendererInternals);\r\n        }\r\n        else {\r\n            patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, optimized, rendererInternals);\r\n        }\r\n    },\r\n    hydrate: hydrateSuspense,\r\n    create: createSuspenseBoundary\r\n};\r\n// Force-casted public typing for h and TSX props inference\r\nconst Suspense = ( SuspenseImpl\r\n    );\r\nfunction mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, isSVG, optimized, rendererInternals) {\r\n    const { p: patch, o: { createElement } } = rendererInternals;\r\n    const hiddenContainer = createElement('div');\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, isSVG, optimized, rendererInternals));\r\n    // start mounting the content subtree in an off-dom container\r\n    patch(null, (suspense.pendingBranch = vnode.ssContent), hiddenContainer, null, parentComponent, suspense, isSVG, optimized);\r\n    // now check if we have encountered any async deps\r\n    if (suspense.deps > 0) {\r\n        // has async\r\n        // mount the fallback tree\r\n        patch(null, vnode.ssFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n        isSVG, optimized);\r\n        setActiveBranch(suspense, vnode.ssFallback);\r\n    }\r\n    else {\r\n        // Suspense has no async deps. Just resolve.\r\n        suspense.resolve();\r\n    }\r\n}\r\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, optimized, { p: patch, um: unmount, o: { createElement } }) {\r\n    const suspense = (n2.suspense = n1.suspense);\r\n    suspense.vnode = n2;\r\n    n2.el = n1.el;\r\n    const newBranch = n2.ssContent;\r\n    const newFallback = n2.ssFallback;\r\n    const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense;\r\n    if (pendingBranch) {\r\n        suspense.pendingBranch = newBranch;\r\n        if (isSameVNodeType(newBranch, pendingBranch)) {\r\n            // same root type but content may have changed.\r\n            patch(pendingBranch, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, optimized);\r\n            if (suspense.deps <= 0) {\r\n                suspense.resolve();\r\n            }\r\n            else if (isInFallback) {\r\n                patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG, optimized);\r\n                setActiveBranch(suspense, newFallback);\r\n            }\r\n        }\r\n        else {\r\n            // toggled before pending tree is resolved\r\n            suspense.pendingId++;\r\n            if (isHydrating) {\r\n                // if toggled before hydration is finished, the current DOM tree is\r\n                // no longer valid. set it as the active branch so it will be unmounted\r\n                // when resolved\r\n                suspense.isHydrating = false;\r\n                suspense.activeBranch = pendingBranch;\r\n            }\r\n            else {\r\n                unmount(pendingBranch, parentComponent, suspense);\r\n            }\r\n            // increment pending ID. this is used to invalidate async callbacks\r\n            // reset suspense state\r\n            suspense.deps = 0;\r\n            // discard effects from pending branch\r\n            suspense.effects.length = 0;\r\n            // discard previous container\r\n            suspense.hiddenContainer = createElement('div');\r\n            if (isInFallback) {\r\n                // already in fallback state\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, optimized);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n                else {\r\n                    patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                    isSVG, optimized);\r\n                    setActiveBranch(suspense, newFallback);\r\n                }\r\n            }\r\n            else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n                // toggled \"back\" to current active branch\r\n                patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG, optimized);\r\n                // force resolve\r\n                suspense.resolve(true);\r\n            }\r\n            else {\r\n                // switched to a 3rd branch\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, optimized);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n            // root did not change, just normal patch\r\n            patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG, optimized);\r\n            setActiveBranch(suspense, newBranch);\r\n        }\r\n        else {\r\n            // root node toggled\r\n            // invoke @pending event\r\n            const onPending = n2.props && n2.props.onPending;\r\n            if (isFunction(onPending)) {\r\n                onPending();\r\n            }\r\n            // mount pending branch in off-dom container\r\n            suspense.pendingBranch = newBranch;\r\n            suspense.pendingId++;\r\n            patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, optimized);\r\n            if (suspense.deps <= 0) {\r\n                // incoming branch has no async deps, resolve now.\r\n                suspense.resolve();\r\n            }\r\n            else {\r\n                const { timeout, pendingId } = suspense;\r\n                if (timeout > 0) {\r\n                    setTimeout(() => {\r\n                        if (suspense.pendingId === pendingId) {\r\n                            suspense.fallback(newFallback);\r\n                        }\r\n                    }, timeout);\r\n                }\r\n                else if (timeout === 0) {\r\n                    suspense.fallback(newFallback);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nlet hasWarned = false;\r\nfunction createSuspenseBoundary(vnode, parent, parentComponent, container, hiddenContainer, anchor, isSVG, optimized, rendererInternals, isHydrating = false) {\r\n    /* istanbul ignore if */\r\n    if ((process.env.NODE_ENV !== 'production') && !false && !hasWarned) {\r\n        hasWarned = true;\r\n        // @ts-ignore `console.info` cannot be null error\r\n        console[console.info ? 'info' : 'log'](`<Suspense> is an experimental feature and its API will likely change.`);\r\n    }\r\n    const { p: patch, m: move, um: unmount, n: next, o: { parentNode, remove } } = rendererInternals;\r\n    const timeout = toNumber(vnode.props && vnode.props.timeout);\r\n    const suspense = {\r\n        vnode,\r\n        parent,\r\n        parentComponent,\r\n        isSVG,\r\n        optimized,\r\n        container,\r\n        hiddenContainer,\r\n        anchor,\r\n        deps: 0,\r\n        pendingId: 0,\r\n        timeout: typeof timeout === 'number' ? timeout : -1,\r\n        activeBranch: null,\r\n        pendingBranch: null,\r\n        isInFallback: true,\r\n        isHydrating,\r\n        isUnmounted: false,\r\n        effects: [],\r\n        resolve(resume = false) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!resume && !suspense.pendingBranch) {\r\n                    throw new Error(`suspense.resolve() is called without a pending branch.`);\r\n                }\r\n                if (suspense.isUnmounted) {\r\n                    throw new Error(`suspense.resolve() is called on an already unmounted suspense boundary.`);\r\n                }\r\n            }\r\n            const { vnode, activeBranch, pendingBranch, pendingId, effects, parentComponent, container } = suspense;\r\n            if (suspense.isHydrating) {\r\n                suspense.isHydrating = false;\r\n            }\r\n            else if (!resume) {\r\n                const delayEnter = activeBranch &&\r\n                    pendingBranch.transition &&\r\n                    pendingBranch.transition.mode === 'out-in';\r\n                if (delayEnter) {\r\n                    activeBranch.transition.afterLeave = () => {\r\n                        if (pendingId === suspense.pendingId) {\r\n                            move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                        }\r\n                    };\r\n                }\r\n                // this is initial anchor on mount\r\n                let { anchor } = suspense;\r\n                // unmount current active tree\r\n                if (activeBranch) {\r\n                    // if the fallback tree was mounted, it may have been moved\r\n                    // as part of a parent suspense. get the latest anchor for insertion\r\n                    anchor = next(activeBranch);\r\n                    unmount(activeBranch, parentComponent, suspense, true);\r\n                }\r\n                if (!delayEnter) {\r\n                    // move content from off-dom container to actual container\r\n                    move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                }\r\n            }\r\n            setActiveBranch(suspense, pendingBranch);\r\n            suspense.pendingBranch = null;\r\n            suspense.isInFallback = false;\r\n            // flush buffered effects\r\n            // check if there is a pending parent suspense\r\n            let parent = suspense.parent;\r\n            let hasUnresolvedAncestor = false;\r\n            while (parent) {\r\n                if (parent.pendingBranch) {\r\n                    // found a pending parent suspense, merge buffered post jobs\r\n                    // into that parent\r\n                    parent.effects.push(...effects);\r\n                    hasUnresolvedAncestor = true;\r\n                    break;\r\n                }\r\n                parent = parent.parent;\r\n            }\r\n            // no pending parent suspense, flush all jobs\r\n            if (!hasUnresolvedAncestor) {\r\n                queuePostFlushCb(effects);\r\n            }\r\n            suspense.effects = [];\r\n            // invoke @resolve event\r\n            const onResolve = vnode.props && vnode.props.onResolve;\r\n            if (isFunction(onResolve)) {\r\n                onResolve();\r\n            }\r\n        },\r\n        fallback(fallbackVNode) {\r\n            if (!suspense.pendingBranch) {\r\n                return;\r\n            }\r\n            const { vnode, activeBranch, parentComponent, container, isSVG, optimized } = suspense;\r\n            // invoke @fallback event\r\n            const onFallback = vnode.props && vnode.props.onFallback;\r\n            if (isFunction(onFallback)) {\r\n                onFallback();\r\n            }\r\n            const anchor = next(activeBranch);\r\n            const mountFallback = () => {\r\n                if (!suspense.isInFallback) {\r\n                    return;\r\n                }\r\n                // mount the fallback tree\r\n                patch(null, fallbackVNode, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG, optimized);\r\n                setActiveBranch(suspense, fallbackVNode);\r\n            };\r\n            const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === 'out-in';\r\n            if (delayEnter) {\r\n                activeBranch.transition.afterLeave = mountFallback;\r\n            }\r\n            // unmount current active branch\r\n            unmount(activeBranch, parentComponent, null, // no suspense so unmount hooks fire now\r\n            true // shouldRemove\r\n            );\r\n            suspense.isInFallback = true;\r\n            if (!delayEnter) {\r\n                mountFallback();\r\n            }\r\n        },\r\n        move(container, anchor, type) {\r\n            suspense.activeBranch &&\r\n                move(suspense.activeBranch, container, anchor, type);\r\n            suspense.container = container;\r\n        },\r\n        next() {\r\n            return suspense.activeBranch && next(suspense.activeBranch);\r\n        },\r\n        registerDep(instance, setupRenderEffect) {\r\n            if (!suspense.pendingBranch) {\r\n                return;\r\n            }\r\n            const hydratedEl = instance.vnode.el;\r\n            suspense.deps++;\r\n            instance\r\n                .asyncDep.catch(err => {\r\n                handleError(err, instance, 0 /* SETUP_FUNCTION */);\r\n            })\r\n                .then(asyncSetupResult => {\r\n                // retry when the setup() promise resolves.\r\n                // component may have been unmounted before resolve.\r\n                if (instance.isUnmounted ||\r\n                    suspense.isUnmounted ||\r\n                    suspense.pendingId !== instance.suspenseId) {\r\n                    return;\r\n                }\r\n                suspense.deps--;\r\n                // retry from this component\r\n                instance.asyncResolved = true;\r\n                const { vnode } = instance;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(vnode);\r\n                }\r\n                handleSetupResult(instance, asyncSetupResult);\r\n                if (hydratedEl) {\r\n                    // vnode may have been replaced if an update happened before the\r\n                    // async dep is resolved.\r\n                    vnode.el = hydratedEl;\r\n                }\r\n                const placeholder = !hydratedEl && instance.subTree.el;\r\n                setupRenderEffect(instance, vnode, \r\n                // component may have been moved before resolve.\r\n                // if this is not a hydration, instance.subTree will be the comment\r\n                // placeholder.\r\n                parentNode(hydratedEl || instance.subTree.el), \r\n                // anchor will not be used if this is hydration, so only need to\r\n                // consider the comment placeholder case.\r\n                hydratedEl ? null : next(instance.subTree), suspense, isSVG, optimized);\r\n                if (placeholder) {\r\n                    remove(placeholder);\r\n                }\r\n                updateHOCHostEl(instance, vnode.el);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                if (suspense.deps === 0) {\r\n                    suspense.resolve();\r\n                }\r\n            });\r\n        },\r\n        unmount(parentSuspense, doRemove) {\r\n            suspense.isUnmounted = true;\r\n            if (suspense.activeBranch) {\r\n                unmount(suspense.activeBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n            if (suspense.pendingBranch) {\r\n                unmount(suspense.pendingBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n        }\r\n    };\r\n    return suspense;\r\n}\r\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, isSVG, optimized, rendererInternals, hydrateNode) {\r\n    /* eslint-disable no-restricted-globals */\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, node.parentNode, document.createElement('div'), null, isSVG, optimized, rendererInternals, true /* hydrating */));\r\n    // there are two possible scenarios for server-rendered suspense:\r\n    // - success: ssr content should be fully resolved\r\n    // - failure: ssr content should be the fallback branch.\r\n    // however, on the client we don't really know if it has failed or not\r\n    // attempt to hydrate the DOM assuming it has succeeded, but we still\r\n    // need to construct a suspense boundary first\r\n    const result = hydrateNode(node, (suspense.pendingBranch = vnode.ssContent), parentComponent, suspense, optimized);\r\n    if (suspense.deps === 0) {\r\n        suspense.resolve();\r\n    }\r\n    return result;\r\n    /* eslint-enable no-restricted-globals */\r\n}\r\nfunction normalizeSuspenseChildren(vnode) {\r\n    const { shapeFlag, children } = vnode;\r\n    let content;\r\n    let fallback;\r\n    if (shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        content = normalizeSuspenseSlot(children.default);\r\n        fallback = normalizeSuspenseSlot(children.fallback);\r\n    }\r\n    else {\r\n        content = normalizeSuspenseSlot(children);\r\n        fallback = normalizeVNode(null);\r\n    }\r\n    return {\r\n        content,\r\n        fallback\r\n    };\r\n}\r\nfunction normalizeSuspenseSlot(s) {\r\n    if (isFunction(s)) {\r\n        s = s();\r\n    }\r\n    if (isArray(s)) {\r\n        const singleChild = filterSingleRoot(s);\r\n        if ((process.env.NODE_ENV !== 'production') && !singleChild) {\r\n            warn(`<Suspense> slots expect a single root node.`);\r\n        }\r\n        s = singleChild;\r\n    }\r\n    return normalizeVNode(s);\r\n}\r\nfunction queueEffectWithSuspense(fn, suspense) {\r\n    if (suspense && suspense.pendingBranch) {\r\n        if (isArray(fn)) {\r\n            suspense.effects.push(...fn);\r\n        }\r\n        else {\r\n            suspense.effects.push(fn);\r\n        }\r\n    }\r\n    else {\r\n        queuePostFlushCb(fn);\r\n    }\r\n}\r\nfunction setActiveBranch(suspense, branch) {\r\n    suspense.activeBranch = branch;\r\n    const { vnode, parentComponent } = suspense;\r\n    const el = (vnode.el = branch.el);\r\n    // in case suspense is the root node of a component,\r\n    // recursively update the HOC el\r\n    if (parentComponent && parentComponent.subTree === vnode) {\r\n        parentComponent.vnode.el = el;\r\n        updateHOCHostEl(parentComponent, el);\r\n    }\r\n}\n\nlet isRenderingCompiledSlot = 0;\r\nconst setCompiledSlotRendering = (n) => (isRenderingCompiledSlot += n);\r\n/**\r\n * Compiler runtime helper for rendering `<slot/>`\r\n * @private\r\n */\r\nfunction renderSlot(slots, name, props = {}, \r\n// this is not a user-facing function, so the fallback is always generated by\r\n// the compiler and guaranteed to be a function returning an array\r\nfallback) {\r\n    let slot = slots[name];\r\n    if ((process.env.NODE_ENV !== 'production') && slot && slot.length > 1) {\r\n        warn(`SSR-optimized slot function detected in a non-SSR-optimized render ` +\r\n            `function. You need to mark this component with $dynamic-slots in the ` +\r\n            `parent template.`);\r\n        slot = () => [];\r\n    }\r\n    // a compiled slot disables block tracking by default to avoid manual\r\n    // invocation interfering with template-based block tracking, but in\r\n    // `renderSlot` we can be sure that it's template-based so we can force\r\n    // enable it.\r\n    isRenderingCompiledSlot++;\r\n    const rendered = (openBlock(),\r\n        createBlock(Fragment, { key: props.key }, slot ? slot(props) : fallback ? fallback() : [], slots._ === 1 /* STABLE */\r\n            ? 64 /* STABLE_FRAGMENT */\r\n            : -2 /* BAIL */));\r\n    isRenderingCompiledSlot--;\r\n    return rendered;\r\n}\n\n/**\r\n * Wrap a slot function to memoize current rendering instance\r\n * @private\r\n */\r\nfunction withCtx(fn, ctx = currentRenderingInstance) {\r\n    if (!ctx)\r\n        return fn;\r\n    const renderFnWithContext = (...args) => {\r\n        // If a user calls a compiled slot inside a template expression (#1745), it\r\n        // can mess up block tracking, so by default we need to push a null block to\r\n        // avoid that. This isn't necessary if rendering a compiled `<slot>`.\r\n        if (!isRenderingCompiledSlot) {\r\n            openBlock(true /* null block that disables tracking */);\r\n        }\r\n        const owner = currentRenderingInstance;\r\n        setCurrentRenderingInstance(ctx);\r\n        const res = fn(...args);\r\n        setCurrentRenderingInstance(owner);\r\n        if (!isRenderingCompiledSlot) {\r\n            closeBlock();\r\n        }\r\n        return res;\r\n    };\r\n    renderFnWithContext._c = true;\r\n    return renderFnWithContext;\r\n}\n\n// SFC scoped style ID management.\r\nlet currentScopeId = null;\r\nconst scopeIdStack = [];\r\n/**\r\n * @private\r\n */\r\nfunction pushScopeId(id) {\r\n    scopeIdStack.push((currentScopeId = id));\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction popScopeId() {\r\n    scopeIdStack.pop();\r\n    currentScopeId = scopeIdStack[scopeIdStack.length - 1] || null;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction withScopeId(id) {\r\n    return ((fn) => withCtx(function () {\r\n        pushScopeId(id);\r\n        const res = fn.apply(this, arguments);\r\n        popScopeId();\r\n        return res;\r\n    }));\r\n}\n\nconst isTeleport = (type) => type.__isTeleport;\r\nconst isTeleportDisabled = (props) => props && (props.disabled || props.disabled === '');\r\nconst resolveTarget = (props, select) => {\r\n    const targetSelector = props && props.to;\r\n    if (isString(targetSelector)) {\r\n        if (!select) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current renderer does not support string target for Teleports. ` +\r\n                    `(missing querySelector renderer option)`);\r\n            return null;\r\n        }\r\n        else {\r\n            const target = select(targetSelector);\r\n            if (!target) {\r\n                (process.env.NODE_ENV !== 'production') &&\r\n                    warn(`Failed to locate Teleport target with selector \"${targetSelector}\". ` +\r\n                        `Note the target element must exist before the component is mounted - ` +\r\n                        `i.e. the target cannot be rendered by the component itself, and ` +\r\n                        `ideally should be outside of the entire Vue component tree.`);\r\n            }\r\n            return target;\r\n        }\r\n    }\r\n    else {\r\n        if ((process.env.NODE_ENV !== 'production') && !targetSelector && !isTeleportDisabled(props)) {\r\n            warn(`Invalid Teleport target: ${targetSelector}`);\r\n        }\r\n        return targetSelector;\r\n    }\r\n};\r\nconst TeleportImpl = {\r\n    __isTeleport: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals) {\r\n        const { mc: mountChildren, pc: patchChildren, pbc: patchBlockChildren, o: { insert, querySelector, createText, createComment } } = internals;\r\n        const disabled = isTeleportDisabled(n2.props);\r\n        const { shapeFlag, children } = n2;\r\n        if (n1 == null) {\r\n            // insert anchors in the main view\r\n            const placeholder = (n2.el = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport start')\r\n                : createText(''));\r\n            const mainAnchor = (n2.anchor = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport end')\r\n                : createText(''));\r\n            insert(placeholder, container, anchor);\r\n            insert(mainAnchor, container, anchor);\r\n            const target = (n2.target = resolveTarget(n2.props, querySelector));\r\n            const targetAnchor = (n2.targetAnchor = createText(''));\r\n            if (target) {\r\n                insert(targetAnchor, target);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production') && !disabled) {\r\n                warn('Invalid Teleport target on mount:', target, `(${typeof target})`);\r\n            }\r\n            const mount = (container, anchor) => {\r\n                // Teleport *always* has Array children. This is enforced in both the\r\n                // compiler and vnode children normalization.\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(children, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n            };\r\n            if (disabled) {\r\n                mount(container, mainAnchor);\r\n            }\r\n            else if (target) {\r\n                mount(target, targetAnchor);\r\n            }\r\n        }\r\n        else {\r\n            // update content\r\n            n2.el = n1.el;\r\n            const mainAnchor = (n2.anchor = n1.anchor);\r\n            const target = (n2.target = n1.target);\r\n            const targetAnchor = (n2.targetAnchor = n1.targetAnchor);\r\n            const wasDisabled = isTeleportDisabled(n1.props);\r\n            const currentContainer = wasDisabled ? container : target;\r\n            const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\r\n            if (n2.dynamicChildren) {\r\n                // fast path when the teleport happens to be a block root\r\n                patchBlockChildren(n1.dynamicChildren, n2.dynamicChildren, currentContainer, parentComponent, parentSuspense, isSVG);\r\n                // even in block tree mode we need to make sure all root-level nodes\r\n                // in the teleport inherit previous DOM references so that they can\r\n                // be moved in future patches.\r\n                if (n2.shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    const oldChildren = n1.children;\r\n                    const children = n2.children;\r\n                    for (let i = 0; i < children.length; i++) {\r\n                        // only inherit for non-patched nodes (i.e. static ones)\r\n                        if (!children[i].el) {\r\n                            children[i].el = oldChildren[i].el;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else if (!optimized) {\r\n                patchChildren(n1, n2, currentContainer, currentAnchor, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            if (disabled) {\r\n                if (!wasDisabled) {\r\n                    // enabled -> disabled\r\n                    // move into main container\r\n                    moveTeleport(n2, container, mainAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n            else {\r\n                // target changed\r\n                if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\r\n                    const nextTarget = (n2.target = resolveTarget(n2.props, querySelector));\r\n                    if (nextTarget) {\r\n                        moveTeleport(n2, nextTarget, null, internals, 0 /* TARGET_CHANGE */);\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Invalid Teleport target on update:', target, `(${typeof target})`);\r\n                    }\r\n                }\r\n                else if (wasDisabled) {\r\n                    // disabled -> enabled\r\n                    // move into teleport target\r\n                    moveTeleport(n2, target, targetAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    remove(vnode, { r: remove, o: { remove: hostRemove } }) {\r\n        const { shapeFlag, children, anchor } = vnode;\r\n        hostRemove(anchor);\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                remove(children[i]);\r\n            }\r\n        }\r\n    },\r\n    move: moveTeleport,\r\n    hydrate: hydrateTeleport\r\n};\r\nfunction moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2 /* REORDER */) {\r\n    // move target anchor if this is a target change.\r\n    if (moveType === 0 /* TARGET_CHANGE */) {\r\n        insert(vnode.targetAnchor, container, parentAnchor);\r\n    }\r\n    const { el, anchor, shapeFlag, children, props } = vnode;\r\n    const isReorder = moveType === 2 /* REORDER */;\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(el, container, parentAnchor);\r\n    }\r\n    // if this is a re-order and teleport is enabled (content is in target)\r\n    // do not move children. So the opposite is: only move children if this\r\n    // is not a reorder, or the teleport is disabled\r\n    if (!isReorder || isTeleportDisabled(props)) {\r\n        // Teleport has either Array children or no children.\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, parentAnchor, 2 /* REORDER */);\r\n            }\r\n        }\r\n    }\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(anchor, container, parentAnchor);\r\n    }\r\n}\r\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, optimized, { o: { nextSibling, parentNode, querySelector } }, hydrateChildren) {\r\n    const target = (vnode.target = resolveTarget(vnode.props, querySelector));\r\n    if (target) {\r\n        // if multiple teleports rendered to the same target element, we need to\r\n        // pick up from where the last teleport finished instead of the first node\r\n        const targetNode = target._lpa || target.firstChild;\r\n        if (vnode.shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            if (isTeleportDisabled(vnode.props)) {\r\n                vnode.anchor = hydrateChildren(nextSibling(node), vnode, parentNode(node), parentComponent, parentSuspense, optimized);\r\n                vnode.targetAnchor = targetNode;\r\n            }\r\n            else {\r\n                vnode.anchor = nextSibling(node);\r\n                vnode.targetAnchor = hydrateChildren(targetNode, vnode, target, parentComponent, parentSuspense, optimized);\r\n            }\r\n            target._lpa =\r\n                vnode.targetAnchor && nextSibling(vnode.targetAnchor);\r\n        }\r\n    }\r\n    return vnode.anchor && nextSibling(vnode.anchor);\r\n}\r\n// Force-casted public typing for h and TSX props inference\r\nconst Teleport = TeleportImpl;\n\nconst COMPONENTS = 'components';\r\nconst DIRECTIVES = 'directives';\r\n/**\r\n * @private\r\n */\r\nfunction resolveComponent(name) {\r\n    return resolveAsset(COMPONENTS, name) || name;\r\n}\r\nconst NULL_DYNAMIC_COMPONENT = Symbol();\r\n/**\r\n * @private\r\n */\r\nfunction resolveDynamicComponent(component) {\r\n    if (isString(component)) {\r\n        return resolveAsset(COMPONENTS, component, false) || component;\r\n    }\r\n    else {\r\n        // invalid types will fallthrough to createVNode and raise warning\r\n        return (component || NULL_DYNAMIC_COMPONENT);\r\n    }\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction resolveDirective(name) {\r\n    return resolveAsset(DIRECTIVES, name);\r\n}\r\n// implementation\r\nfunction resolveAsset(type, name, warnMissing = true) {\r\n    const instance = currentRenderingInstance || currentInstance;\r\n    if (instance) {\r\n        const Component = instance.type;\r\n        // self name has highest priority\r\n        if (type === COMPONENTS) {\r\n            const selfName = Component.displayName || Component.name;\r\n            if (selfName &&\r\n                (selfName === name ||\r\n                    selfName === camelize(name) ||\r\n                    selfName === capitalize(camelize(name)))) {\r\n                return Component;\r\n            }\r\n        }\r\n        const res = \r\n        // local registration\r\n        // check instance[type] first for components with mixin or extends.\r\n        resolve(instance[type] || Component[type], name) ||\r\n            // global registration\r\n            resolve(instance.appContext[type], name);\r\n        if ((process.env.NODE_ENV !== 'production') && warnMissing && !res) {\r\n            warn(`Failed to resolve ${type.slice(0, -1)}: ${name}`);\r\n        }\r\n        return res;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`resolve${capitalize(type.slice(0, -1))} ` +\r\n            `can only be used in render() or setup().`);\r\n    }\r\n}\r\nfunction resolve(registry, name) {\r\n    return (registry &&\r\n        (registry[name] ||\r\n            registry[camelize(name)] ||\r\n            registry[capitalize(camelize(name))]));\r\n}\n\nconst Fragment = Symbol((process.env.NODE_ENV !== 'production') ? 'Fragment' : undefined);\r\nconst Text = Symbol((process.env.NODE_ENV !== 'production') ? 'Text' : undefined);\r\nconst Comment = Symbol((process.env.NODE_ENV !== 'production') ? 'Comment' : undefined);\r\nconst Static = Symbol((process.env.NODE_ENV !== 'production') ? 'Static' : undefined);\r\n// Since v-if and v-for are the two possible ways node structure can dynamically\r\n// change, once we consider v-if branches and each v-for fragment a block, we\r\n// can divide a template into nested blocks, and within each block the node\r\n// structure would be stable. This allows us to skip most children diffing\r\n// and only worry about the dynamic nodes (indicated by patch flags).\r\nconst blockStack = [];\r\nlet currentBlock = null;\r\n/**\r\n * Open a block.\r\n * This must be called before `createBlock`. It cannot be part of `createBlock`\r\n * because the children of the block are evaluated before `createBlock` itself\r\n * is called. The generated code typically looks like this:\r\n *\r\n * ```js\r\n * function render() {\r\n *   return (openBlock(),createBlock('div', null, [...]))\r\n * }\r\n * ```\r\n * disableTracking is true when creating a v-for fragment block, since a v-for\r\n * fragment always diffs its children.\r\n *\r\n * @private\r\n */\r\nfunction openBlock(disableTracking = false) {\r\n    blockStack.push((currentBlock = disableTracking ? null : []));\r\n}\r\nfunction closeBlock() {\r\n    blockStack.pop();\r\n    currentBlock = blockStack[blockStack.length - 1] || null;\r\n}\r\n// Whether we should be tracking dynamic child nodes inside a block.\r\n// Only tracks when this value is > 0\r\n// We are not using a simple boolean because this value may need to be\r\n// incremented/decremented by nested usage of v-once (see below)\r\nlet shouldTrack = 1;\r\n/**\r\n * Block tracking sometimes needs to be disabled, for example during the\r\n * creation of a tree that needs to be cached by v-once. The compiler generates\r\n * code like this:\r\n *\r\n * ``` js\r\n * _cache[1] || (\r\n *   setBlockTracking(-1),\r\n *   _cache[1] = createVNode(...),\r\n *   setBlockTracking(1),\r\n *   _cache[1]\r\n * )\r\n * ```\r\n *\r\n * @private\r\n */\r\nfunction setBlockTracking(value) {\r\n    shouldTrack += value;\r\n}\r\n/**\r\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n * A block root keeps track of dynamic nodes within the block in the\r\n * `dynamicChildren` array.\r\n *\r\n * @private\r\n */\r\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\r\n    const vnode = createVNode(type, props, children, patchFlag, dynamicProps, true /* isBlock: prevent a block from tracking itself */);\r\n    // save current block children on the block vnode\r\n    vnode.dynamicChildren = currentBlock || EMPTY_ARR;\r\n    // close block\r\n    closeBlock();\r\n    // a block is always going to be patched, so track it as a child of its\r\n    // parent block\r\n    if (shouldTrack > 0 && currentBlock) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction isVNode(value) {\r\n    return value ? value.__v_isVNode === true : false;\r\n}\r\nfunction isSameVNodeType(n1, n2) {\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        n2.shapeFlag & 6 /* COMPONENT */ &&\r\n        hmrDirtyComponents.has(n2.type)) {\r\n        // HMR only: if the component has been hot-updated, force a reload.\r\n        return false;\r\n    }\r\n    return n1.type === n2.type && n1.key === n2.key;\r\n}\r\nlet vnodeArgsTransformer;\r\n/**\r\n * Internal API for registering an arguments transform for createVNode\r\n * used for creating stubs in the test-utils\r\n * It is *internal* but needs to be exposed for test-utils to pick up proper\r\n * typings\r\n */\r\nfunction transformVNodeArgs(transformer) {\r\n    vnodeArgsTransformer = transformer;\r\n}\r\nconst createVNodeWithArgsTransform = (...args) => {\r\n    return _createVNode(...(vnodeArgsTransformer\r\n        ? vnodeArgsTransformer(args, currentRenderingInstance)\r\n        : args));\r\n};\r\nconst InternalObjectKey = `__vInternal`;\r\nconst normalizeKey = ({ key }) => key != null ? key : null;\r\nconst normalizeRef = ({ ref }) => {\r\n    return (ref != null\r\n        ? isArray(ref)\r\n            ? ref\r\n            : { i: currentRenderingInstance, r: ref }\r\n        : null);\r\n};\r\nconst createVNode = ((process.env.NODE_ENV !== 'production')\r\n    ? createVNodeWithArgsTransform\r\n    : _createVNode);\r\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\r\n    if (!type || type === NULL_DYNAMIC_COMPONENT) {\r\n        if ((process.env.NODE_ENV !== 'production') && !type) {\r\n            warn(`Invalid vnode type when creating vnode: ${type}.`);\r\n        }\r\n        type = Comment;\r\n    }\r\n    if (isVNode(type)) {\r\n        // createVNode receiving an existing vnode. This happens in cases like\r\n        // <component :is=\"vnode\"/>\r\n        // #2078 make sure to merge refs during the clone instead of overwriting it\r\n        const cloned = cloneVNode(type, props, true /* mergeRef: true */);\r\n        if (children) {\r\n            normalizeChildren(cloned, children);\r\n        }\r\n        return cloned;\r\n    }\r\n    // class component normalization.\r\n    if (isClassComponent(type)) {\r\n        type = type.__vccOpts;\r\n    }\r\n    // class & style normalization.\r\n    if (props) {\r\n        // for reactive or proxy objects, we need to clone it to enable mutation.\r\n        if (isProxy(props) || InternalObjectKey in props) {\r\n            props = extend({}, props);\r\n        }\r\n        let { class: klass, style } = props;\r\n        if (klass && !isString(klass)) {\r\n            props.class = normalizeClass(klass);\r\n        }\r\n        if (isObject(style)) {\r\n            // reactive state objects need to be cloned since they are likely to be\r\n            // mutated\r\n            if (isProxy(style) && !isArray(style)) {\r\n                style = extend({}, style);\r\n            }\r\n            props.style = normalizeStyle(style);\r\n        }\r\n    }\r\n    // encode the vnode type information into a bitmap\r\n    const shapeFlag = isString(type)\r\n        ? 1 /* ELEMENT */\r\n        :  isSuspense(type)\r\n            ? 128 /* SUSPENSE */\r\n            : isTeleport(type)\r\n                ? 64 /* TELEPORT */\r\n                : isObject(type)\r\n                    ? 4 /* STATEFUL_COMPONENT */\r\n                    : isFunction(type)\r\n                        ? 2 /* FUNCTIONAL_COMPONENT */\r\n                        : 0;\r\n    if ((process.env.NODE_ENV !== 'production') && shapeFlag & 4 /* STATEFUL_COMPONENT */ && isProxy(type)) {\r\n        type = toRaw(type);\r\n        warn(`Vue received a Component which was made a reactive object. This can ` +\r\n            `lead to unnecessary performance overhead, and should be avoided by ` +\r\n            `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\r\n            `instead of \\`ref\\`.`, `\\nComponent that was made reactive: `, type);\r\n    }\r\n    const vnode = {\r\n        __v_isVNode: true,\r\n        [\"__v_skip\" /* SKIP */]: true,\r\n        type,\r\n        props,\r\n        key: props && normalizeKey(props),\r\n        ref: props && normalizeRef(props),\r\n        scopeId: currentScopeId,\r\n        children: null,\r\n        component: null,\r\n        suspense: null,\r\n        ssContent: null,\r\n        ssFallback: null,\r\n        dirs: null,\r\n        transition: null,\r\n        el: null,\r\n        anchor: null,\r\n        target: null,\r\n        targetAnchor: null,\r\n        staticCount: 0,\r\n        shapeFlag,\r\n        patchFlag,\r\n        dynamicProps,\r\n        dynamicChildren: null,\r\n        appContext: null\r\n    };\r\n    // validate key\r\n    if ((process.env.NODE_ENV !== 'production') && vnode.key !== vnode.key) {\r\n        warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type);\r\n    }\r\n    normalizeChildren(vnode, children);\r\n    // normalize suspense children\r\n    if ( shapeFlag & 128 /* SUSPENSE */) {\r\n        const { content, fallback } = normalizeSuspenseChildren(vnode);\r\n        vnode.ssContent = content;\r\n        vnode.ssFallback = fallback;\r\n    }\r\n    if (shouldTrack > 0 &&\r\n        // avoid a block node from tracking itself\r\n        !isBlockNode &&\r\n        // has current parent block\r\n        currentBlock &&\r\n        // presence of a patch flag indicates this node needs patching on updates.\r\n        // component nodes also should always be patched, because even if the\r\n        // component doesn't need to update, it needs to persist the instance on to\r\n        // the next vnode so that it can be properly unmounted later.\r\n        (patchFlag > 0 || shapeFlag & 6 /* COMPONENT */) &&\r\n        // the EVENTS flag is only for hydration and if it is the only flag, the\r\n        // vnode should not be considered dynamic due to handler caching.\r\n        patchFlag !== 32 /* HYDRATE_EVENTS */) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction cloneVNode(vnode, extraProps, mergeRef = false) {\r\n    // This is intentionally NOT using spread or extend to avoid the runtime\r\n    // key enumeration cost.\r\n    const { props, ref, patchFlag } = vnode;\r\n    const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;\r\n    return {\r\n        __v_isVNode: true,\r\n        [\"__v_skip\" /* SKIP */]: true,\r\n        type: vnode.type,\r\n        props: mergedProps,\r\n        key: mergedProps && normalizeKey(mergedProps),\r\n        ref: extraProps && extraProps.ref\r\n            ? // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\r\n                // if the vnode itself already has a ref, cloneVNode will need to merge\r\n                // the refs so the single vnode can be set on multiple refs\r\n                mergeRef && ref\r\n                    ? isArray(ref)\r\n                        ? ref.concat(normalizeRef(extraProps))\r\n                        : [ref, normalizeRef(extraProps)]\r\n                    : normalizeRef(extraProps)\r\n            : ref,\r\n        scopeId: vnode.scopeId,\r\n        children: vnode.children,\r\n        target: vnode.target,\r\n        targetAnchor: vnode.targetAnchor,\r\n        staticCount: vnode.staticCount,\r\n        shapeFlag: vnode.shapeFlag,\r\n        // if the vnode is cloned with extra props, we can no longer assume its\r\n        // existing patch flag to be reliable and need to add the FULL_PROPS flag.\r\n        // note: perserve flag for fragments since they use the flag for children\r\n        // fast paths only.\r\n        patchFlag: extraProps && vnode.type !== Fragment\r\n            ? patchFlag === -1 // hoisted node\r\n                ? 16 /* FULL_PROPS */\r\n                : patchFlag | 16 /* FULL_PROPS */\r\n            : patchFlag,\r\n        dynamicProps: vnode.dynamicProps,\r\n        dynamicChildren: vnode.dynamicChildren,\r\n        appContext: vnode.appContext,\r\n        dirs: vnode.dirs,\r\n        transition: vnode.transition,\r\n        // These should technically only be non-null on mounted VNodes. However,\r\n        // they *should* be copied for kept-alive vnodes. So we just always copy\r\n        // them since them being non-null during a mount doesn't affect the logic as\r\n        // they will simply be overwritten.\r\n        component: vnode.component,\r\n        suspense: vnode.suspense,\r\n        ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\r\n        ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\r\n        el: vnode.el,\r\n        anchor: vnode.anchor\r\n    };\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createTextVNode(text = ' ', flag = 0) {\r\n    return createVNode(Text, null, text, flag);\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createStaticVNode(content, numberOfNodes) {\r\n    // A static vnode can contain multiple stringified elements, and the number\r\n    // of elements is necessary for hydration.\r\n    const vnode = createVNode(Static, null, content);\r\n    vnode.staticCount = numberOfNodes;\r\n    return vnode;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createCommentVNode(text = '', \r\n// when used as the v-else branch, the comment node must be created as a\r\n// block to ensure correct updates.\r\nasBlock = false) {\r\n    return asBlock\r\n        ? (openBlock(), createBlock(Comment, null, text))\r\n        : createVNode(Comment, null, text);\r\n}\r\nfunction normalizeVNode(child) {\r\n    if (child == null || typeof child === 'boolean') {\r\n        // empty placeholder\r\n        return createVNode(Comment);\r\n    }\r\n    else if (isArray(child)) {\r\n        // fragment\r\n        return createVNode(Fragment, null, child);\r\n    }\r\n    else if (typeof child === 'object') {\r\n        // already vnode, this should be the most common since compiled templates\r\n        // always produce all-vnode children arrays\r\n        return child.el === null ? child : cloneVNode(child);\r\n    }\r\n    else {\r\n        // strings and numbers\r\n        return createVNode(Text, null, String(child));\r\n    }\r\n}\r\n// optimized normalization for template-compiled render fns\r\nfunction cloneIfMounted(child) {\r\n    return child.el === null ? child : cloneVNode(child);\r\n}\r\nfunction normalizeChildren(vnode, children) {\r\n    let type = 0;\r\n    const { shapeFlag } = vnode;\r\n    if (children == null) {\r\n        children = null;\r\n    }\r\n    else if (isArray(children)) {\r\n        type = 16 /* ARRAY_CHILDREN */;\r\n    }\r\n    else if (typeof children === 'object') {\r\n        if (shapeFlag & 1 /* ELEMENT */ || shapeFlag & 64 /* TELEPORT */) {\r\n            // Normalize slot to plain children for plain element and Teleport\r\n            const slot = children.default;\r\n            if (slot) {\r\n                // _c marker is added by withCtx() indicating this is a compiled slot\r\n                slot._c && setCompiledSlotRendering(1);\r\n                normalizeChildren(vnode, slot());\r\n                slot._c && setCompiledSlotRendering(-1);\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            type = 32 /* SLOTS_CHILDREN */;\r\n            const slotFlag = children._;\r\n            if (!slotFlag && !(InternalObjectKey in children)) {\r\n                children._ctx = currentRenderingInstance;\r\n            }\r\n            else if (slotFlag === 3 /* FORWARDED */ && currentRenderingInstance) {\r\n                // a child component receives forwarded slots from the parent.\r\n                // its slot type is determined by its parent's slot type.\r\n                if (currentRenderingInstance.vnode.patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n                    children._ = 2 /* DYNAMIC */;\r\n                    vnode.patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                }\r\n                else {\r\n                    children._ = 1 /* STABLE */;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(children)) {\r\n        children = { default: children, _ctx: currentRenderingInstance };\r\n        type = 32 /* SLOTS_CHILDREN */;\r\n    }\r\n    else {\r\n        children = String(children);\r\n        // force teleport children to array so it can be moved around\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type = 16 /* ARRAY_CHILDREN */;\r\n            children = [createTextVNode(children)];\r\n        }\r\n        else {\r\n            type = 8 /* TEXT_CHILDREN */;\r\n        }\r\n    }\r\n    vnode.children = children;\r\n    vnode.shapeFlag |= type;\r\n}\r\nfunction mergeProps(...args) {\r\n    const ret = extend({}, args[0]);\r\n    for (let i = 1; i < args.length; i++) {\r\n        const toMerge = args[i];\r\n        for (const key in toMerge) {\r\n            if (key === 'class') {\r\n                if (ret.class !== toMerge.class) {\r\n                    ret.class = normalizeClass([ret.class, toMerge.class]);\r\n                }\r\n            }\r\n            else if (key === 'style') {\r\n                ret.style = normalizeStyle([ret.style, toMerge.style]);\r\n            }\r\n            else if (isOn(key)) {\r\n                const existing = ret[key];\r\n                const incoming = toMerge[key];\r\n                if (existing !== incoming) {\r\n                    ret[key] = existing\r\n                        ? [].concat(existing, toMerge[key])\r\n                        : incoming;\r\n                }\r\n            }\r\n            else {\r\n                ret[key] = toMerge[key];\r\n            }\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nfunction initProps(instance, rawProps, isStateful, // result of bitwise flag comparison\r\nisSSR = false) {\r\n    const props = {};\r\n    const attrs = {};\r\n    def(attrs, InternalObjectKey, 1);\r\n    setFullProps(instance, rawProps, props, attrs);\r\n    // validation\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        validateProps(props, instance);\r\n    }\r\n    if (isStateful) {\r\n        // stateful\r\n        instance.props = isSSR ? props : shallowReactive(props);\r\n    }\r\n    else {\r\n        if (!instance.type.props) {\r\n            // functional w/ optional props, props === attrs\r\n            instance.props = attrs;\r\n        }\r\n        else {\r\n            // functional w/ declared props\r\n            instance.props = props;\r\n        }\r\n    }\r\n    instance.attrs = attrs;\r\n}\r\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\r\n    const { props, attrs, vnode: { patchFlag } } = instance;\r\n    const rawCurrentProps = toRaw(props);\r\n    const [options] = instance.propsOptions;\r\n    if (\r\n    // always force full diff if hmr is enabled\r\n    !((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) &&\r\n        (optimized || patchFlag > 0) &&\r\n        !(patchFlag & 16 /* FULL_PROPS */)) {\r\n        if (patchFlag & 8 /* PROPS */) {\r\n            // Compiler-generated props & no keys change, just set the updated\r\n            // the props.\r\n            const propsToUpdate = instance.vnode.dynamicProps;\r\n            for (let i = 0; i < propsToUpdate.length; i++) {\r\n                const key = propsToUpdate[i];\r\n                // PROPS flag guarantees rawProps to be non-null\r\n                const value = rawProps[key];\r\n                if (options) {\r\n                    // attr / props separation was done on init and will be consistent\r\n                    // in this code path, so just check if attrs have it.\r\n                    if (hasOwn(attrs, key)) {\r\n                        attrs[key] = value;\r\n                    }\r\n                    else {\r\n                        const camelizedKey = camelize(key);\r\n                        props[camelizedKey] = resolvePropValue(options, rawCurrentProps, camelizedKey, value, instance);\r\n                    }\r\n                }\r\n                else {\r\n                    attrs[key] = value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // full props update.\r\n        setFullProps(instance, rawProps, props, attrs);\r\n        // in case of dynamic props, check if we need to delete keys from\r\n        // the props object\r\n        let kebabKey;\r\n        for (const key in rawCurrentProps) {\r\n            if (!rawProps ||\r\n                // for camelCase\r\n                (!hasOwn(rawProps, key) &&\r\n                    // it's possible the original props was passed in as kebab-case\r\n                    // and converted to camelCase (#955)\r\n                    ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))) {\r\n                if (options) {\r\n                    if (rawPrevProps &&\r\n                        // for camelCase\r\n                        (rawPrevProps[key] !== undefined ||\r\n                            // for kebab-case\r\n                            rawPrevProps[kebabKey] !== undefined)) {\r\n                        props[key] = resolvePropValue(options, rawProps || EMPTY_OBJ, key, undefined, instance);\r\n                    }\r\n                }\r\n                else {\r\n                    delete props[key];\r\n                }\r\n            }\r\n        }\r\n        // in the case of functional component w/o props declaration, props and\r\n        // attrs point to the same object so it should already have been updated.\r\n        if (attrs !== rawCurrentProps) {\r\n            for (const key in attrs) {\r\n                if (!rawProps || !hasOwn(rawProps, key)) {\r\n                    delete attrs[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // trigger updates for $attrs in case it's used in component slots\r\n    trigger(instance, \"set\" /* SET */, '$attrs');\r\n    if ((process.env.NODE_ENV !== 'production') && rawProps) {\r\n        validateProps(props, instance);\r\n    }\r\n}\r\nfunction setFullProps(instance, rawProps, props, attrs) {\r\n    const [options, needCastKeys] = instance.propsOptions;\r\n    if (rawProps) {\r\n        for (const key in rawProps) {\r\n            const value = rawProps[key];\r\n            // key, ref are reserved and never passed down\r\n            if (isReservedProp(key)) {\r\n                continue;\r\n            }\r\n            // prop option names are camelized during normalization, so to support\r\n            // kebab -> camel conversion here we need to camelize the key.\r\n            let camelKey;\r\n            if (options && hasOwn(options, (camelKey = camelize(key)))) {\r\n                props[camelKey] = value;\r\n            }\r\n            else if (!isEmitListener(instance.emitsOptions, key)) {\r\n                // Any non-declared (either as a prop or an emitted event) props are put\r\n                // into a separate `attrs` object for spreading. Make sure to preserve\r\n                // original key casing\r\n                attrs[key] = value;\r\n            }\r\n        }\r\n    }\r\n    if (needCastKeys) {\r\n        const rawCurrentProps = toRaw(props);\r\n        for (let i = 0; i < needCastKeys.length; i++) {\r\n            const key = needCastKeys[i];\r\n            props[key] = resolvePropValue(options, rawCurrentProps, key, rawCurrentProps[key], instance);\r\n        }\r\n    }\r\n}\r\nfunction resolvePropValue(options, props, key, value, instance) {\r\n    const opt = options[key];\r\n    if (opt != null) {\r\n        const hasDefault = hasOwn(opt, 'default');\r\n        // default values\r\n        if (hasDefault && value === undefined) {\r\n            const defaultValue = opt.default;\r\n            if (opt.type !== Function && isFunction(defaultValue)) {\r\n                setCurrentInstance(instance);\r\n                value = defaultValue(props);\r\n                setCurrentInstance(null);\r\n            }\r\n            else {\r\n                value = defaultValue;\r\n            }\r\n        }\r\n        // boolean casting\r\n        if (opt[0 /* shouldCast */]) {\r\n            if (!hasOwn(props, key) && !hasDefault) {\r\n                value = false;\r\n            }\r\n            else if (opt[1 /* shouldCastTrue */] &&\r\n                (value === '' || value === hyphenate(key))) {\r\n                value = true;\r\n            }\r\n        }\r\n    }\r\n    return value;\r\n}\r\nfunction normalizePropsOptions(comp, appContext, asMixin = false) {\r\n    const appId = appContext.app ? appContext.app._uid : -1;\r\n    const cache = comp.__props || (comp.__props = {});\r\n    const cached = cache[appId];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    const raw = comp.props;\r\n    const normalized = {};\r\n    const needCastKeys = [];\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendProps = (raw) => {\r\n            hasExtends = true;\r\n            const [props, keys] = normalizePropsOptions(raw, appContext, true);\r\n            extend(normalized, props);\r\n            if (keys)\r\n                needCastKeys.push(...keys);\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendProps);\r\n        }\r\n        if (comp.extends) {\r\n            extendProps(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendProps);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        return (cache[appId] = EMPTY_ARR);\r\n    }\r\n    if (isArray(raw)) {\r\n        for (let i = 0; i < raw.length; i++) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isString(raw[i])) {\r\n                warn(`props must be strings when using array syntax.`, raw[i]);\r\n            }\r\n            const normalizedKey = camelize(raw[i]);\r\n            if (validatePropName(normalizedKey)) {\r\n                normalized[normalizedKey] = EMPTY_OBJ;\r\n            }\r\n        }\r\n    }\r\n    else if (raw) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isObject(raw)) {\r\n            warn(`invalid props options`, raw);\r\n        }\r\n        for (const key in raw) {\r\n            const normalizedKey = camelize(key);\r\n            if (validatePropName(normalizedKey)) {\r\n                const opt = raw[key];\r\n                const prop = (normalized[normalizedKey] =\r\n                    isArray(opt) || isFunction(opt) ? { type: opt } : opt);\r\n                if (prop) {\r\n                    const booleanIndex = getTypeIndex(Boolean, prop.type);\r\n                    const stringIndex = getTypeIndex(String, prop.type);\r\n                    prop[0 /* shouldCast */] = booleanIndex > -1;\r\n                    prop[1 /* shouldCastTrue */] =\r\n                        stringIndex < 0 || booleanIndex < stringIndex;\r\n                    // if the prop needs boolean casting or default value\r\n                    if (booleanIndex > -1 || hasOwn(prop, 'default')) {\r\n                        needCastKeys.push(normalizedKey);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return (cache[appId] = [normalized, needCastKeys]);\r\n}\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor) {\r\n    const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/);\r\n    return match ? match[1] : '';\r\n}\r\nfunction isSameType(a, b) {\r\n    return getType(a) === getType(b);\r\n}\r\nfunction getTypeIndex(type, expectedTypes) {\r\n    if (isArray(expectedTypes)) {\r\n        for (let i = 0, len = expectedTypes.length; i < len; i++) {\r\n            if (isSameType(expectedTypes[i], type)) {\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(expectedTypes)) {\r\n        return isSameType(expectedTypes, type) ? 0 : -1;\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProps(props, instance) {\r\n    const rawValues = toRaw(props);\r\n    const options = instance.propsOptions[0];\r\n    for (const key in options) {\r\n        let opt = options[key];\r\n        if (opt == null)\r\n            continue;\r\n        validateProp(key, rawValues[key], opt, !hasOwn(rawValues, key));\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validatePropName(key) {\r\n    if (key[0] !== '$') {\r\n        return true;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid prop name: \"${key}\" is a reserved property.`);\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProp(name, value, prop, isAbsent) {\r\n    const { type, required, validator } = prop;\r\n    // required!\r\n    if (required && isAbsent) {\r\n        warn('Missing required prop: \"' + name + '\"');\r\n        return;\r\n    }\r\n    // missing but optional\r\n    if (value == null && !prop.required) {\r\n        return;\r\n    }\r\n    // type check\r\n    if (type != null && type !== true) {\r\n        let isValid = false;\r\n        const types = isArray(type) ? type : [type];\r\n        const expectedTypes = [];\r\n        // value is valid as long as one of the specified types match\r\n        for (let i = 0; i < types.length && !isValid; i++) {\r\n            const { valid, expectedType } = assertType(value, types[i]);\r\n            expectedTypes.push(expectedType || '');\r\n            isValid = valid;\r\n        }\r\n        if (!isValid) {\r\n            warn(getInvalidTypeMessage(name, value, expectedTypes));\r\n            return;\r\n        }\r\n    }\r\n    // custom validator\r\n    if (validator && !validator(value)) {\r\n        warn('Invalid prop: custom validator check failed for prop \"' + name + '\".');\r\n    }\r\n}\r\nconst isSimpleType = /*#__PURE__*/ makeMap('String,Number,Boolean,Function,Symbol');\r\n/**\r\n * dev only\r\n */\r\nfunction assertType(value, type) {\r\n    let valid;\r\n    const expectedType = getType(type);\r\n    if (isSimpleType(expectedType)) {\r\n        const t = typeof value;\r\n        valid = t === expectedType.toLowerCase();\r\n        // for primitive wrapper objects\r\n        if (!valid && t === 'object') {\r\n            valid = value instanceof type;\r\n        }\r\n    }\r\n    else if (expectedType === 'Object') {\r\n        valid = isObject(value);\r\n    }\r\n    else if (expectedType === 'Array') {\r\n        valid = isArray(value);\r\n    }\r\n    else {\r\n        valid = value instanceof type;\r\n    }\r\n    return {\r\n        valid,\r\n        expectedType\r\n    };\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\r\n    let message = `Invalid prop: type check failed for prop \"${name}\".` +\r\n        ` Expected ${expectedTypes.map(capitalize).join(', ')}`;\r\n    const expectedType = expectedTypes[0];\r\n    const receivedType = toRawType(value);\r\n    const expectedValue = styleValue(value, expectedType);\r\n    const receivedValue = styleValue(value, receivedType);\r\n    // check if we need to specify expected value\r\n    if (expectedTypes.length === 1 &&\r\n        isExplicable(expectedType) &&\r\n        !isBoolean(expectedType, receivedType)) {\r\n        message += ` with value ${expectedValue}`;\r\n    }\r\n    message += `, got ${receivedType} `;\r\n    // check if we need to specify received value\r\n    if (isExplicable(receivedType)) {\r\n        message += `with value ${receivedValue}.`;\r\n    }\r\n    return message;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction styleValue(value, type) {\r\n    if (type === 'String') {\r\n        return `\"${value}\"`;\r\n    }\r\n    else if (type === 'Number') {\r\n        return `${Number(value)}`;\r\n    }\r\n    else {\r\n        return `${value}`;\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isExplicable(type) {\r\n    const explicitTypes = ['string', 'number', 'boolean'];\r\n    return explicitTypes.some(elem => type.toLowerCase() === elem);\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isBoolean(...args) {\r\n    return args.some(elem => elem.toLowerCase() === 'boolean');\r\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\r\n    if (target) {\r\n        const hooks = target[type] || (target[type] = []);\r\n        // cache the error handling wrapper for injected hooks so the same hook\r\n        // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\r\n        // handling\".\r\n        const wrappedHook = hook.__weh ||\r\n            (hook.__weh = (...args) => {\r\n                if (target.isUnmounted) {\r\n                    return;\r\n                }\r\n                // disable tracking inside all lifecycle hooks\r\n                // since they can potentially be called inside effects.\r\n                pauseTracking();\r\n                // Set currentInstance during hook invocation.\r\n                // This assumes the hook does not synchronously trigger other hooks, which\r\n                // can only be false when the user does something really funky.\r\n                setCurrentInstance(target);\r\n                const res = callWithAsyncErrorHandling(hook, target, type, args);\r\n                setCurrentInstance(null);\r\n                resetTracking();\r\n                return res;\r\n            });\r\n        if (prepend) {\r\n            hooks.unshift(wrappedHook);\r\n        }\r\n        else {\r\n            hooks.push(wrappedHook);\r\n        }\r\n        return wrappedHook;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        const apiName = `on${capitalize(ErrorTypeStrings[type].replace(/ hook$/, ''))}`;\r\n        warn(`${apiName} is called when there is no active component instance to be ` +\r\n            `associated with. ` +\r\n            `Lifecycle injection APIs can only be used during execution of setup().` +\r\n            ( ` If you are using async setup(), make sure to register lifecycle ` +\r\n                    `hooks before the first await statement.`\r\n                ));\r\n    }\r\n}\r\nconst createHook = (lifecycle) => (hook, target = currentInstance) => \r\n// post-create lifecycle registrations are noops during SSR\r\n!isInSSRComponentSetup && injectHook(lifecycle, hook, target);\r\nconst onBeforeMount = createHook(\"bm\" /* BEFORE_MOUNT */);\r\nconst onMounted = createHook(\"m\" /* MOUNTED */);\r\nconst onBeforeUpdate = createHook(\"bu\" /* BEFORE_UPDATE */);\r\nconst onUpdated = createHook(\"u\" /* UPDATED */);\r\nconst onBeforeUnmount = createHook(\"bum\" /* BEFORE_UNMOUNT */);\r\nconst onUnmounted = createHook(\"um\" /* UNMOUNTED */);\r\nconst onRenderTriggered = createHook(\"rtg\" /* RENDER_TRIGGERED */);\r\nconst onRenderTracked = createHook(\"rtc\" /* RENDER_TRACKED */);\r\nconst onErrorCaptured = (hook, target = currentInstance) => {\r\n    injectHook(\"ec\" /* ERROR_CAPTURED */, hook, target);\r\n};\n\nfunction useTransitionState() {\r\n    const state = {\r\n        isMounted: false,\r\n        isLeaving: false,\r\n        isUnmounting: false,\r\n        leavingVNodes: new Map()\r\n    };\r\n    onMounted(() => {\r\n        state.isMounted = true;\r\n    });\r\n    onBeforeUnmount(() => {\r\n        state.isUnmounting = true;\r\n    });\r\n    return state;\r\n}\r\nconst TransitionHookValidator = [Function, Array];\r\nconst BaseTransitionImpl = {\r\n    name: `BaseTransition`,\r\n    props: {\r\n        mode: String,\r\n        appear: Boolean,\r\n        persisted: Boolean,\r\n        // enter\r\n        onBeforeEnter: TransitionHookValidator,\r\n        onEnter: TransitionHookValidator,\r\n        onAfterEnter: TransitionHookValidator,\r\n        onEnterCancelled: TransitionHookValidator,\r\n        // leave\r\n        onBeforeLeave: TransitionHookValidator,\r\n        onLeave: TransitionHookValidator,\r\n        onAfterLeave: TransitionHookValidator,\r\n        onLeaveCancelled: TransitionHookValidator,\r\n        // appear\r\n        onBeforeAppear: TransitionHookValidator,\r\n        onAppear: TransitionHookValidator,\r\n        onAfterAppear: TransitionHookValidator,\r\n        onAppearCancelled: TransitionHookValidator\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevTransitionKey;\r\n        return () => {\r\n            const children = slots.default && getTransitionRawChildren(slots.default(), true);\r\n            if (!children || !children.length) {\r\n                return;\r\n            }\r\n            // warn multiple elements\r\n            if ((process.env.NODE_ENV !== 'production') && children.length > 1) {\r\n                warn('<transition> can only be used on a single element or component. Use ' +\r\n                    '<transition-group> for lists.');\r\n            }\r\n            // there's no need to track reactivity for these props so use the raw\r\n            // props for a bit better perf\r\n            const rawProps = toRaw(props);\r\n            const { mode } = rawProps;\r\n            // check mode\r\n            if ((process.env.NODE_ENV !== 'production') && mode && !['in-out', 'out-in', 'default'].includes(mode)) {\r\n                warn(`invalid <transition> mode: ${mode}`);\r\n            }\r\n            // at this point children has a guaranteed length of 1.\r\n            const child = children[0];\r\n            if (state.isLeaving) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            // in the case of <transition><keep-alive/></transition>, we need to\r\n            // compare the type of the kept-alive children.\r\n            const innerChild = getKeepAliveChild(child);\r\n            if (!innerChild) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            const enterHooks = resolveTransitionHooks(innerChild, rawProps, state, instance);\r\n            setTransitionHooks(innerChild, enterHooks);\r\n            const oldChild = instance.subTree;\r\n            const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\r\n            let transitionKeyChanged = false;\r\n            const { getTransitionKey } = innerChild.type;\r\n            if (getTransitionKey) {\r\n                const key = getTransitionKey();\r\n                if (prevTransitionKey === undefined) {\r\n                    prevTransitionKey = key;\r\n                }\r\n                else if (key !== prevTransitionKey) {\r\n                    prevTransitionKey = key;\r\n                    transitionKeyChanged = true;\r\n                }\r\n            }\r\n            // handle mode\r\n            if (oldInnerChild &&\r\n                oldInnerChild.type !== Comment &&\r\n                (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)) {\r\n                const leavingHooks = resolveTransitionHooks(oldInnerChild, rawProps, state, instance);\r\n                // update old tree's hooks in case of dynamic transition\r\n                setTransitionHooks(oldInnerChild, leavingHooks);\r\n                // switching between different views\r\n                if (mode === 'out-in') {\r\n                    state.isLeaving = true;\r\n                    // return placeholder node and queue update when leave finishes\r\n                    leavingHooks.afterLeave = () => {\r\n                        state.isLeaving = false;\r\n                        instance.update();\r\n                    };\r\n                    return emptyPlaceholder(child);\r\n                }\r\n                else if (mode === 'in-out') {\r\n                    leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\r\n                        const leavingVNodesCache = getLeavingNodesForType(state, oldInnerChild);\r\n                        leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\r\n                        // early removal callback\r\n                        el._leaveCb = () => {\r\n                            earlyRemove();\r\n                            el._leaveCb = undefined;\r\n                            delete enterHooks.delayedLeave;\r\n                        };\r\n                        enterHooks.delayedLeave = delayedLeave;\r\n                    };\r\n                }\r\n            }\r\n            return child;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst BaseTransition = BaseTransitionImpl;\r\nfunction getLeavingNodesForType(state, vnode) {\r\n    const { leavingVNodes } = state;\r\n    let leavingVNodesCache = leavingVNodes.get(vnode.type);\r\n    if (!leavingVNodesCache) {\r\n        leavingVNodesCache = Object.create(null);\r\n        leavingVNodes.set(vnode.type, leavingVNodesCache);\r\n    }\r\n    return leavingVNodesCache;\r\n}\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nfunction resolveTransitionHooks(vnode, props, state, instance) {\r\n    const { appear, mode, persisted = false, onBeforeEnter, onEnter, onAfterEnter, onEnterCancelled, onBeforeLeave, onLeave, onAfterLeave, onLeaveCancelled, onBeforeAppear, onAppear, onAfterAppear, onAppearCancelled } = props;\r\n    const key = String(vnode.key);\r\n    const leavingVNodesCache = getLeavingNodesForType(state, vnode);\r\n    const callHook = (hook, args) => {\r\n        hook &&\r\n            callWithAsyncErrorHandling(hook, instance, 9 /* TRANSITION_HOOK */, args);\r\n    };\r\n    const hooks = {\r\n        mode,\r\n        persisted,\r\n        beforeEnter(el) {\r\n            let hook = onBeforeEnter;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onBeforeAppear || onBeforeEnter;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            // for same element (v-show)\r\n            if (el._leaveCb) {\r\n                el._leaveCb(true /* cancelled */);\r\n            }\r\n            // for toggled element with same key (v-if)\r\n            const leavingVNode = leavingVNodesCache[key];\r\n            if (leavingVNode &&\r\n                isSameVNodeType(vnode, leavingVNode) &&\r\n                leavingVNode.el._leaveCb) {\r\n                // force early removal (not cancelled)\r\n                leavingVNode.el._leaveCb();\r\n            }\r\n            callHook(hook, [el]);\r\n        },\r\n        enter(el) {\r\n            let hook = onEnter;\r\n            let afterHook = onAfterEnter;\r\n            let cancelHook = onEnterCancelled;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onAppear || onEnter;\r\n                    afterHook = onAfterAppear || onAfterEnter;\r\n                    cancelHook = onAppearCancelled || onEnterCancelled;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            let called = false;\r\n            const done = (el._enterCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                if (cancelled) {\r\n                    callHook(cancelHook, [el]);\r\n                }\r\n                else {\r\n                    callHook(afterHook, [el]);\r\n                }\r\n                if (hooks.delayedLeave) {\r\n                    hooks.delayedLeave();\r\n                }\r\n                el._enterCb = undefined;\r\n            });\r\n            if (hook) {\r\n                hook(el, done);\r\n                if (hook.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        leave(el, remove) {\r\n            const key = String(vnode.key);\r\n            if (el._enterCb) {\r\n                el._enterCb(true /* cancelled */);\r\n            }\r\n            if (state.isUnmounting) {\r\n                return remove();\r\n            }\r\n            callHook(onBeforeLeave, [el]);\r\n            let called = false;\r\n            const done = (el._leaveCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                remove();\r\n                if (cancelled) {\r\n                    callHook(onLeaveCancelled, [el]);\r\n                }\r\n                else {\r\n                    callHook(onAfterLeave, [el]);\r\n                }\r\n                el._leaveCb = undefined;\r\n                if (leavingVNodesCache[key] === vnode) {\r\n                    delete leavingVNodesCache[key];\r\n                }\r\n            });\r\n            leavingVNodesCache[key] = vnode;\r\n            if (onLeave) {\r\n                onLeave(el, done);\r\n                if (onLeave.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        clone(vnode) {\r\n            return resolveTransitionHooks(vnode, props, state, instance);\r\n        }\r\n    };\r\n    return hooks;\r\n}\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode) {\r\n    if (isKeepAlive(vnode)) {\r\n        vnode = cloneVNode(vnode);\r\n        vnode.children = null;\r\n        return vnode;\r\n    }\r\n}\r\nfunction getKeepAliveChild(vnode) {\r\n    return isKeepAlive(vnode)\r\n        ? vnode.children\r\n            ? vnode.children[0]\r\n            : undefined\r\n        : vnode;\r\n}\r\nfunction setTransitionHooks(vnode, hooks) {\r\n    if (vnode.shapeFlag & 6 /* COMPONENT */ && vnode.component) {\r\n        setTransitionHooks(vnode.component.subTree, hooks);\r\n    }\r\n    else if ( vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        vnode.ssContent.transition = hooks.clone(vnode.ssContent);\r\n        vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);\r\n    }\r\n    else {\r\n        vnode.transition = hooks;\r\n    }\r\n}\r\nfunction getTransitionRawChildren(children, keepComment = false) {\r\n    let ret = [];\r\n    let keyedFragmentCount = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // handle fragment children case, e.g. v-for\r\n        if (child.type === Fragment) {\r\n            if (child.patchFlag & 128 /* KEYED_FRAGMENT */)\r\n                keyedFragmentCount++;\r\n            ret = ret.concat(getTransitionRawChildren(child.children, keepComment));\r\n        }\r\n        // comment placeholders should be skipped, e.g. v-if\r\n        else if (keepComment || child.type !== Comment) {\r\n            ret.push(child);\r\n        }\r\n    }\r\n    // #1126 if a transition children list contains multiple sub fragments, these\r\n    // fragments will be merged into a flat children array. Since each v-for\r\n    // fragment may contain different static bindings inside, we need to de-top\r\n    // these children to force full diffs to ensure correct behavior.\r\n    if (keyedFragmentCount > 1) {\r\n        for (let i = 0; i < ret.length; i++) {\r\n            ret[i].patchFlag = -2 /* BAIL */;\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\r\nconst KeepAliveImpl = {\r\n    name: `KeepAlive`,\r\n    // Marker for special handling inside the renderer. We are not using a ===\r\n    // check directly on KeepAlive in the renderer, because importing it directly\r\n    // would prevent it from being tree-shaken.\r\n    __isKeepAlive: true,\r\n    inheritRef: true,\r\n    props: {\r\n        include: [String, RegExp, Array],\r\n        exclude: [String, RegExp, Array],\r\n        max: [String, Number]\r\n    },\r\n    setup(props, { slots }) {\r\n        const cache = new Map();\r\n        const keys = new Set();\r\n        let current = null;\r\n        const instance = getCurrentInstance();\r\n        const parentSuspense = instance.suspense;\r\n        // KeepAlive communicates with the instantiated renderer via the\r\n        // ctx where the renderer passes in its internals,\r\n        // and the KeepAlive instance exposes activate/deactivate implementations.\r\n        // The whole point of this is to avoid importing KeepAlive directly in the\r\n        // renderer to facilitate tree-shaking.\r\n        const sharedContext = instance.ctx;\r\n        const { renderer: { p: patch, m: move, um: _unmount, o: { createElement } } } = sharedContext;\r\n        const storageContainer = createElement('div');\r\n        sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\r\n            const instance = vnode.component;\r\n            move(vnode, container, anchor, 0 /* ENTER */, parentSuspense);\r\n            // in case props have changed\r\n            patch(instance.vnode, vnode, container, anchor, instance, parentSuspense, isSVG, optimized);\r\n            queuePostRenderEffect(() => {\r\n                instance.isDeactivated = false;\r\n                if (instance.a) {\r\n                    invokeArrayFns(instance.a);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeMounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n            }, parentSuspense);\r\n        };\r\n        sharedContext.deactivate = (vnode) => {\r\n            const instance = vnode.component;\r\n            move(vnode, storageContainer, null, 1 /* LEAVE */, parentSuspense);\r\n            queuePostRenderEffect(() => {\r\n                if (instance.da) {\r\n                    invokeArrayFns(instance.da);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n                instance.isDeactivated = true;\r\n            }, parentSuspense);\r\n        };\r\n        function unmount(vnode) {\r\n            // reset the shapeFlag so it can be properly unmounted\r\n            resetShapeFlag(vnode);\r\n            _unmount(vnode, instance, parentSuspense);\r\n        }\r\n        function pruneCache(filter) {\r\n            cache.forEach((vnode, key) => {\r\n                const name = getName(vnode.type);\r\n                if (name && (!filter || !filter(name))) {\r\n                    pruneCacheEntry(key);\r\n                }\r\n            });\r\n        }\r\n        function pruneCacheEntry(key) {\r\n            const cached = cache.get(key);\r\n            if (!current || cached.type !== current.type) {\r\n                unmount(cached);\r\n            }\r\n            else if (current) {\r\n                // current active instance should no longer be kept-alive.\r\n                // we can't unmount it now but it might be later, so reset its flag now.\r\n                resetShapeFlag(current);\r\n            }\r\n            cache.delete(key);\r\n            keys.delete(key);\r\n        }\r\n        // prune cache on include/exclude prop change\r\n        watch(() => [props.include, props.exclude], ([include, exclude]) => {\r\n            include && pruneCache(name => matches(include, name));\r\n            exclude && pruneCache(name => !matches(exclude, name));\r\n        }, \r\n        // prune post-render after `current` has been updated\r\n        { flush: 'post' });\r\n        // cache sub tree after render\r\n        let pendingCacheKey = null;\r\n        const cacheSubtree = () => {\r\n            // fix #1621, the pendingCacheKey could be 0\r\n            if (pendingCacheKey != null) {\r\n                cache.set(pendingCacheKey, getInnerChild(instance.subTree));\r\n            }\r\n        };\r\n        onMounted(cacheSubtree);\r\n        onUpdated(cacheSubtree);\r\n        onBeforeUnmount(() => {\r\n            cache.forEach(cached => {\r\n                const { subTree, suspense } = instance;\r\n                const vnode = getInnerChild(subTree);\r\n                if (cached.type === vnode.type) {\r\n                    // current instance will be unmounted as part of keep-alive's unmount\r\n                    resetShapeFlag(vnode);\r\n                    // but invoke its deactivated hook here\r\n                    const da = vnode.component.da;\r\n                    da && queuePostRenderEffect(da, suspense);\r\n                    return;\r\n                }\r\n                unmount(cached);\r\n            });\r\n        });\r\n        return () => {\r\n            pendingCacheKey = null;\r\n            if (!slots.default) {\r\n                return null;\r\n            }\r\n            const children = slots.default();\r\n            const rawVNode = children[0];\r\n            if (children.length > 1) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`KeepAlive should contain exactly one component child.`);\r\n                }\r\n                current = null;\r\n                return children;\r\n            }\r\n            else if (!isVNode(rawVNode) ||\r\n                (!(rawVNode.shapeFlag & 4 /* STATEFUL_COMPONENT */) &&\r\n                    !(rawVNode.shapeFlag & 128 /* SUSPENSE */))) {\r\n                current = null;\r\n                return rawVNode;\r\n            }\r\n            let vnode = getInnerChild(rawVNode);\r\n            const comp = vnode.type;\r\n            const name = getName(comp);\r\n            const { include, exclude, max } = props;\r\n            if ((include && (!name || !matches(include, name))) ||\r\n                (exclude && name && matches(exclude, name))) {\r\n                current = vnode;\r\n                return rawVNode;\r\n            }\r\n            const key = vnode.key == null ? comp : vnode.key;\r\n            const cachedVNode = cache.get(key);\r\n            // clone vnode if it's reused because we are going to mutate it\r\n            if (vnode.el) {\r\n                vnode = cloneVNode(vnode);\r\n                if (rawVNode.shapeFlag & 128 /* SUSPENSE */) {\r\n                    rawVNode.ssContent = vnode;\r\n                }\r\n            }\r\n            // #1513 it's possible for the returned vnode to be cloned due to attr\r\n            // fallthrough or scopeId, so the vnode here may not be the final vnode\r\n            // that is mounted. Instead of caching it directly, we store the pending\r\n            // key and cache `instance.subTree` (the normalized vnode) in\r\n            // beforeMount/beforeUpdate hooks.\r\n            pendingCacheKey = key;\r\n            if (cachedVNode) {\r\n                // copy over mounted state\r\n                vnode.el = cachedVNode.el;\r\n                vnode.component = cachedVNode.component;\r\n                if (vnode.transition) {\r\n                    // recursively update transition hooks on subTree\r\n                    setTransitionHooks(vnode, vnode.transition);\r\n                }\r\n                // avoid vnode being mounted as fresh\r\n                vnode.shapeFlag |= 512 /* COMPONENT_KEPT_ALIVE */;\r\n                // make this key the freshest\r\n                keys.delete(key);\r\n                keys.add(key);\r\n            }\r\n            else {\r\n                keys.add(key);\r\n                // prune oldest entry\r\n                if (max && keys.size > parseInt(max, 10)) {\r\n                    pruneCacheEntry(keys.values().next().value);\r\n                }\r\n            }\r\n            // avoid vnode being unmounted\r\n            vnode.shapeFlag |= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n            current = vnode;\r\n            return rawVNode;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst KeepAlive = KeepAliveImpl;\r\nfunction getName(comp) {\r\n    return comp.displayName || comp.name;\r\n}\r\nfunction matches(pattern, name) {\r\n    if (isArray(pattern)) {\r\n        return pattern.some((p) => matches(p, name));\r\n    }\r\n    else if (isString(pattern)) {\r\n        return pattern.split(',').indexOf(name) > -1;\r\n    }\r\n    else if (pattern.test) {\r\n        return pattern.test(name);\r\n    }\r\n    /* istanbul ignore next */\r\n    return false;\r\n}\r\nfunction onActivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"a\" /* ACTIVATED */, target);\r\n}\r\nfunction onDeactivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"da\" /* DEACTIVATED */, target);\r\n}\r\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\r\n    // cache the deactivate branch check wrapper for injected hooks so the same\r\n    // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\r\n    // deactivation check\".\r\n    const wrappedHook = hook.__wdc ||\r\n        (hook.__wdc = () => {\r\n            // only fire the hook if the target instance is NOT in a deactivated branch.\r\n            let current = target;\r\n            while (current) {\r\n                if (current.isDeactivated) {\r\n                    return;\r\n                }\r\n                current = current.parent;\r\n            }\r\n            hook();\r\n        });\r\n    injectHook(type, wrappedHook, target);\r\n    // In addition to registering it on the target instance, we walk up the parent\r\n    // chain and register it on all ancestor instances that are keep-alive roots.\r\n    // This avoids the need to walk the entire component tree when invoking these\r\n    // hooks, and more importantly, avoids the need to track child components in\r\n    // arrays.\r\n    if (target) {\r\n        let current = target.parent;\r\n        while (current && current.parent) {\r\n            if (isKeepAlive(current.parent.vnode)) {\r\n                injectToKeepAliveRoot(wrappedHook, type, target, current);\r\n            }\r\n            current = current.parent;\r\n        }\r\n    }\r\n}\r\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\r\n    // injectHook wraps the original for error handling, so make sure to remove\r\n    // the wrapped version.\r\n    const injected = injectHook(type, hook, keepAliveRoot, true /* prepend */);\r\n    onUnmounted(() => {\r\n        remove(keepAliveRoot[type], injected);\r\n    }, target);\r\n}\r\nfunction resetShapeFlag(vnode) {\r\n    let shapeFlag = vnode.shapeFlag;\r\n    if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n        shapeFlag -= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n    }\r\n    if (shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n        shapeFlag -= 512 /* COMPONENT_KEPT_ALIVE */;\r\n    }\r\n    vnode.shapeFlag = shapeFlag;\r\n}\r\nfunction getInnerChild(vnode) {\r\n    return vnode.shapeFlag & 128 /* SUSPENSE */ ? vnode.ssContent : vnode;\r\n}\n\nconst isInternalKey = (key) => key[0] === '_' || key === '$stable';\r\nconst normalizeSlotValue = (value) => isArray(value)\r\n    ? value.map(normalizeVNode)\r\n    : [normalizeVNode(value)];\r\nconst normalizeSlot = (key, rawSlot, ctx) => withCtx((props) => {\r\n    if ((process.env.NODE_ENV !== 'production') && currentInstance) {\r\n        warn(`Slot \"${key}\" invoked outside of the render function: ` +\r\n            `this will not track dependencies used in the slot. ` +\r\n            `Invoke the slot function inside the render function instead.`);\r\n    }\r\n    return normalizeSlotValue(rawSlot(props));\r\n}, ctx);\r\nconst normalizeObjectSlots = (rawSlots, slots) => {\r\n    const ctx = rawSlots._ctx;\r\n    for (const key in rawSlots) {\r\n        if (isInternalKey(key))\r\n            continue;\r\n        const value = rawSlots[key];\r\n        if (isFunction(value)) {\r\n            slots[key] = normalizeSlot(key, value, ctx);\r\n        }\r\n        else if (value != null) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Non-function value encountered for slot \"${key}\". ` +\r\n                    `Prefer function slots for better performance.`);\r\n            }\r\n            const normalized = normalizeSlotValue(value);\r\n            slots[key] = () => normalized;\r\n        }\r\n    }\r\n};\r\nconst normalizeVNodeSlots = (instance, children) => {\r\n    if ((process.env.NODE_ENV !== 'production') && !isKeepAlive(instance.vnode)) {\r\n        warn(`Non-function value encountered for default slot. ` +\r\n            `Prefer function slots for better performance.`);\r\n    }\r\n    const normalized = normalizeSlotValue(children);\r\n    instance.slots.default = () => normalized;\r\n};\r\nconst initSlots = (instance, children) => {\r\n    if (instance.vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            instance.slots = children;\r\n            // make compiler marker non-enumerable\r\n            def(children, '_', type);\r\n        }\r\n        else {\r\n            normalizeObjectSlots(children, (instance.slots = {}));\r\n        }\r\n    }\r\n    else {\r\n        instance.slots = {};\r\n        if (children) {\r\n            normalizeVNodeSlots(instance, children);\r\n        }\r\n    }\r\n    def(instance.slots, InternalObjectKey, 1);\r\n};\r\nconst updateSlots = (instance, children) => {\r\n    const { vnode, slots } = instance;\r\n    let needDeletionCheck = true;\r\n    let deletionComparisonTarget = EMPTY_OBJ;\r\n    if (vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            // compiled slots.\r\n            if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n                // Parent was HMR updated so slot content may have changed.\r\n                // force update slots and mark instance for hmr as well\r\n                extend(slots, children);\r\n            }\r\n            else if (type === 1 /* STABLE */) {\r\n                // compiled AND stable.\r\n                // no need to update, and skip stale slots removal.\r\n                needDeletionCheck = false;\r\n            }\r\n            else {\r\n                // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\r\n                // normalization.\r\n                extend(slots, children);\r\n            }\r\n        }\r\n        else {\r\n            needDeletionCheck = !children.$stable;\r\n            normalizeObjectSlots(children, slots);\r\n        }\r\n        deletionComparisonTarget = children;\r\n    }\r\n    else if (children) {\r\n        // non slot object children (direct value) passed to a component\r\n        normalizeVNodeSlots(instance, children);\r\n        deletionComparisonTarget = { default: 1 };\r\n    }\r\n    // delete stale slots\r\n    if (needDeletionCheck) {\r\n        for (const key in slots) {\r\n            if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\r\n                delete slots[key];\r\n            }\r\n        }\r\n    }\r\n};\n\n/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\r\nconst isBuiltInDirective = /*#__PURE__*/ makeMap('bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text');\r\nfunction validateDirectiveName(name) {\r\n    if (isBuiltInDirective(name)) {\r\n        warn('Do not use built-in directive ids as custom directive id: ' + name);\r\n    }\r\n}\r\n/**\r\n * Adds directives to a VNode.\r\n */\r\nfunction withDirectives(vnode, directives) {\r\n    const internalInstance = currentRenderingInstance;\r\n    if (internalInstance === null) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`withDirectives can only be used inside render functions.`);\r\n        return vnode;\r\n    }\r\n    const instance = internalInstance.proxy;\r\n    const bindings = vnode.dirs || (vnode.dirs = []);\r\n    for (let i = 0; i < directives.length; i++) {\r\n        let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i];\r\n        if (isFunction(dir)) {\r\n            dir = {\r\n                mounted: dir,\r\n                updated: dir\r\n            };\r\n        }\r\n        bindings.push({\r\n            dir,\r\n            instance,\r\n            value,\r\n            oldValue: void 0,\r\n            arg,\r\n            modifiers\r\n        });\r\n    }\r\n    return vnode;\r\n}\r\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\r\n    const bindings = vnode.dirs;\r\n    const oldBindings = prevVNode && prevVNode.dirs;\r\n    for (let i = 0; i < bindings.length; i++) {\r\n        const binding = bindings[i];\r\n        if (oldBindings) {\r\n            binding.oldValue = oldBindings[i].value;\r\n        }\r\n        const hook = binding.dir[name];\r\n        if (hook) {\r\n            callWithAsyncErrorHandling(hook, instance, 8 /* DIRECTIVE_HOOK */, [\r\n                vnode.el,\r\n                binding,\r\n                vnode,\r\n                prevVNode\r\n            ]);\r\n        }\r\n    }\r\n}\n\nfunction createAppContext() {\r\n    return {\r\n        app: null,\r\n        config: {\r\n            isNativeTag: NO,\r\n            performance: false,\r\n            globalProperties: {},\r\n            optionMergeStrategies: {},\r\n            isCustomElement: NO,\r\n            errorHandler: undefined,\r\n            warnHandler: undefined\r\n        },\r\n        mixins: [],\r\n        components: {},\r\n        directives: {},\r\n        provides: Object.create(null)\r\n    };\r\n}\r\nlet uid = 0;\r\nfunction createAppAPI(render, hydrate) {\r\n    return function createApp(rootComponent, rootProps = null) {\r\n        if (rootProps != null && !isObject(rootProps)) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`root props passed to app.mount() must be an object.`);\r\n            rootProps = null;\r\n        }\r\n        const context = createAppContext();\r\n        const installedPlugins = new Set();\r\n        let isMounted = false;\r\n        const app = (context.app = {\r\n            _uid: uid++,\r\n            _component: rootComponent,\r\n            _props: rootProps,\r\n            _container: null,\r\n            _context: context,\r\n            version,\r\n            get config() {\r\n                return context.config;\r\n            },\r\n            set config(v) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`app.config cannot be replaced. Modify individual options instead.`);\r\n                }\r\n            },\r\n            use(plugin, ...options) {\r\n                if (installedPlugins.has(plugin)) {\r\n                    (process.env.NODE_ENV !== 'production') && warn(`Plugin has already been applied to target app.`);\r\n                }\r\n                else if (plugin && isFunction(plugin.install)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin.install(app, ...options);\r\n                }\r\n                else if (isFunction(plugin)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin(app, ...options);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`A plugin must either be a function or an object with an \"install\" ` +\r\n                        `function.`);\r\n                }\r\n                return app;\r\n            },\r\n            mixin(mixin) {\r\n                if (__VUE_OPTIONS_API__) {\r\n                    if (!context.mixins.includes(mixin)) {\r\n                        context.mixins.push(mixin);\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Mixin has already been applied to target app' +\r\n                            (mixin.name ? `: ${mixin.name}` : ''));\r\n                    }\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Mixins are only available in builds supporting Options API');\r\n                }\r\n                return app;\r\n            },\r\n            component(name, component) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateComponentName(name, context.config);\r\n                }\r\n                if (!component) {\r\n                    return context.components[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.components[name]) {\r\n                    warn(`Component \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.components[name] = component;\r\n                return app;\r\n            },\r\n            directive(name, directive) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateDirectiveName(name);\r\n                }\r\n                if (!directive) {\r\n                    return context.directives[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.directives[name]) {\r\n                    warn(`Directive \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.directives[name] = directive;\r\n                return app;\r\n            },\r\n            mount(rootContainer, isHydrate) {\r\n                if (!isMounted) {\r\n                    const vnode = createVNode(rootComponent, rootProps);\r\n                    // store app context on the root VNode.\r\n                    // this will be set on the root instance on initial mount.\r\n                    vnode.appContext = context;\r\n                    // HMR root reload\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        context.reload = () => {\r\n                            render(cloneVNode(vnode), rootContainer);\r\n                        };\r\n                    }\r\n                    if (isHydrate && hydrate) {\r\n                        hydrate(vnode, rootContainer);\r\n                    }\r\n                    else {\r\n                        render(vnode, rootContainer);\r\n                    }\r\n                    isMounted = true;\r\n                    app._container = rootContainer;\r\n                    rootContainer.__vue_app__ = app;\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        devtoolsInitApp(app, version);\r\n                    }\r\n                    return vnode.component.proxy;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`App has already been mounted.\\n` +\r\n                        `If you want to remount the same app, move your app creation logic ` +\r\n                        `into a factory function and create fresh app instances for each ` +\r\n                        `mount - e.g. \\`const createMyApp = () => createApp(App)\\``);\r\n                }\r\n            },\r\n            unmount() {\r\n                if (isMounted) {\r\n                    render(null, app._container);\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        devtoolsUnmountApp(app);\r\n                    }\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`Cannot unmount an app that is not mounted.`);\r\n                }\r\n            },\r\n            provide(key, value) {\r\n                if ((process.env.NODE_ENV !== 'production') && key in context.provides) {\r\n                    warn(`App already provides property with key \"${String(key)}\". ` +\r\n                        `It will be overwritten with the new value.`);\r\n                }\r\n                // TypeScript doesn't allow symbols as index type\r\n                // https://github.com/Microsoft/TypeScript/issues/24587\r\n                context.provides[key] = value;\r\n                return app;\r\n            }\r\n        });\r\n        return app;\r\n    };\r\n}\n\nlet hasMismatch = false;\r\nconst isSVGContainer = (container) => /svg/.test(container.namespaceURI) && container.tagName !== 'foreignObject';\r\nconst isComment = (node) => node.nodeType === 8 /* COMMENT */;\r\n// Note: hydration is DOM-specific\r\n// But we have to place it in core due to tight coupling with core - splitting\r\n// it out creates a ton of unnecessary complexity.\r\n// Hydration also depends on some renderer internal logic which needs to be\r\n// passed in via arguments.\r\nfunction createHydrationFunctions(rendererInternals) {\r\n    const { mt: mountComponent, p: patch, o: { patchProp, nextSibling, parentNode, remove, insert, createComment } } = rendererInternals;\r\n    const hydrate = (vnode, container) => {\r\n        if ((process.env.NODE_ENV !== 'production') && !container.hasChildNodes()) {\r\n            warn(`Attempting to hydrate existing markup but container is empty. ` +\r\n                `Performing full mount instead.`);\r\n            patch(null, vnode, container);\r\n            return;\r\n        }\r\n        hasMismatch = false;\r\n        hydrateNode(container.firstChild, vnode, null, null);\r\n        flushPostFlushCbs();\r\n        if (hasMismatch && !false) {\r\n            // this error should show up in production\r\n            console.error(`Hydration completed but contains mismatches.`);\r\n        }\r\n    };\r\n    const hydrateNode = (node, vnode, parentComponent, parentSuspense, optimized = false) => {\r\n        const isFragmentStart = isComment(node) && node.data === '[';\r\n        const onMismatch = () => handleMismatch(node, vnode, parentComponent, parentSuspense, isFragmentStart);\r\n        const { type, ref, shapeFlag } = vnode;\r\n        const domType = node.nodeType;\r\n        vnode.el = node;\r\n        let nextNode = null;\r\n        switch (type) {\r\n            case Text:\r\n                if (domType !== 3 /* TEXT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    if (node.data !== vnode.children) {\r\n                        hasMismatch = true;\r\n                        (process.env.NODE_ENV !== 'production') &&\r\n                            warn(`Hydration text mismatch:` +\r\n                                `\\n- Client: ${JSON.stringify(node.data)}` +\r\n                                `\\n- Server: ${JSON.stringify(vnode.children)}`);\r\n                        node.data = vnode.children;\r\n                    }\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Comment:\r\n                if (domType !== 8 /* COMMENT */ || isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Static:\r\n                if (domType !== 1 /* ELEMENT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    // determine anchor, adopt content\r\n                    nextNode = node;\r\n                    // if the static vnode has its content stripped during build,\r\n                    // adopt it from the server-rendered HTML.\r\n                    const needToAdoptContent = !vnode.children.length;\r\n                    for (let i = 0; i < vnode.staticCount; i++) {\r\n                        if (needToAdoptContent)\r\n                            vnode.children += nextNode.outerHTML;\r\n                        if (i === vnode.staticCount - 1) {\r\n                            vnode.anchor = nextNode;\r\n                        }\r\n                        nextNode = nextSibling(nextNode);\r\n                    }\r\n                    return nextNode;\r\n                }\r\n                break;\r\n            case Fragment:\r\n                if (!isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = hydrateFragment(node, vnode, parentComponent, parentSuspense, optimized);\r\n                }\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    if (domType !== 1 /* ELEMENT */ ||\r\n                        vnode.type !== node.tagName.toLowerCase()) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = hydrateElement(node, vnode, parentComponent, parentSuspense, optimized);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    // when setting up the render effect, if the initial vnode already\r\n                    // has .el set, the component will perform hydration instead of mount\r\n                    // on its sub-tree.\r\n                    const container = parentNode(node);\r\n                    const hydrateComponent = () => {\r\n                        mountComponent(vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), optimized);\r\n                    };\r\n                    // async component\r\n                    const loadAsync = vnode.type.__asyncLoader;\r\n                    if (loadAsync) {\r\n                        loadAsync().then(hydrateComponent);\r\n                    }\r\n                    else {\r\n                        hydrateComponent();\r\n                    }\r\n                    // component may be async, so in the case of fragments we cannot rely\r\n                    // on component's rendered output to determine the end of the fragment\r\n                    // instead, we do a lookahead to find the end anchor node.\r\n                    nextNode = isFragmentStart\r\n                        ? locateClosingAsyncAnchor(node)\r\n                        : nextSibling(node);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    if (domType !== 8 /* COMMENT */) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, optimized, rendererInternals, hydrateChildren);\r\n                    }\r\n                }\r\n                else if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                    nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, isSVGContainer(parentNode(node)), optimized, rendererInternals, hydrateNode);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid HostVNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, null, parentComponent, parentSuspense, vnode);\r\n        }\r\n        return nextNode;\r\n    };\r\n    const hydrateElement = (el, vnode, parentComponent, parentSuspense, optimized) => {\r\n        optimized = optimized || !!vnode.dynamicChildren;\r\n        const { props, patchFlag, shapeFlag, dirs } = vnode;\r\n        // skip props & children if this is hoisted static nodes\r\n        if (patchFlag !== -1 /* HOISTED */) {\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                if (!optimized ||\r\n                    (patchFlag & 16 /* FULL_PROPS */ ||\r\n                        patchFlag & 32 /* HYDRATE_EVENTS */)) {\r\n                    for (const key in props) {\r\n                        if (!isReservedProp(key) && isOn(key)) {\r\n                            patchProp(el, key, null, props[key]);\r\n                        }\r\n                    }\r\n                }\r\n                else if (props.onClick) {\r\n                    // Fast path for click listeners (which is most often) to avoid\r\n                    // iterating through props.\r\n                    patchProp(el, 'onClick', null, props.onClick);\r\n                }\r\n            }\r\n            // vnode / directive hooks\r\n            let vnodeHooks;\r\n            if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\r\n                invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n            }\r\n            if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\r\n                queueEffectWithSuspense(() => {\r\n                    vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n                    dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n                }, parentSuspense);\r\n            }\r\n            // children\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */ &&\r\n                // skip if element has innerHTML / textContent\r\n                !(props && (props.innerHTML || props.textContent))) {\r\n                let next = hydrateChildren(el.firstChild, vnode, el, parentComponent, parentSuspense, optimized);\r\n                let hasWarned = false;\r\n                while (next) {\r\n                    hasMismatch = true;\r\n                    if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                        warn(`Hydration children mismatch in <${vnode.type}>: ` +\r\n                            `server rendered element contains more child nodes than client vdom.`);\r\n                        hasWarned = true;\r\n                    }\r\n                    // The SSRed DOM contains more nodes than it should. Remove them.\r\n                    const cur = next;\r\n                    next = next.nextSibling;\r\n                    remove(cur);\r\n                }\r\n            }\r\n            else if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                if (el.textContent !== vnode.children) {\r\n                    hasMismatch = true;\r\n                    (process.env.NODE_ENV !== 'production') &&\r\n                        warn(`Hydration text content mismatch in <${vnode.type}>:\\n` +\r\n                            `- Client: ${el.textContent}\\n` +\r\n                            `- Server: ${vnode.children}`);\r\n                    el.textContent = vnode.children;\r\n                }\r\n            }\r\n        }\r\n        return el.nextSibling;\r\n    };\r\n    const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, optimized) => {\r\n        optimized = optimized || !!parentVNode.dynamicChildren;\r\n        const children = parentVNode.children;\r\n        const l = children.length;\r\n        let hasWarned = false;\r\n        for (let i = 0; i < l; i++) {\r\n            const vnode = optimized\r\n                ? children[i]\r\n                : (children[i] = normalizeVNode(children[i]));\r\n            if (node) {\r\n                node = hydrateNode(node, vnode, parentComponent, parentSuspense, optimized);\r\n            }\r\n            else {\r\n                hasMismatch = true;\r\n                if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                    warn(`Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` +\r\n                        `server rendered element contains fewer child nodes than client vdom.`);\r\n                    hasWarned = true;\r\n                }\r\n                // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\r\n                patch(null, vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container));\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    const hydrateFragment = (node, vnode, parentComponent, parentSuspense, optimized) => {\r\n        const container = parentNode(node);\r\n        const next = hydrateChildren(nextSibling(node), vnode, container, parentComponent, parentSuspense, optimized);\r\n        if (next && isComment(next) && next.data === ']') {\r\n            return nextSibling((vnode.anchor = next));\r\n        }\r\n        else {\r\n            // fragment didn't hydrate successfully, since we didn't get a end anchor\r\n            // back. This should have led to node/children mismatch warnings.\r\n            hasMismatch = true;\r\n            // since the anchor is missing, we need to create one and insert it\r\n            insert((vnode.anchor = createComment(`]`)), container, next);\r\n            return next;\r\n        }\r\n    };\r\n    const handleMismatch = (node, vnode, parentComponent, parentSuspense, isFragment) => {\r\n        hasMismatch = true;\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`Hydration node mismatch:\\n- Client vnode:`, vnode.type, `\\n- Server rendered DOM:`, node, node.nodeType === 3 /* TEXT */\r\n                ? `(text)`\r\n                : isComment(node) && node.data === '['\r\n                    ? `(start of fragment)`\r\n                    : ``);\r\n        vnode.el = null;\r\n        if (isFragment) {\r\n            // remove excessive fragment nodes\r\n            const end = locateClosingAsyncAnchor(node);\r\n            while (true) {\r\n                const next = nextSibling(node);\r\n                if (next && next !== end) {\r\n                    remove(next);\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        const next = nextSibling(node);\r\n        const container = parentNode(node);\r\n        remove(node);\r\n        patch(null, vnode, container, next, parentComponent, parentSuspense, isSVGContainer(container));\r\n        return next;\r\n    };\r\n    const locateClosingAsyncAnchor = (node) => {\r\n        let match = 0;\r\n        while (node) {\r\n            node = nextSibling(node);\r\n            if (node && isComment(node)) {\r\n                if (node.data === '[')\r\n                    match++;\r\n                if (node.data === ']') {\r\n                    if (match === 0) {\r\n                        return nextSibling(node);\r\n                    }\r\n                    else {\r\n                        match--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    return [hydrate, hydrateNode];\r\n}\n\nlet supported;\r\nlet perf;\r\nfunction startMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        perf.mark(`vue-${type}-${instance.uid}`);\r\n    }\r\n}\r\nfunction endMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        const startTag = `vue-${type}-${instance.uid}`;\r\n        const endTag = startTag + `:end`;\r\n        perf.mark(endTag);\r\n        perf.measure(`<${formatComponentName(instance, instance.type)}> ${type}`, startTag, endTag);\r\n        perf.clearMarks(startTag);\r\n        perf.clearMarks(endTag);\r\n    }\r\n}\r\nfunction isSupported() {\r\n    if (supported !== undefined) {\r\n        return supported;\r\n    }\r\n    /* eslint-disable no-restricted-globals */\r\n    if (typeof window !== 'undefined' && window.performance) {\r\n        supported = true;\r\n        perf = window.performance;\r\n    }\r\n    else {\r\n        supported = false;\r\n    }\r\n    /* eslint-enable no-restricted-globals */\r\n    return supported;\r\n}\n\n/**\r\n * This is only called in esm-bundler builds.\r\n * It is called when a renderer is created, in `baseCreateRenderer` so that\r\n * importing runtime-core is side-effects free.\r\n *\r\n * istanbul-ignore-next\r\n */\r\nfunction initFeatureFlags() {\r\n    let needWarn = false;\r\n    if (typeof __VUE_OPTIONS_API__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_OPTIONS_API__ = true;\r\n    }\r\n    if (typeof __VUE_PROD_DEVTOOLS__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_PROD_DEVTOOLS__ = false;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && needWarn) {\r\n        console.warn(`You are running the esm-bundler build of Vue. It is recommended to ` +\r\n            `configure your bundler to explicitly replace feature flag globals ` +\r\n            `with boolean literals to get proper tree-shaking in the final bundle. ` +\r\n            `See http://link.vuejs.org/feature-flags for more details.`);\r\n    }\r\n}\n\nconst prodEffectOptions = {\r\n    scheduler: queueJob,\r\n    // #1801, #2043 component render effects should allow recursive updates\r\n    allowRecurse: true\r\n};\r\nfunction createDevEffectOptions(instance) {\r\n    return {\r\n        scheduler: queueJob,\r\n        allowRecurse: true,\r\n        onTrack: instance.rtc ? e => invokeArrayFns(instance.rtc, e) : void 0,\r\n        onTrigger: instance.rtg ? e => invokeArrayFns(instance.rtg, e) : void 0\r\n    };\r\n}\r\nconst queuePostRenderEffect =  queueEffectWithSuspense\r\n    ;\r\nconst setRef = (rawRef, oldRawRef, parentComponent, parentSuspense, vnode) => {\r\n    if (isArray(rawRef)) {\r\n        rawRef.forEach((r, i) => setRef(r, oldRawRef && (isArray(oldRawRef) ? oldRawRef[i] : oldRawRef), parentComponent, parentSuspense, vnode));\r\n        return;\r\n    }\r\n    let value;\r\n    if (!vnode) {\r\n        value = null;\r\n    }\r\n    else {\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            value = vnode.component.proxy;\r\n        }\r\n        else {\r\n            value = vnode.el;\r\n        }\r\n    }\r\n    const { i: owner, r: ref } = rawRef;\r\n    if ((process.env.NODE_ENV !== 'production') && !owner) {\r\n        warn(`Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\r\n            `A vnode with ref must be created inside the render function.`);\r\n        return;\r\n    }\r\n    const oldRef = oldRawRef && oldRawRef.r;\r\n    const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs;\r\n    const setupState = owner.setupState;\r\n    // unset old ref\r\n    if (oldRef != null && oldRef !== ref) {\r\n        if (isString(oldRef)) {\r\n            refs[oldRef] = null;\r\n            if (hasOwn(setupState, oldRef)) {\r\n                setupState[oldRef] = null;\r\n            }\r\n        }\r\n        else if (isRef(oldRef)) {\r\n            oldRef.value = null;\r\n        }\r\n    }\r\n    if (isString(ref)) {\r\n        const doSet = () => {\r\n            refs[ref] = value;\r\n            if (hasOwn(setupState, ref)) {\r\n                setupState[ref] = value;\r\n            }\r\n        };\r\n        // #1789: for non-null values, set them after render\r\n        // null values means this is unmount and it should not overwrite another\r\n        // ref with the same key\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isRef(ref)) {\r\n        const doSet = () => {\r\n            ref.value = value;\r\n        };\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isFunction(ref)) {\r\n        callWithErrorHandling(ref, parentComponent, 12 /* FUNCTION_REF */, [\r\n            value,\r\n            refs\r\n        ]);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn('Invalid template ref type:', value, `(${typeof value})`);\r\n    }\r\n};\r\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\r\nfunction createRenderer(options) {\r\n    return baseCreateRenderer(options);\r\n}\r\n// Separate API for creating hydration-enabled renderer.\r\n// Hydration logic is only used when calling this function, making it\r\n// tree-shakable.\r\nfunction createHydrationRenderer(options) {\r\n    return baseCreateRenderer(options, createHydrationFunctions);\r\n}\r\n// implementation\r\nfunction baseCreateRenderer(options, createHydrationFns) {\r\n    // compile-time feature flags check\r\n    {\r\n        initFeatureFlags();\r\n    }\r\n    const { insert: hostInsert, remove: hostRemove, patchProp: hostPatchProp, forcePatchProp: hostForcePatchProp, createElement: hostCreateElement, createText: hostCreateText, createComment: hostCreateComment, setText: hostSetText, setElementText: hostSetElementText, parentNode: hostParentNode, nextSibling: hostNextSibling, setScopeId: hostSetScopeId = NOOP, cloneNode: hostCloneNode, insertStaticContent: hostInsertStaticContent } = options;\r\n    // Note: functions inside this closure should use `const xxx = () => {}`\r\n    // style in order to prevent being inlined by minifiers.\r\n    const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, optimized = false) => {\r\n        // patching & not same type, unmount old tree\r\n        if (n1 && !isSameVNodeType(n1, n2)) {\r\n            anchor = getNextHostNode(n1);\r\n            unmount(n1, parentComponent, parentSuspense, true);\r\n            n1 = null;\r\n        }\r\n        if (n2.patchFlag === -2 /* BAIL */) {\r\n            optimized = false;\r\n            n2.dynamicChildren = null;\r\n        }\r\n        const { type, ref, shapeFlag } = n2;\r\n        switch (type) {\r\n            case Text:\r\n                processText(n1, n2, container, anchor);\r\n                break;\r\n            case Comment:\r\n                processCommentNode(n1, n2, container, anchor);\r\n                break;\r\n            case Static:\r\n                if (n1 == null) {\r\n                    mountStaticNode(n2, container, anchor, isSVG);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    patchStaticNode(n1, n2, container, isSVG);\r\n                }\r\n                break;\r\n            case Fragment:\r\n                processFragment(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    processElement(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    processComponent(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals);\r\n                }\r\n                else if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid VNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        // set ref\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, n1 && n1.ref, parentComponent, parentSuspense, n2);\r\n        }\r\n    };\r\n    const processText = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateText(n2.children)), container, anchor);\r\n        }\r\n        else {\r\n            const el = (n2.el = n1.el);\r\n            if (n2.children !== n1.children) {\r\n                hostSetText(el, n2.children);\r\n            }\r\n        }\r\n    };\r\n    const processCommentNode = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateComment(n2.children || '')), container, anchor);\r\n        }\r\n        else {\r\n            // there's no support for dynamic comments\r\n            n2.el = n1.el;\r\n        }\r\n    };\r\n    const mountStaticNode = (n2, container, anchor, isSVG) => {\r\n        [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const patchStaticNode = (n1, n2, container, isSVG) => {\r\n        // static nodes are only patched during dev for HMR\r\n        if (n2.children !== n1.children) {\r\n            const anchor = hostNextSibling(n1.anchor);\r\n            // remove existing\r\n            removeStaticNode(n1);\r\n            [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n        }\r\n        else {\r\n            n2.el = n1.el;\r\n            n2.anchor = n1.anchor;\r\n        }\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const moveStaticNode = (vnode, container, anchor) => {\r\n        let cur = vnode.el;\r\n        const end = vnode.anchor;\r\n        while (cur && cur !== end) {\r\n            const next = hostNextSibling(cur);\r\n            hostInsert(cur, container, anchor);\r\n            cur = next;\r\n        }\r\n        hostInsert(end, container, anchor);\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const removeStaticNode = (vnode) => {\r\n        let cur = vnode.el;\r\n        while (cur && cur !== vnode.anchor) {\r\n            const next = hostNextSibling(cur);\r\n            hostRemove(cur);\r\n            cur = next;\r\n        }\r\n        hostRemove(vnode.anchor);\r\n    };\r\n    const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        isSVG = isSVG || n2.type === 'svg';\r\n        if (n1 == null) {\r\n            mountElement(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        else {\r\n            patchElement(n1, n2, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n    };\r\n    const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        let el;\r\n        let vnodeHook;\r\n        const { type, props, shapeFlag, transition, scopeId, patchFlag, dirs } = vnode;\r\n        if (!(process.env.NODE_ENV !== 'production') &&\r\n            vnode.el &&\r\n            hostCloneNode !== undefined &&\r\n            patchFlag === -1 /* HOISTED */) {\r\n            // If a vnode has non-null el, it means it's being reused.\r\n            // Only static vnodes can be reused, so its mounted DOM nodes should be\r\n            // exactly the same, and we can simply do a clone here.\r\n            // only do this in production since cloned trees cannot be HMR updated.\r\n            el = vnode.el = hostCloneNode(vnode.el);\r\n        }\r\n        else {\r\n            el = vnode.el = hostCreateElement(vnode.type, isSVG, props && props.is);\r\n            // mount children first, since some props may rely on child content\r\n            // being already rendered, e.g. `<select value>`\r\n            if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                hostSetElementText(el, vnode.children);\r\n            }\r\n            else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                mountChildren(vnode.children, el, null, parentComponent, parentSuspense, isSVG && type !== 'foreignObject', optimized || !!vnode.dynamicChildren);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                for (const key in props) {\r\n                    if (!isReservedProp(key)) {\r\n                        hostPatchProp(el, key, null, props[key], isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n                if ((vnodeHook = props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                }\r\n            }\r\n            // scopeId\r\n            setScopeId(el, scopeId, vnode, parentComponent);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            Object.defineProperty(el, '__vnode', {\r\n                value: vnode,\r\n                enumerable: false\r\n            });\r\n            Object.defineProperty(el, '__vueParentComponent', {\r\n                value: parentComponent,\r\n                enumerable: false\r\n            });\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n        }\r\n        // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\r\n        // #1689 For inside suspense + suspense resolved case, just call it\r\n        const needCallTransitionHooks = (!parentSuspense || (parentSuspense && !parentSuspense.pendingBranch)) &&\r\n            transition &&\r\n            !transition.persisted;\r\n        if (needCallTransitionHooks) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        hostInsert(el, container, anchor);\r\n        if ((vnodeHook = props && props.onVnodeMounted) ||\r\n            needCallTransitionHooks ||\r\n            dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                needCallTransitionHooks && transition.enter(el);\r\n                dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const setScopeId = (el, scopeId, vnode, parentComponent) => {\r\n        if (scopeId) {\r\n            hostSetScopeId(el, scopeId);\r\n        }\r\n        if (parentComponent) {\r\n            const treeOwnerId = parentComponent.type.__scopeId;\r\n            // vnode's own scopeId and the current patched component's scopeId is\r\n            // different - this is a slot content node.\r\n            if (treeOwnerId && treeOwnerId !== scopeId) {\r\n                hostSetScopeId(el, treeOwnerId + '-s');\r\n            }\r\n            let subTree = parentComponent.subTree;\r\n            if ((process.env.NODE_ENV !== 'production') && subTree.type === Fragment) {\r\n                subTree =\r\n                    filterSingleRoot(subTree.children) || subTree;\r\n            }\r\n            if (vnode === subTree) {\r\n                setScopeId(el, parentComponent.vnode.scopeId, parentComponent.vnode, parentComponent.parent);\r\n            }\r\n        }\r\n    };\r\n    const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, optimized, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            const child = (children[i] = optimized\r\n                ? cloneIfMounted(children[i])\r\n                : normalizeVNode(children[i]));\r\n            patch(null, child, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n    };\r\n    const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const el = (n2.el = n1.el);\r\n        let { patchFlag, dynamicChildren, dirs } = n2;\r\n        // #1426 take the old vnode's patch flag into account since user may clone a\r\n        // compiler-generated vnode, which de-opts to FULL_PROPS\r\n        patchFlag |= n1.patchFlag & 16 /* FULL_PROPS */;\r\n        const oldProps = n1.props || EMPTY_OBJ;\r\n        const newProps = n2.props || EMPTY_OBJ;\r\n        let vnodeHook;\r\n        if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate');\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (patchFlag > 0) {\r\n            // the presence of a patchFlag means this element's render code was\r\n            // generated by the compiler and can take the fast path.\r\n            // in this path old node and new node are guaranteed to have the same shape\r\n            // (i.e. at the exact same position in the source template)\r\n            if (patchFlag & 16 /* FULL_PROPS */) {\r\n                // element props contain dynamic keys, full diff needed\r\n                patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            else {\r\n                // class\r\n                // this flag is matched when the element has dynamic class bindings.\r\n                if (patchFlag & 2 /* CLASS */) {\r\n                    if (oldProps.class !== newProps.class) {\r\n                        hostPatchProp(el, 'class', null, newProps.class, isSVG);\r\n                    }\r\n                }\r\n                // style\r\n                // this flag is matched when the element has dynamic style bindings\r\n                if (patchFlag & 4 /* STYLE */) {\r\n                    hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG);\r\n                }\r\n                // props\r\n                // This flag is matched when the element has dynamic prop/attr bindings\r\n                // other than class and style. The keys of dynamic prop/attrs are saved for\r\n                // faster iteration.\r\n                // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\r\n                // bail out and go through a full diff because we need to unset the old key\r\n                if (patchFlag & 8 /* PROPS */) {\r\n                    // if the flag is present then dynamicProps must be non-null\r\n                    const propsToUpdate = n2.dynamicProps;\r\n                    for (let i = 0; i < propsToUpdate.length; i++) {\r\n                        const key = propsToUpdate[i];\r\n                        const prev = oldProps[key];\r\n                        const next = newProps[key];\r\n                        if (next !== prev ||\r\n                            (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                            hostPatchProp(el, key, prev, next, isSVG, n1.children, parentComponent, parentSuspense, unmountChildren);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // text\r\n            // This flag is matched when the element has only dynamic text children.\r\n            if (patchFlag & 1 /* TEXT */) {\r\n                if (n1.children !== n2.children) {\r\n                    hostSetElementText(el, n2.children);\r\n                }\r\n            }\r\n        }\r\n        else if (!optimized && dynamicChildren == null) {\r\n            // unoptimized, full diff\r\n            patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n        }\r\n        const areChildrenSVG = isSVG && n2.type !== 'foreignObject';\r\n        if (dynamicChildren) {\r\n            patchBlockChildren(n1.dynamicChildren, dynamicChildren, el, parentComponent, parentSuspense, areChildrenSVG);\r\n            if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                traverseStaticChildren(n1, n2);\r\n            }\r\n        }\r\n        else if (!optimized) {\r\n            // full diff\r\n            patchChildren(n1, n2, el, null, parentComponent, parentSuspense, areChildrenSVG);\r\n        }\r\n        if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n                dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    // The fast path for blocks.\r\n    const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG) => {\r\n        for (let i = 0; i < newChildren.length; i++) {\r\n            const oldVNode = oldChildren[i];\r\n            const newVNode = newChildren[i];\r\n            // Determine the container (parent element) for the patch.\r\n            const container = \r\n            // - In the case of a Fragment, we need to provide the actual parent\r\n            // of the Fragment itself so it can move its children.\r\n            oldVNode.type === Fragment ||\r\n                // - In the case of different nodes, there is going to be a replacement\r\n                // which also requires the correct parent container\r\n                !isSameVNodeType(oldVNode, newVNode) ||\r\n                // - In the case of a component, it could contain anything.\r\n                oldVNode.shapeFlag & 6 /* COMPONENT */ ||\r\n                oldVNode.shapeFlag & 64 /* TELEPORT */\r\n                ? hostParentNode(oldVNode.el)\r\n                : // In other cases, the parent container is not actually used so we\r\n                    // just pass the block element here to avoid a DOM parentNode call.\r\n                    fallbackContainer;\r\n            patch(oldVNode, newVNode, container, null, parentComponent, parentSuspense, isSVG, true);\r\n        }\r\n    };\r\n    const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {\r\n        if (oldProps !== newProps) {\r\n            for (const key in newProps) {\r\n                if (isReservedProp(key))\r\n                    continue;\r\n                const next = newProps[key];\r\n                const prev = oldProps[key];\r\n                if (next !== prev ||\r\n                    (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                    hostPatchProp(el, key, prev, next, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                }\r\n            }\r\n            if (oldProps !== EMPTY_OBJ) {\r\n                for (const key in oldProps) {\r\n                    if (!isReservedProp(key) && !(key in newProps)) {\r\n                        hostPatchProp(el, key, oldProps[key], null, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''));\r\n        const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''));\r\n        let { patchFlag, dynamicChildren } = n2;\r\n        if (patchFlag > 0) {\r\n            optimized = true;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (n1 == null) {\r\n            hostInsert(fragmentStartAnchor, container, anchor);\r\n            hostInsert(fragmentEndAnchor, container, anchor);\r\n            // a fragment can only have array children\r\n            // since they are either generated by the compiler, or implicitly created\r\n            // from arrays.\r\n            mountChildren(n2.children, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        else {\r\n            if (patchFlag > 0 &&\r\n                patchFlag & 64 /* STABLE_FRAGMENT */ &&\r\n                dynamicChildren) {\r\n                // a stable fragment (template root or <template v-for>) doesn't need to\r\n                // patch children order, but it may contain dynamicChildren.\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, container, parentComponent, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                    traverseStaticChildren(n1, n2);\r\n                }\r\n                else if (\r\n                // #2080 if the stable fragment has a key, it's a <template v-for> that may\r\n                //  get moved around. Make sure all root level vnodes inherit el.\r\n                // #2134 or if it's a component root, it may also get moved around\r\n                // as the component is being moved.\r\n                n2.key != null ||\r\n                    (parentComponent && n2 === parentComponent.subTree)) {\r\n                    traverseStaticChildren(n1, n2, true /* shallow */);\r\n                }\r\n            }\r\n            else {\r\n                // keyed / unkeyed, or manual fragments.\r\n                // for keyed & unkeyed, since they are compiler generated from v-for,\r\n                // each child is guaranteed to be a block so the fragment will never\r\n                // have dynamicChildren.\r\n                patchChildren(n1, n2, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n    };\r\n    const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        if (n1 == null) {\r\n            if (n2.shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n                parentComponent.ctx.activate(n2, container, anchor, isSVG, optimized);\r\n            }\r\n            else {\r\n                mountComponent(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n        else {\r\n            updateComponent(n1, n2, optimized);\r\n        }\r\n    };\r\n    const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const instance = (initialVNode.component = createComponentInstance(initialVNode, parentComponent, parentSuspense));\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            registerHMR(instance);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            pushWarningContext(initialVNode);\r\n            startMeasure(instance, `mount`);\r\n        }\r\n        // inject renderer internals for keepAlive\r\n        if (isKeepAlive(initialVNode)) {\r\n            instance.ctx.renderer = internals;\r\n        }\r\n        // resolve props and slots for setup context\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            startMeasure(instance, `init`);\r\n        }\r\n        setupComponent(instance);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            endMeasure(instance, `init`);\r\n        }\r\n        // setup() is async. This component relies on async logic to be resolved\r\n        // before proceeding\r\n        if ( instance.asyncDep) {\r\n            parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect);\r\n            // Give it a placeholder if this is not hydration\r\n            // TODO handle self-defined fallback\r\n            if (!initialVNode.el) {\r\n                const placeholder = (instance.subTree = createVNode(Comment));\r\n                processCommentNode(null, placeholder, container, anchor);\r\n            }\r\n            return;\r\n        }\r\n        setupRenderEffect(instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            popWarningContext();\r\n            endMeasure(instance, `mount`);\r\n        }\r\n    };\r\n    const updateComponent = (n1, n2, optimized) => {\r\n        const instance = (n2.component = n1.component);\r\n        if (shouldUpdateComponent(n1, n2, optimized)) {\r\n            if (\r\n                instance.asyncDep &&\r\n                !instance.asyncResolved) {\r\n                // async & still pending - just update props and slots\r\n                // since the component's reactive effect for render isn't set-up yet\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(n2);\r\n                }\r\n                updateComponentPreRender(instance, n2, optimized);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                // normal update\r\n                instance.next = n2;\r\n                // in case the child component is also queued, remove it to avoid\r\n                // double updating the same child component in the same flush.\r\n                invalidateJob(instance.update);\r\n                // instance.update is the reactive effect runner.\r\n                instance.update();\r\n            }\r\n        }\r\n        else {\r\n            // no update needed. just copy over properties\r\n            n2.component = n1.component;\r\n            n2.el = n1.el;\r\n            instance.vnode = n2;\r\n        }\r\n    };\r\n    const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {\r\n        // create reactive effect for rendering\r\n        instance.update = effect(function componentEffect() {\r\n            if (!instance.isMounted) {\r\n                let vnodeHook;\r\n                const { el, props } = initialVNode;\r\n                const { bm, m, parent } = instance;\r\n                // beforeMount hook\r\n                if (bm) {\r\n                    invokeArrayFns(bm);\r\n                }\r\n                // onVnodeBeforeMount\r\n                if ((vnodeHook = props && props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                }\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const subTree = (instance.subTree = renderComponentRoot(instance));\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                if (el && hydrateNode) {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `hydrate`);\r\n                    }\r\n                    // vnode has adopted host node - perform hydration instead of mount.\r\n                    hydrateNode(initialVNode.el, subTree, instance, parentSuspense);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `hydrate`);\r\n                    }\r\n                }\r\n                else {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `patch`);\r\n                    }\r\n                    patch(null, subTree, container, anchor, instance, parentSuspense, isSVG);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `patch`);\r\n                    }\r\n                    initialVNode.el = subTree.el;\r\n                }\r\n                // mounted hook\r\n                if (m) {\r\n                    queuePostRenderEffect(m, parentSuspense);\r\n                }\r\n                // onVnodeMounted\r\n                if ((vnodeHook = props && props.onVnodeMounted)) {\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                    }, parentSuspense);\r\n                }\r\n                // activated hook for keep-alive roots.\r\n                // #1742 activated hook must be accessed after first render\r\n                // since the hook may be injected by a child keep-alive\r\n                const { a } = instance;\r\n                if (a &&\r\n                    initialVNode.shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n                    queuePostRenderEffect(a, parentSuspense);\r\n                }\r\n                instance.isMounted = true;\r\n            }\r\n            else {\r\n                // updateComponent\r\n                // This is triggered by mutation of component's own state (next: null)\r\n                // OR parent calling processComponent (next: VNode)\r\n                let { next, bu, u, parent, vnode } = instance;\r\n                let originNext = next;\r\n                let vnodeHook;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(next || instance.vnode);\r\n                }\r\n                if (next) {\r\n                    updateComponentPreRender(instance, next, optimized);\r\n                }\r\n                else {\r\n                    next = vnode;\r\n                }\r\n                next.el = vnode.el;\r\n                // beforeUpdate hook\r\n                if (bu) {\r\n                    invokeArrayFns(bu);\r\n                }\r\n                // onVnodeBeforeUpdate\r\n                if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\r\n                    invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                }\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const nextTree = renderComponentRoot(instance);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                const prevTree = instance.subTree;\r\n                instance.subTree = nextTree;\r\n                // reset refs\r\n                // only needed if previous patch had refs\r\n                if (instance.refs !== EMPTY_OBJ) {\r\n                    instance.refs = {};\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `patch`);\r\n                }\r\n                patch(prevTree, nextTree, \r\n                // parent may have changed if it's in a teleport\r\n                hostParentNode(prevTree.el), \r\n                // anchor may have changed if it's in a fragment\r\n                getNextHostNode(prevTree), instance, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `patch`);\r\n                }\r\n                next.el = nextTree.el;\r\n                if (originNext === null) {\r\n                    // self-triggered update. In case of HOC, update parent component\r\n                    // vnode el. HOC is indicated by parent instance's subTree pointing\r\n                    // to child component's vnode\r\n                    updateHOCHostEl(instance, nextTree.el);\r\n                }\r\n                // updated hook\r\n                if (u) {\r\n                    queuePostRenderEffect(u, parentSuspense);\r\n                }\r\n                // onVnodeUpdated\r\n                if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                    }, parentSuspense);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                    devtoolsComponentUpdated(instance);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n            }\r\n        }, (process.env.NODE_ENV !== 'production') ? createDevEffectOptions(instance) : prodEffectOptions);\r\n    };\r\n    const updateComponentPreRender = (instance, nextVNode, optimized) => {\r\n        nextVNode.component = instance;\r\n        const prevProps = instance.vnode.props;\r\n        instance.vnode = nextVNode;\r\n        instance.next = null;\r\n        updateProps(instance, nextVNode.props, prevProps, optimized);\r\n        updateSlots(instance, nextVNode.children);\r\n        // props update may have triggered pre-flush watchers.\r\n        // flush them before the render update.\r\n        flushPreFlushCbs(undefined, instance.update);\r\n    };\r\n    const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized = false) => {\r\n        const c1 = n1 && n1.children;\r\n        const prevShapeFlag = n1 ? n1.shapeFlag : 0;\r\n        const c2 = n2.children;\r\n        const { patchFlag, shapeFlag } = n2;\r\n        // fast path\r\n        if (patchFlag > 0) {\r\n            if (patchFlag & 128 /* KEYED_FRAGMENT */) {\r\n                // this could be either fully-keyed or mixed (some keyed some not)\r\n                // presence of patchFlag means children are guaranteed to be arrays\r\n                patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                return;\r\n            }\r\n            else if (patchFlag & 256 /* UNKEYED_FRAGMENT */) {\r\n                // unkeyed\r\n                patchUnkeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                return;\r\n            }\r\n        }\r\n        // children has 3 possibilities: text, array or no children.\r\n        if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n            // text children fast path\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                unmountChildren(c1, parentComponent, parentSuspense);\r\n            }\r\n            if (c2 !== c1) {\r\n                hostSetElementText(container, c2);\r\n            }\r\n        }\r\n        else {\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                // prev children was array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    // two arrays, cannot assume anything, do full diff\r\n                    patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else {\r\n                    // no new children, just unmount old\r\n                    unmountChildren(c1, parentComponent, parentSuspense, true);\r\n                }\r\n            }\r\n            else {\r\n                // prev children was text OR null\r\n                // new children is array OR null\r\n                if (prevShapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                    hostSetElementText(container, '');\r\n                }\r\n                // mount new if array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        c1 = c1 || EMPTY_ARR;\r\n        c2 = c2 || EMPTY_ARR;\r\n        const oldLength = c1.length;\r\n        const newLength = c2.length;\r\n        const commonLength = Math.min(oldLength, newLength);\r\n        let i;\r\n        for (i = 0; i < commonLength; i++) {\r\n            const nextChild = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            patch(c1[i], nextChild, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        if (oldLength > newLength) {\r\n            // remove old\r\n            unmountChildren(c1, parentComponent, parentSuspense, true, commonLength);\r\n        }\r\n        else {\r\n            // mount new\r\n            mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, commonLength);\r\n        }\r\n    };\r\n    // can be all-keyed or mixed\r\n    const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        let i = 0;\r\n        const l2 = c2.length;\r\n        let e1 = c1.length - 1; // prev ending index\r\n        let e2 = l2 - 1; // next ending index\r\n        // 1. sync from start\r\n        // (a b) c\r\n        // (a b) d e\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[i];\r\n            const n2 = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        // 2. sync from end\r\n        // a (b c)\r\n        // d e (b c)\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[e1];\r\n            const n2 = (c2[e2] = optimized\r\n                ? cloneIfMounted(c2[e2])\r\n                : normalizeVNode(c2[e2]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            e1--;\r\n            e2--;\r\n        }\r\n        // 3. common sequence + mount\r\n        // (a b)\r\n        // (a b) c\r\n        // i = 2, e1 = 1, e2 = 2\r\n        // (a b)\r\n        // c (a b)\r\n        // i = 0, e1 = -1, e2 = 0\r\n        if (i > e1) {\r\n            if (i <= e2) {\r\n                const nextPos = e2 + 1;\r\n                const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\r\n                while (i <= e2) {\r\n                    patch(null, (c2[i] = optimized\r\n                        ? cloneIfMounted(c2[i])\r\n                        : normalizeVNode(c2[i])), container, anchor, parentComponent, parentSuspense, isSVG);\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n        // 4. common sequence + unmount\r\n        // (a b) c\r\n        // (a b)\r\n        // i = 2, e1 = 2, e2 = 1\r\n        // a (b c)\r\n        // (b c)\r\n        // i = 0, e1 = 0, e2 = -1\r\n        else if (i > e2) {\r\n            while (i <= e1) {\r\n                unmount(c1[i], parentComponent, parentSuspense, true);\r\n                i++;\r\n            }\r\n        }\r\n        // 5. unknown sequence\r\n        // [i ... e1 + 1]: a b [c d e] f g\r\n        // [i ... e2 + 1]: a b [e d c h] f g\r\n        // i = 2, e1 = 4, e2 = 5\r\n        else {\r\n            const s1 = i; // prev starting index\r\n            const s2 = i; // next starting index\r\n            // 5.1 build key:index map for newChildren\r\n            const keyToNewIndexMap = new Map();\r\n            for (i = s2; i <= e2; i++) {\r\n                const nextChild = (c2[i] = optimized\r\n                    ? cloneIfMounted(c2[i])\r\n                    : normalizeVNode(c2[i]));\r\n                if (nextChild.key != null) {\r\n                    if ((process.env.NODE_ENV !== 'production') && keyToNewIndexMap.has(nextChild.key)) {\r\n                        warn(`Duplicate keys found during update:`, JSON.stringify(nextChild.key), `Make sure keys are unique.`);\r\n                    }\r\n                    keyToNewIndexMap.set(nextChild.key, i);\r\n                }\r\n            }\r\n            // 5.2 loop through old children left to be patched and try to patch\r\n            // matching nodes & remove nodes that are no longer present\r\n            let j;\r\n            let patched = 0;\r\n            const toBePatched = e2 - s2 + 1;\r\n            let moved = false;\r\n            // used to track whether any node has moved\r\n            let maxNewIndexSoFar = 0;\r\n            // works as Map<newIndex, oldIndex>\r\n            // Note that oldIndex is offset by +1\r\n            // and oldIndex = 0 is a special value indicating the new node has\r\n            // no corresponding old node.\r\n            // used for determining longest stable subsequence\r\n            const newIndexToOldIndexMap = new Array(toBePatched);\r\n            for (i = 0; i < toBePatched; i++)\r\n                newIndexToOldIndexMap[i] = 0;\r\n            for (i = s1; i <= e1; i++) {\r\n                const prevChild = c1[i];\r\n                if (patched >= toBePatched) {\r\n                    // all new children have been patched so this can only be a removal\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                    continue;\r\n                }\r\n                let newIndex;\r\n                if (prevChild.key != null) {\r\n                    newIndex = keyToNewIndexMap.get(prevChild.key);\r\n                }\r\n                else {\r\n                    // key-less node, try to locate a key-less node of the same type\r\n                    for (j = s2; j <= e2; j++) {\r\n                        if (newIndexToOldIndexMap[j - s2] === 0 &&\r\n                            isSameVNodeType(prevChild, c2[j])) {\r\n                            newIndex = j;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (newIndex === undefined) {\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                }\r\n                else {\r\n                    newIndexToOldIndexMap[newIndex - s2] = i + 1;\r\n                    if (newIndex >= maxNewIndexSoFar) {\r\n                        maxNewIndexSoFar = newIndex;\r\n                    }\r\n                    else {\r\n                        moved = true;\r\n                    }\r\n                    patch(prevChild, c2[newIndex], container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n                    patched++;\r\n                }\r\n            }\r\n            // 5.3 move and mount\r\n            // generate longest stable subsequence only when nodes have moved\r\n            const increasingNewIndexSequence = moved\r\n                ? getSequence(newIndexToOldIndexMap)\r\n                : EMPTY_ARR;\r\n            j = increasingNewIndexSequence.length - 1;\r\n            // looping backwards so that we can use last patched node as anchor\r\n            for (i = toBePatched - 1; i >= 0; i--) {\r\n                const nextIndex = s2 + i;\r\n                const nextChild = c2[nextIndex];\r\n                const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\r\n                if (newIndexToOldIndexMap[i] === 0) {\r\n                    // mount new\r\n                    patch(null, nextChild, container, anchor, parentComponent, parentSuspense, isSVG);\r\n                }\r\n                else if (moved) {\r\n                    // move if:\r\n                    // There is no stable subsequence (e.g. a reverse)\r\n                    // OR current node is not among the stable sequence\r\n                    if (j < 0 || i !== increasingNewIndexSequence[j]) {\r\n                        move(nextChild, container, anchor, 2 /* REORDER */);\r\n                    }\r\n                    else {\r\n                        j--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\r\n        const { el, type, transition, children, shapeFlag } = vnode;\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            move(vnode.component.subTree, container, anchor, moveType);\r\n            return;\r\n        }\r\n        if ( shapeFlag & 128 /* SUSPENSE */) {\r\n            vnode.suspense.move(container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type.move(vnode, container, anchor, internals);\r\n            return;\r\n        }\r\n        if (type === Fragment) {\r\n            hostInsert(el, container, anchor);\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, anchor, moveType);\r\n            }\r\n            hostInsert(vnode.anchor, container, anchor);\r\n            return;\r\n        }\r\n        // static node move can only happen when force updating HMR\r\n        if ((process.env.NODE_ENV !== 'production') && type === Static) {\r\n            moveStaticNode(vnode, container, anchor);\r\n            return;\r\n        }\r\n        // single nodes\r\n        const needTransition = moveType !== 2 /* REORDER */ &&\r\n            shapeFlag & 1 /* ELEMENT */ &&\r\n            transition;\r\n        if (needTransition) {\r\n            if (moveType === 0 /* ENTER */) {\r\n                transition.beforeEnter(el);\r\n                hostInsert(el, container, anchor);\r\n                queuePostRenderEffect(() => transition.enter(el), parentSuspense);\r\n            }\r\n            else {\r\n                const { leave, delayLeave, afterLeave } = transition;\r\n                const remove = () => hostInsert(el, container, anchor);\r\n                const performLeave = () => {\r\n                    leave(el, () => {\r\n                        remove();\r\n                        afterLeave && afterLeave();\r\n                    });\r\n                };\r\n                if (delayLeave) {\r\n                    delayLeave(el, remove, performLeave);\r\n                }\r\n                else {\r\n                    performLeave();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            hostInsert(el, container, anchor);\r\n        }\r\n    };\r\n    const unmount = (vnode, parentComponent, parentSuspense, doRemove = false) => {\r\n        const { type, props, ref, children, dynamicChildren, shapeFlag, patchFlag, dirs } = vnode;\r\n        // unset ref\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, null, parentComponent, parentSuspense, null);\r\n        }\r\n        if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n            parentComponent.ctx.deactivate(vnode);\r\n            return;\r\n        }\r\n        const shouldInvokeDirs = shapeFlag & 1 /* ELEMENT */ && dirs;\r\n        let vnodeHook;\r\n        if ((vnodeHook = props && props.onVnodeBeforeUnmount)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n        }\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            unmountComponent(vnode.component, parentSuspense, doRemove);\r\n        }\r\n        else {\r\n            if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                vnode.suspense.unmount(parentSuspense, doRemove);\r\n                return;\r\n            }\r\n            if (shouldInvokeDirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount');\r\n            }\r\n            if (dynamicChildren &&\r\n                // #1153: fast path should not be taken for non-stable (v-for) fragments\r\n                (type !== Fragment ||\r\n                    (patchFlag > 0 && patchFlag & 64 /* STABLE_FRAGMENT */))) {\r\n                // fast path for block nodes: only need to unmount dynamic children.\r\n                unmountChildren(dynamicChildren, parentComponent, parentSuspense);\r\n            }\r\n            else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                unmountChildren(children, parentComponent, parentSuspense);\r\n            }\r\n            // an unmounted teleport should always remove its children\r\n            if (shapeFlag & 64 /* TELEPORT */) {\r\n                vnode.type.remove(vnode, internals);\r\n            }\r\n            if (doRemove) {\r\n                remove(vnode);\r\n            }\r\n        }\r\n        if ((vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                shouldInvokeDirs &&\r\n                    invokeDirectiveHook(vnode, null, parentComponent, 'unmounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const remove = vnode => {\r\n        const { type, el, anchor, transition } = vnode;\r\n        if (type === Fragment) {\r\n            removeFragment(el, anchor);\r\n            return;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && type === Static) {\r\n            removeStaticNode(vnode);\r\n            return;\r\n        }\r\n        const performRemove = () => {\r\n            hostRemove(el);\r\n            if (transition && !transition.persisted && transition.afterLeave) {\r\n                transition.afterLeave();\r\n            }\r\n        };\r\n        if (vnode.shapeFlag & 1 /* ELEMENT */ &&\r\n            transition &&\r\n            !transition.persisted) {\r\n            const { leave, delayLeave } = transition;\r\n            const performLeave = () => leave(el, performRemove);\r\n            if (delayLeave) {\r\n                delayLeave(vnode.el, performRemove, performLeave);\r\n            }\r\n            else {\r\n                performLeave();\r\n            }\r\n        }\r\n        else {\r\n            performRemove();\r\n        }\r\n    };\r\n    const removeFragment = (cur, end) => {\r\n        // For fragments, directly remove all contained DOM nodes.\r\n        // (fragment child nodes cannot have transition)\r\n        let next;\r\n        while (cur !== end) {\r\n            next = hostNextSibling(cur);\r\n            hostRemove(cur);\r\n            cur = next;\r\n        }\r\n        hostRemove(end);\r\n    };\r\n    const unmountComponent = (instance, parentSuspense, doRemove) => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            unregisterHMR(instance);\r\n        }\r\n        const { bum, effects, update, subTree, um } = instance;\r\n        // beforeUnmount hook\r\n        if (bum) {\r\n            invokeArrayFns(bum);\r\n        }\r\n        if (effects) {\r\n            for (let i = 0; i < effects.length; i++) {\r\n                stop(effects[i]);\r\n            }\r\n        }\r\n        // update may be null if a component is unmounted before its async\r\n        // setup has resolved.\r\n        if (update) {\r\n            stop(update);\r\n            unmount(subTree, instance, parentSuspense, doRemove);\r\n        }\r\n        // unmounted hook\r\n        if (um) {\r\n            queuePostRenderEffect(um, parentSuspense);\r\n        }\r\n        queuePostRenderEffect(() => {\r\n            instance.isUnmounted = true;\r\n        }, parentSuspense);\r\n        // A component with async dep inside a pending suspense is unmounted before\r\n        // its async dep resolves. This should remove the dep from the suspense, and\r\n        // cause the suspense to resolve immediately if that was the last dep.\r\n        if (\r\n            parentSuspense &&\r\n            parentSuspense.pendingBranch &&\r\n            !parentSuspense.isUnmounted &&\r\n            instance.asyncDep &&\r\n            !instance.asyncResolved &&\r\n            instance.suspenseId === parentSuspense.pendingId) {\r\n            parentSuspense.deps--;\r\n            if (parentSuspense.deps === 0) {\r\n                parentSuspense.resolve();\r\n            }\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            devtoolsComponentRemoved(instance);\r\n        }\r\n    };\r\n    const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            unmount(children[i], parentComponent, parentSuspense, doRemove);\r\n        }\r\n    };\r\n    const getNextHostNode = vnode => {\r\n        if (vnode.shapeFlag & 6 /* COMPONENT */) {\r\n            return getNextHostNode(vnode.component.subTree);\r\n        }\r\n        if ( vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n            return vnode.suspense.next();\r\n        }\r\n        return hostNextSibling((vnode.anchor || vnode.el));\r\n    };\r\n    /**\r\n     * #1156\r\n     * When a component is HMR-enabled, we need to make sure that all static nodes\r\n     * inside a block also inherit the DOM element from the previous tree so that\r\n     * HMR updates (which are full updates) can retrieve the element for patching.\r\n     *\r\n     * #2080\r\n     * Inside keyed `template` fragment static children, if a fragment is moved,\r\n     * the children will always moved so that need inherit el form previous nodes\r\n     * to ensure correct moved position.\r\n     */\r\n    const traverseStaticChildren = (n1, n2, shallow = false) => {\r\n        const ch1 = n1.children;\r\n        const ch2 = n2.children;\r\n        if (isArray(ch1) && isArray(ch2)) {\r\n            for (let i = 0; i < ch1.length; i++) {\r\n                // this is only called in the optimized path so array children are\r\n                // guaranteed to be vnodes\r\n                const c1 = ch1[i];\r\n                const c2 = (ch2[i] = cloneIfMounted(ch2[i]));\r\n                if (c2.shapeFlag & 1 /* ELEMENT */ && !c2.dynamicChildren) {\r\n                    if (c2.patchFlag <= 0 || c2.patchFlag === 32 /* HYDRATE_EVENTS */) {\r\n                        c2.el = c1.el;\r\n                    }\r\n                    if (!shallow)\r\n                        traverseStaticChildren(c1, c2);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && c2.type === Comment) {\r\n                    c2.el = c1.el;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const render = (vnode, container) => {\r\n        if (vnode == null) {\r\n            if (container._vnode) {\r\n                unmount(container._vnode, null, null, true);\r\n            }\r\n        }\r\n        else {\r\n            patch(container._vnode || null, vnode, container);\r\n        }\r\n        flushPostFlushCbs();\r\n        container._vnode = vnode;\r\n    };\r\n    const internals = {\r\n        p: patch,\r\n        um: unmount,\r\n        m: move,\r\n        r: remove,\r\n        mt: mountComponent,\r\n        mc: mountChildren,\r\n        pc: patchChildren,\r\n        pbc: patchBlockChildren,\r\n        n: getNextHostNode,\r\n        o: options\r\n    };\r\n    let hydrate;\r\n    let hydrateNode;\r\n    if (createHydrationFns) {\r\n        [hydrate, hydrateNode] = createHydrationFns(internals);\r\n    }\r\n    return {\r\n        render,\r\n        hydrate,\r\n        createApp: createAppAPI(render, hydrate)\r\n    };\r\n}\r\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\r\n    callWithAsyncErrorHandling(hook, instance, 7 /* VNODE_HOOK */, [\r\n        vnode,\r\n        prevVNode\r\n    ]);\r\n}\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction getSequence(arr) {\r\n    const p = arr.slice();\r\n    const result = [0];\r\n    let i, j, u, v, c;\r\n    const len = arr.length;\r\n    for (i = 0; i < len; i++) {\r\n        const arrI = arr[i];\r\n        if (arrI !== 0) {\r\n            j = result[result.length - 1];\r\n            if (arr[j] < arrI) {\r\n                p[i] = j;\r\n                result.push(i);\r\n                continue;\r\n            }\r\n            u = 0;\r\n            v = result.length - 1;\r\n            while (u < v) {\r\n                c = ((u + v) / 2) | 0;\r\n                if (arr[result[c]] < arrI) {\r\n                    u = c + 1;\r\n                }\r\n                else {\r\n                    v = c;\r\n                }\r\n            }\r\n            if (arrI < arr[result[u]]) {\r\n                if (u > 0) {\r\n                    p[i] = result[u - 1];\r\n                }\r\n                result[u] = i;\r\n            }\r\n        }\r\n    }\r\n    u = result.length;\r\n    v = result[u - 1];\r\n    while (u-- > 0) {\r\n        result[u] = v;\r\n        v = p[v];\r\n    }\r\n    return result;\r\n}\n\n// Simple effect.\r\nfunction watchEffect(effect, options) {\r\n    return doWatch(effect, null, options);\r\n}\r\n// initial value for watchers to trigger on undefined initial values\r\nconst INITIAL_WATCHER_VALUE = {};\r\n// implementation\r\nfunction watch(source, cb, options) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(cb)) {\r\n        warn(`\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\r\n            `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\r\n            `supports \\`watch(source, cb, options?) signature.`);\r\n    }\r\n    return doWatch(source, cb, options);\r\n}\r\nfunction doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = EMPTY_OBJ, instance = currentInstance) {\r\n    if ((process.env.NODE_ENV !== 'production') && !cb) {\r\n        if (immediate !== undefined) {\r\n            warn(`watch() \"immediate\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n        if (deep !== undefined) {\r\n            warn(`watch() \"deep\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n    }\r\n    const warnInvalidSource = (s) => {\r\n        warn(`Invalid watch source: `, s, `A watch source can only be a getter/effect function, a ref, ` +\r\n            `a reactive object, or an array of these types.`);\r\n    };\r\n    let getter;\r\n    const isRefSource = isRef(source);\r\n    if (isRefSource) {\r\n        getter = () => source.value;\r\n    }\r\n    else if (isReactive(source)) {\r\n        getter = () => source;\r\n        deep = true;\r\n    }\r\n    else if (isArray(source)) {\r\n        getter = () => source.map(s => {\r\n            if (isRef(s)) {\r\n                return s.value;\r\n            }\r\n            else if (isReactive(s)) {\r\n                return traverse(s);\r\n            }\r\n            else if (isFunction(s)) {\r\n                return callWithErrorHandling(s, instance, 2 /* WATCH_GETTER */);\r\n            }\r\n            else {\r\n                (process.env.NODE_ENV !== 'production') && warnInvalidSource(s);\r\n            }\r\n        });\r\n    }\r\n    else if (isFunction(source)) {\r\n        if (cb) {\r\n            // getter with cb\r\n            getter = () => callWithErrorHandling(source, instance, 2 /* WATCH_GETTER */);\r\n        }\r\n        else {\r\n            // no cb -> simple effect\r\n            getter = () => {\r\n                if (instance && instance.isUnmounted) {\r\n                    return;\r\n                }\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                return callWithErrorHandling(source, instance, 3 /* WATCH_CALLBACK */, [onInvalidate]);\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        getter = NOOP;\r\n        (process.env.NODE_ENV !== 'production') && warnInvalidSource(source);\r\n    }\r\n    if (cb && deep) {\r\n        const baseGetter = getter;\r\n        getter = () => traverse(baseGetter());\r\n    }\r\n    let cleanup;\r\n    const onInvalidate = (fn) => {\r\n        cleanup = runner.options.onStop = () => {\r\n            callWithErrorHandling(fn, instance, 4 /* WATCH_CLEANUP */);\r\n        };\r\n    };\r\n    let oldValue = isArray(source) ? [] : INITIAL_WATCHER_VALUE;\r\n    const job = () => {\r\n        if (!runner.active) {\r\n            return;\r\n        }\r\n        if (cb) {\r\n            // watch(source, cb)\r\n            const newValue = runner();\r\n            if (deep || isRefSource || hasChanged(newValue, oldValue)) {\r\n                // cleanup before running cb again\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                callWithAsyncErrorHandling(cb, instance, 3 /* WATCH_CALLBACK */, [\r\n                    newValue,\r\n                    // pass undefined as the old value when it's changed for the first time\r\n                    oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,\r\n                    onInvalidate\r\n                ]);\r\n                oldValue = newValue;\r\n            }\r\n        }\r\n        else {\r\n            // watchEffect\r\n            runner();\r\n        }\r\n    };\r\n    // important: mark the job as a watcher callback so that scheduler knows it\r\n    // it is allowed to self-trigger (#1727)\r\n    job.allowRecurse = !!cb;\r\n    let scheduler;\r\n    if (flush === 'sync') {\r\n        scheduler = job;\r\n    }\r\n    else if (flush === 'post') {\r\n        scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);\r\n    }\r\n    else {\r\n        // default: 'pre'\r\n        scheduler = () => {\r\n            if (!instance || instance.isMounted) {\r\n                queuePreFlushCb(job);\r\n            }\r\n            else {\r\n                // with 'pre' option, the first call must happen before\r\n                // the component is mounted so it is called synchronously.\r\n                job();\r\n            }\r\n        };\r\n    }\r\n    const runner = effect(getter, {\r\n        lazy: true,\r\n        onTrack,\r\n        onTrigger,\r\n        scheduler\r\n    });\r\n    recordInstanceBoundEffect(runner);\r\n    // initial run\r\n    if (cb) {\r\n        if (immediate) {\r\n            job();\r\n        }\r\n        else {\r\n            oldValue = runner();\r\n        }\r\n    }\r\n    else if (flush === 'post') {\r\n        queuePostRenderEffect(runner, instance && instance.suspense);\r\n    }\r\n    else {\r\n        runner();\r\n    }\r\n    return () => {\r\n        stop(runner);\r\n        if (instance) {\r\n            remove(instance.effects, runner);\r\n        }\r\n    };\r\n}\r\n// this.$watch\r\nfunction instanceWatch(source, cb, options) {\r\n    const publicThis = this.proxy;\r\n    const getter = isString(source)\r\n        ? () => publicThis[source]\r\n        : source.bind(publicThis);\r\n    return doWatch(getter, cb.bind(publicThis), options, this);\r\n}\r\nfunction traverse(value, seen = new Set()) {\r\n    if (!isObject(value) || seen.has(value)) {\r\n        return value;\r\n    }\r\n    seen.add(value);\r\n    if (isRef(value)) {\r\n        traverse(value.value, seen);\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            traverse(value[i], seen);\r\n        }\r\n    }\r\n    else if (isMap(value)) {\r\n        value.forEach((_, key) => {\r\n            // to register mutation dep for existing keys\r\n            traverse(value.get(key), seen);\r\n        });\r\n    }\r\n    else if (isSet(value)) {\r\n        value.forEach(v => {\r\n            traverse(v, seen);\r\n        });\r\n    }\r\n    else {\r\n        for (const key in value) {\r\n            traverse(value[key], seen);\r\n        }\r\n    }\r\n    return value;\r\n}\n\nfunction provide(key, value) {\r\n    if (!currentInstance) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`provide() can only be used inside setup().`);\r\n        }\r\n    }\r\n    else {\r\n        let provides = currentInstance.provides;\r\n        // by default an instance inherits its parent's provides object\r\n        // but when it needs to provide values of its own, it creates its\r\n        // own provides object using parent provides object as prototype.\r\n        // this way in `inject` we can simply look up injections from direct\r\n        // parent and let the prototype chain do the work.\r\n        const parentProvides = currentInstance.parent && currentInstance.parent.provides;\r\n        if (parentProvides === provides) {\r\n            provides = currentInstance.provides = Object.create(parentProvides);\r\n        }\r\n        // TS doesn't allow symbol as index type\r\n        provides[key] = value;\r\n    }\r\n}\r\nfunction inject(key, defaultValue, treatDefaultAsFactory = false) {\r\n    // fallback to `currentRenderingInstance` so that this can be called in\r\n    // a functional component\r\n    const instance = currentInstance || currentRenderingInstance;\r\n    if (instance) {\r\n        const provides = instance.provides;\r\n        if (key in provides) {\r\n            // TS doesn't allow symbol as index type\r\n            return provides[key];\r\n        }\r\n        else if (arguments.length > 1) {\r\n            return treatDefaultAsFactory && isFunction(defaultValue)\r\n                ? defaultValue()\r\n                : defaultValue;\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`injection \"${String(key)}\" not found.`);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`inject() can only be used inside setup() or functional components.`);\r\n    }\r\n}\n\nfunction createDuplicateChecker() {\r\n    const cache = Object.create(null);\r\n    return (type, key) => {\r\n        if (cache[key]) {\r\n            warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\r\n        }\r\n        else {\r\n            cache[key] = type;\r\n        }\r\n    };\r\n}\r\nlet isInBeforeCreate = false;\r\nfunction applyOptions(instance, options, deferredData = [], deferredWatch = [], asMixin = false) {\r\n    const { \r\n    // composition\r\n    mixins, extends: extendsOptions, \r\n    // state\r\n    data: dataOptions, computed: computedOptions, methods, watch: watchOptions, provide: provideOptions, inject: injectOptions, \r\n    // assets\r\n    components, directives, \r\n    // lifecycle\r\n    beforeMount, mounted, beforeUpdate, updated, activated, deactivated, beforeDestroy, beforeUnmount, destroyed, unmounted, render, renderTracked, renderTriggered, errorCaptured } = options;\r\n    const publicThis = instance.proxy;\r\n    const ctx = instance.ctx;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (asMixin && render && instance.render === NOOP) {\r\n        instance.render = render;\r\n    }\r\n    // applyOptions is called non-as-mixin once per instance\r\n    if (!asMixin) {\r\n        isInBeforeCreate = true;\r\n        callSyncHook('beforeCreate', options, publicThis, globalMixins);\r\n        isInBeforeCreate = false;\r\n        // global mixins are applied first\r\n        applyMixins(instance, globalMixins, deferredData, deferredWatch);\r\n    }\r\n    // extending a base component...\r\n    if (extendsOptions) {\r\n        applyOptions(instance, extendsOptions, deferredData, deferredWatch, true);\r\n    }\r\n    // local mixins\r\n    if (mixins) {\r\n        applyMixins(instance, mixins, deferredData, deferredWatch);\r\n    }\r\n    const checkDuplicateProperties = (process.env.NODE_ENV !== 'production') ? createDuplicateChecker() : null;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const [propsOptions] = instance.propsOptions;\r\n        if (propsOptions) {\r\n            for (const key in propsOptions) {\r\n                checkDuplicateProperties(\"Props\" /* PROPS */, key);\r\n            }\r\n        }\r\n    }\r\n    // options initialization order (to be consistent with Vue 2):\r\n    // - props (already done outside of this function)\r\n    // - inject\r\n    // - methods\r\n    // - data (deferred since it relies on `this` access)\r\n    // - computed\r\n    // - watch (deferred since it relies on `this` access)\r\n    if (injectOptions) {\r\n        if (isArray(injectOptions)) {\r\n            for (let i = 0; i < injectOptions.length; i++) {\r\n                const key = injectOptions[i];\r\n                ctx[key] = inject(key);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (const key in injectOptions) {\r\n                const opt = injectOptions[key];\r\n                if (isObject(opt)) {\r\n                    ctx[key] = inject(opt.from || key, opt.default, true /* treat default function as factory */);\r\n                }\r\n                else {\r\n                    ctx[key] = inject(opt);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (methods) {\r\n        for (const key in methods) {\r\n            const methodHandler = methods[key];\r\n            if (isFunction(methodHandler)) {\r\n                ctx[key] = methodHandler.bind(publicThis);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Methods\" /* METHODS */, key);\r\n                }\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\r\n                    `Did you reference the function correctly?`);\r\n            }\r\n        }\r\n    }\r\n    if (!asMixin) {\r\n        if (deferredData.length) {\r\n            deferredData.forEach(dataFn => resolveData(instance, dataFn, publicThis));\r\n        }\r\n        if (dataOptions) {\r\n            resolveData(instance, dataOptions, publicThis);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const rawData = toRaw(instance.data);\r\n            for (const key in rawData) {\r\n                checkDuplicateProperties(\"Data\" /* DATA */, key);\r\n                // expose data on ctx during dev\r\n                if (key[0] !== '$' && key[0] !== '_') {\r\n                    Object.defineProperty(ctx, key, {\r\n                        configurable: true,\r\n                        enumerable: true,\r\n                        get: () => rawData[key],\r\n                        set: NOOP\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (dataOptions) {\r\n        deferredData.push(dataOptions);\r\n    }\r\n    if (computedOptions) {\r\n        for (const key in computedOptions) {\r\n            const opt = computedOptions[key];\r\n            const get = isFunction(opt)\r\n                ? opt.bind(publicThis, publicThis)\r\n                : isFunction(opt.get)\r\n                    ? opt.get.bind(publicThis, publicThis)\r\n                    : NOOP;\r\n            if ((process.env.NODE_ENV !== 'production') && get === NOOP) {\r\n                warn(`Computed property \"${key}\" has no getter.`);\r\n            }\r\n            const set = !isFunction(opt) && isFunction(opt.set)\r\n                ? opt.set.bind(publicThis)\r\n                : (process.env.NODE_ENV !== 'production')\r\n                    ? () => {\r\n                        warn(`Write operation failed: computed property \"${key}\" is readonly.`);\r\n                    }\r\n                    : NOOP;\r\n            const c = computed({\r\n                get,\r\n                set\r\n            });\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => c.value,\r\n                set: v => (c.value = v)\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkDuplicateProperties(\"Computed\" /* COMPUTED */, key);\r\n            }\r\n        }\r\n    }\r\n    if (watchOptions) {\r\n        deferredWatch.push(watchOptions);\r\n    }\r\n    if (!asMixin && deferredWatch.length) {\r\n        deferredWatch.forEach(watchOptions => {\r\n            for (const key in watchOptions) {\r\n                createWatcher(watchOptions[key], ctx, publicThis, key);\r\n            }\r\n        });\r\n    }\r\n    if (provideOptions) {\r\n        const provides = isFunction(provideOptions)\r\n            ? provideOptions.call(publicThis)\r\n            : provideOptions;\r\n        for (const key in provides) {\r\n            provide(key, provides[key]);\r\n        }\r\n    }\r\n    // asset options.\r\n    // To reduce memory usage, only components with mixins or extends will have\r\n    // resolved asset registry attached to instance.\r\n    if (asMixin) {\r\n        if (components) {\r\n            extend(instance.components ||\r\n                (instance.components = extend({}, instance.type.components)), components);\r\n        }\r\n        if (directives) {\r\n            extend(instance.directives ||\r\n                (instance.directives = extend({}, instance.type.directives)), directives);\r\n        }\r\n    }\r\n    // lifecycle options\r\n    if (!asMixin) {\r\n        callSyncHook('created', options, publicThis, globalMixins);\r\n    }\r\n    if (beforeMount) {\r\n        onBeforeMount(beforeMount.bind(publicThis));\r\n    }\r\n    if (mounted) {\r\n        onMounted(mounted.bind(publicThis));\r\n    }\r\n    if (beforeUpdate) {\r\n        onBeforeUpdate(beforeUpdate.bind(publicThis));\r\n    }\r\n    if (updated) {\r\n        onUpdated(updated.bind(publicThis));\r\n    }\r\n    if (activated) {\r\n        onActivated(activated.bind(publicThis));\r\n    }\r\n    if (deactivated) {\r\n        onDeactivated(deactivated.bind(publicThis));\r\n    }\r\n    if (errorCaptured) {\r\n        onErrorCaptured(errorCaptured.bind(publicThis));\r\n    }\r\n    if (renderTracked) {\r\n        onRenderTracked(renderTracked.bind(publicThis));\r\n    }\r\n    if (renderTriggered) {\r\n        onRenderTriggered(renderTriggered.bind(publicThis));\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && beforeDestroy) {\r\n        warn(`\\`beforeDestroy\\` has been renamed to \\`beforeUnmount\\`.`);\r\n    }\r\n    if (beforeUnmount) {\r\n        onBeforeUnmount(beforeUnmount.bind(publicThis));\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && destroyed) {\r\n        warn(`\\`destroyed\\` has been renamed to \\`unmounted\\`.`);\r\n    }\r\n    if (unmounted) {\r\n        onUnmounted(unmounted.bind(publicThis));\r\n    }\r\n}\r\nfunction callSyncHook(name, options, ctx, globalMixins) {\r\n    callHookFromMixins(name, globalMixins, ctx);\r\n    const { extends: base, mixins } = options;\r\n    if (base) {\r\n        callHookFromExtends(name, base, ctx);\r\n    }\r\n    if (mixins) {\r\n        callHookFromMixins(name, mixins, ctx);\r\n    }\r\n    const selfHook = options[name];\r\n    if (selfHook) {\r\n        selfHook.call(ctx);\r\n    }\r\n}\r\nfunction callHookFromExtends(name, base, ctx) {\r\n    if (base.extends) {\r\n        callHookFromExtends(name, base.extends, ctx);\r\n    }\r\n    const baseHook = base[name];\r\n    if (baseHook) {\r\n        baseHook.call(ctx);\r\n    }\r\n}\r\nfunction callHookFromMixins(name, mixins, ctx) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        const chainedMixins = mixins[i].mixins;\r\n        if (chainedMixins) {\r\n            callHookFromMixins(name, chainedMixins, ctx);\r\n        }\r\n        const fn = mixins[i][name];\r\n        if (fn) {\r\n            fn.call(ctx);\r\n        }\r\n    }\r\n}\r\nfunction applyMixins(instance, mixins, deferredData, deferredWatch) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        applyOptions(instance, mixins[i], deferredData, deferredWatch, true);\r\n    }\r\n}\r\nfunction resolveData(instance, dataFn, publicThis) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(dataFn)) {\r\n        warn(`The data option must be a function. ` +\r\n            `Plain object usage is no longer supported.`);\r\n    }\r\n    const data = dataFn.call(publicThis, publicThis);\r\n    if ((process.env.NODE_ENV !== 'production') && isPromise(data)) {\r\n        warn(`data() returned a Promise - note data() cannot be async; If you ` +\r\n            `intend to perform data fetching before component renders, use ` +\r\n            `async setup() + <Suspense>.`);\r\n    }\r\n    if (!isObject(data)) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`data() should return an object.`);\r\n    }\r\n    else if (instance.data === EMPTY_OBJ) {\r\n        instance.data = reactive(data);\r\n    }\r\n    else {\r\n        // existing data: this is a mixin or extends.\r\n        extend(instance.data, data);\r\n    }\r\n}\r\nfunction createWatcher(raw, ctx, publicThis, key) {\r\n    const getter = key.includes('.')\r\n        ? createPathGetter(publicThis, key)\r\n        : () => publicThis[key];\r\n    if (isString(raw)) {\r\n        const handler = ctx[raw];\r\n        if (isFunction(handler)) {\r\n            watch(getter, handler);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Invalid watch handler specified by key \"${raw}\"`, handler);\r\n        }\r\n    }\r\n    else if (isFunction(raw)) {\r\n        watch(getter, raw.bind(publicThis));\r\n    }\r\n    else if (isObject(raw)) {\r\n        if (isArray(raw)) {\r\n            raw.forEach(r => createWatcher(r, ctx, publicThis, key));\r\n        }\r\n        else {\r\n            const handler = isFunction(raw.handler)\r\n                ? raw.handler.bind(publicThis)\r\n                : ctx[raw.handler];\r\n            if (isFunction(handler)) {\r\n                watch(getter, handler, raw);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler);\r\n            }\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid watch option: \"${key}\"`, raw);\r\n    }\r\n}\r\nfunction createPathGetter(ctx, path) {\r\n    const segments = path.split('.');\r\n    return () => {\r\n        let cur = ctx;\r\n        for (let i = 0; i < segments.length && cur; i++) {\r\n            cur = cur[segments[i]];\r\n        }\r\n        return cur;\r\n    };\r\n}\r\nfunction resolveMergedOptions(instance) {\r\n    const raw = instance.type;\r\n    const { __merged, mixins, extends: extendsOptions } = raw;\r\n    if (__merged)\r\n        return __merged;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (!globalMixins.length && !mixins && !extendsOptions)\r\n        return raw;\r\n    const options = {};\r\n    globalMixins.forEach(m => mergeOptions(options, m, instance));\r\n    mergeOptions(options, raw, instance);\r\n    return (raw.__merged = options);\r\n}\r\nfunction mergeOptions(to, from, instance) {\r\n    const strats = instance.appContext.config.optionMergeStrategies;\r\n    const { mixins, extends: extendsOptions } = from;\r\n    extendsOptions && mergeOptions(to, extendsOptions, instance);\r\n    mixins &&\r\n        mixins.forEach((m) => mergeOptions(to, m, instance));\r\n    for (const key in from) {\r\n        if (strats && hasOwn(strats, key)) {\r\n            to[key] = strats[key](to[key], from[key], instance.proxy, key);\r\n        }\r\n        else {\r\n            to[key] = from[key];\r\n        }\r\n    }\r\n}\n\nconst publicPropertiesMap = extend(Object.create(null), {\r\n    $: i => i,\r\n    $el: i => i.vnode.el,\r\n    $data: i => i.data,\r\n    $props: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.props) : i.props),\r\n    $attrs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.attrs) : i.attrs),\r\n    $slots: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.slots) : i.slots),\r\n    $refs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.refs) : i.refs),\r\n    $parent: i => i.parent && i.parent.proxy,\r\n    $root: i => i.root && i.root.proxy,\r\n    $emit: i => i.emit,\r\n    $options: i => (__VUE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type),\r\n    $forceUpdate: i => () => queueJob(i.update),\r\n    $nextTick: () => nextTick,\r\n    $watch: i => (__VUE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP)\r\n});\r\nconst PublicInstanceProxyHandlers = {\r\n    get({ _: instance }, key) {\r\n        const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\r\n        // let @vue/reactivity know it should never observe Vue public instances.\r\n        if (key === \"__v_skip\" /* SKIP */) {\r\n            return true;\r\n        }\r\n        // data / props / ctx\r\n        // This getter gets called for every property access on the render context\r\n        // during render and is a major hotspot. The most expensive part of this\r\n        // is the multiple hasOwn() calls. It's much faster to do a simple property\r\n        // access on a plain object, so we use an accessCache object (with null\r\n        // prototype) to memoize what access type a key corresponds to.\r\n        let normalizedProps;\r\n        if (key[0] !== '$') {\r\n            const n = accessCache[key];\r\n            if (n !== undefined) {\r\n                switch (n) {\r\n                    case 0 /* SETUP */:\r\n                        return setupState[key];\r\n                    case 1 /* DATA */:\r\n                        return data[key];\r\n                    case 3 /* CONTEXT */:\r\n                        return ctx[key];\r\n                    case 2 /* PROPS */:\r\n                        return props[key];\r\n                    // default: just fallthrough\r\n                }\r\n            }\r\n            else if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n                accessCache[key] = 0 /* SETUP */;\r\n                return setupState[key];\r\n            }\r\n            else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n                accessCache[key] = 1 /* DATA */;\r\n                return data[key];\r\n            }\r\n            else if (\r\n            // only cache other properties when instance has declared (thus stable)\r\n            // props\r\n            (normalizedProps = instance.propsOptions[0]) &&\r\n                hasOwn(normalizedProps, key)) {\r\n                accessCache[key] = 2 /* PROPS */;\r\n                return props[key];\r\n            }\r\n            else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n                accessCache[key] = 3 /* CONTEXT */;\r\n                return ctx[key];\r\n            }\r\n            else if (!__VUE_OPTIONS_API__ || !isInBeforeCreate) {\r\n                accessCache[key] = 4 /* OTHER */;\r\n            }\r\n        }\r\n        const publicGetter = publicPropertiesMap[key];\r\n        let cssModule, globalProperties;\r\n        // public $xxx properties\r\n        if (publicGetter) {\r\n            if (key === '$attrs') {\r\n                track(instance, \"get\" /* GET */, key);\r\n                (process.env.NODE_ENV !== 'production') && markAttrsAccessed();\r\n            }\r\n            return publicGetter(instance);\r\n        }\r\n        else if (\r\n        // css module (injected by vue-loader)\r\n        (cssModule = type.__cssModules) &&\r\n            (cssModule = cssModule[key])) {\r\n            return cssModule;\r\n        }\r\n        else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n            // user may set custom properties to `this` that start with `$`\r\n            accessCache[key] = 3 /* CONTEXT */;\r\n            return ctx[key];\r\n        }\r\n        else if (\r\n        // global properties\r\n        ((globalProperties = appContext.config.globalProperties),\r\n            hasOwn(globalProperties, key))) {\r\n            return globalProperties[key];\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production') &&\r\n            currentRenderingInstance &&\r\n            (!isString(key) ||\r\n                // #1091 avoid internal isRef/isVNode checks on component instance leading\r\n                // to infinite warning loop\r\n                key.indexOf('__v') !== 0)) {\r\n            if (data !== EMPTY_OBJ &&\r\n                (key[0] === '$' || key[0] === '_') &&\r\n                hasOwn(data, key)) {\r\n                warn(`Property ${JSON.stringify(key)} must be accessed via $data because it starts with a reserved ` +\r\n                    `character (\"$\" or \"_\") and is not proxied on the render context.`);\r\n            }\r\n            else {\r\n                warn(`Property ${JSON.stringify(key)} was accessed during render ` +\r\n                    `but is not defined on instance.`);\r\n            }\r\n        }\r\n    },\r\n    set({ _: instance }, key, value) {\r\n        const { data, setupState, ctx } = instance;\r\n        if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n            setupState[key] = value;\r\n        }\r\n        else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n            data[key] = value;\r\n        }\r\n        else if (key in instance.props) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate prop \"${key}\". Props are readonly.`, instance);\r\n            return false;\r\n        }\r\n        if (key[0] === '$' && key.slice(1) in instance) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate public property \"${key}\". ` +\r\n                    `Properties starting with $ are reserved and readonly.`, instance);\r\n            return false;\r\n        }\r\n        else {\r\n            if ((process.env.NODE_ENV !== 'production') && key in instance.appContext.config.globalProperties) {\r\n                Object.defineProperty(ctx, key, {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    value\r\n                });\r\n            }\r\n            else {\r\n                ctx[key] = value;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n    has({ _: { data, setupState, accessCache, ctx, appContext, propsOptions } }, key) {\r\n        let normalizedProps;\r\n        return (accessCache[key] !== undefined ||\r\n            (data !== EMPTY_OBJ && hasOwn(data, key)) ||\r\n            (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) ||\r\n            ((normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key)) ||\r\n            hasOwn(ctx, key) ||\r\n            hasOwn(publicPropertiesMap, key) ||\r\n            hasOwn(appContext.config.globalProperties, key));\r\n    }\r\n};\r\nif ((process.env.NODE_ENV !== 'production') && !false) {\r\n    PublicInstanceProxyHandlers.ownKeys = (target) => {\r\n        warn(`Avoid app logic that relies on enumerating keys on a component instance. ` +\r\n            `The keys will be empty in production mode to avoid performance overhead.`);\r\n        return Reflect.ownKeys(target);\r\n    };\r\n}\r\nconst RuntimeCompiledPublicInstanceProxyHandlers = extend({}, PublicInstanceProxyHandlers, {\r\n    get(target, key) {\r\n        // fast path for unscopables when using `with` block\r\n        if (key === Symbol.unscopables) {\r\n            return;\r\n        }\r\n        return PublicInstanceProxyHandlers.get(target, key, target);\r\n    },\r\n    has(_, key) {\r\n        const has = key[0] !== '_' && !isGloballyWhitelisted(key);\r\n        if ((process.env.NODE_ENV !== 'production') && !has && PublicInstanceProxyHandlers.has(_, key)) {\r\n            warn(`Property ${JSON.stringify(key)} should not start with _ which is a reserved prefix for Vue internals.`);\r\n        }\r\n        return has;\r\n    }\r\n});\r\n// In dev mode, the proxy target exposes the same properties as seen on `this`\r\n// for easier console inspection. In prod mode it will be an empty object so\r\n// these properties definitions can be skipped.\r\nfunction createRenderContext(instance) {\r\n    const target = {};\r\n    // expose internal instance for proxy handlers\r\n    Object.defineProperty(target, `_`, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        get: () => instance\r\n    });\r\n    // expose public properties\r\n    Object.keys(publicPropertiesMap).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => publicPropertiesMap[key](instance),\r\n            // intercepted by the proxy so no need for implementation,\r\n            // but needed to prevent set errors\r\n            set: NOOP\r\n        });\r\n    });\r\n    // expose global properties\r\n    const { globalProperties } = instance.appContext.config;\r\n    Object.keys(globalProperties).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => globalProperties[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n    return target;\r\n}\r\n// dev only\r\nfunction exposePropsOnRenderContext(instance) {\r\n    const { ctx, propsOptions: [propsOptions] } = instance;\r\n    if (propsOptions) {\r\n        Object.keys(propsOptions).forEach(key => {\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => instance.props[key],\r\n                set: NOOP\r\n            });\r\n        });\r\n    }\r\n}\r\n// dev only\r\nfunction exposeSetupStateOnRenderContext(instance) {\r\n    const { ctx, setupState } = instance;\r\n    Object.keys(toRaw(setupState)).forEach(key => {\r\n        if (key[0] === '$' || key[0] === '_') {\r\n            warn(`setup() return property ${JSON.stringify(key)} should not start with \"$\" or \"_\" ` +\r\n                `which are reserved prefixes for Vue internals.`);\r\n            return;\r\n        }\r\n        Object.defineProperty(ctx, key, {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get: () => setupState[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n}\n\nconst emptyAppContext = createAppContext();\r\nlet uid$1 = 0;\r\nfunction createComponentInstance(vnode, parent, suspense) {\r\n    const type = vnode.type;\r\n    // inherit parent app context - or - if root, adopt from root vnode\r\n    const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\r\n    const instance = {\r\n        uid: uid$1++,\r\n        vnode,\r\n        type,\r\n        parent,\r\n        appContext,\r\n        root: null,\r\n        next: null,\r\n        subTree: null,\r\n        update: null,\r\n        render: null,\r\n        proxy: null,\r\n        withProxy: null,\r\n        effects: null,\r\n        provides: parent ? parent.provides : Object.create(appContext.provides),\r\n        accessCache: null,\r\n        renderCache: [],\r\n        // local resovled assets\r\n        components: null,\r\n        directives: null,\r\n        // resolved props and emits options\r\n        propsOptions: normalizePropsOptions(type, appContext),\r\n        emitsOptions: normalizeEmitsOptions(type, appContext),\r\n        // emit\r\n        emit: null,\r\n        emitted: null,\r\n        // state\r\n        ctx: EMPTY_OBJ,\r\n        data: EMPTY_OBJ,\r\n        props: EMPTY_OBJ,\r\n        attrs: EMPTY_OBJ,\r\n        slots: EMPTY_OBJ,\r\n        refs: EMPTY_OBJ,\r\n        setupState: EMPTY_OBJ,\r\n        setupContext: null,\r\n        // suspense related\r\n        suspense,\r\n        suspenseId: suspense ? suspense.pendingId : 0,\r\n        asyncDep: null,\r\n        asyncResolved: false,\r\n        // lifecycle hooks\r\n        // not using enums here because it results in computed properties\r\n        isMounted: false,\r\n        isUnmounted: false,\r\n        isDeactivated: false,\r\n        bc: null,\r\n        c: null,\r\n        bm: null,\r\n        m: null,\r\n        bu: null,\r\n        u: null,\r\n        um: null,\r\n        bum: null,\r\n        da: null,\r\n        a: null,\r\n        rtg: null,\r\n        rtc: null,\r\n        ec: null\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        instance.ctx = createRenderContext(instance);\r\n    }\r\n    else {\r\n        instance.ctx = { _: instance };\r\n    }\r\n    instance.root = parent ? parent.root : instance;\r\n    instance.emit = emit.bind(null, instance);\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsComponentAdded(instance);\r\n    }\r\n    return instance;\r\n}\r\nlet currentInstance = null;\r\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\r\nconst setCurrentInstance = (instance) => {\r\n    currentInstance = instance;\r\n};\r\nconst isBuiltInTag = /*#__PURE__*/ makeMap('slot,component');\r\nfunction validateComponentName(name, config) {\r\n    const appIsNativeTag = config.isNativeTag || NO;\r\n    if (isBuiltInTag(name) || appIsNativeTag(name)) {\r\n        warn('Do not use built-in or reserved HTML elements as component id: ' + name);\r\n    }\r\n}\r\nlet isInSSRComponentSetup = false;\r\nfunction setupComponent(instance, isSSR = false) {\r\n    isInSSRComponentSetup = isSSR;\r\n    const { props, children, shapeFlag } = instance.vnode;\r\n    const isStateful = shapeFlag & 4 /* STATEFUL_COMPONENT */;\r\n    initProps(instance, props, isStateful, isSSR);\r\n    initSlots(instance, children);\r\n    const setupResult = isStateful\r\n        ? setupStatefulComponent(instance, isSSR)\r\n        : undefined;\r\n    isInSSRComponentSetup = false;\r\n    return setupResult;\r\n}\r\nfunction setupStatefulComponent(instance, isSSR) {\r\n    const Component = instance.type;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        if (Component.name) {\r\n            validateComponentName(Component.name, instance.appContext.config);\r\n        }\r\n        if (Component.components) {\r\n            const names = Object.keys(Component.components);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateComponentName(names[i], instance.appContext.config);\r\n            }\r\n        }\r\n        if (Component.directives) {\r\n            const names = Object.keys(Component.directives);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateDirectiveName(names[i]);\r\n            }\r\n        }\r\n    }\r\n    // 0. create render proxy property access cache\r\n    instance.accessCache = {};\r\n    // 1. create public instance / render proxy\r\n    // also mark it raw so it's never observed\r\n    instance.proxy = new Proxy(instance.ctx, PublicInstanceProxyHandlers);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        exposePropsOnRenderContext(instance);\r\n    }\r\n    // 2. call setup()\r\n    const { setup } = Component;\r\n    if (setup) {\r\n        const setupContext = (instance.setupContext =\r\n            setup.length > 1 ? createSetupContext(instance) : null);\r\n        currentInstance = instance;\r\n        pauseTracking();\r\n        const setupResult = callWithErrorHandling(setup, instance, 0 /* SETUP_FUNCTION */, [(process.env.NODE_ENV !== 'production') ? shallowReadonly(instance.props) : instance.props, setupContext]);\r\n        resetTracking();\r\n        currentInstance = null;\r\n        if (isPromise(setupResult)) {\r\n            if (isSSR) {\r\n                // return the promise so server-renderer can wait on it\r\n                return setupResult.then((resolvedResult) => {\r\n                    handleSetupResult(instance, resolvedResult);\r\n                });\r\n            }\r\n            else {\r\n                // async setup returned Promise.\r\n                // bail here and wait for re-entry.\r\n                instance.asyncDep = setupResult;\r\n            }\r\n        }\r\n        else {\r\n            handleSetupResult(instance, setupResult);\r\n        }\r\n    }\r\n    else {\r\n        finishComponentSetup(instance);\r\n    }\r\n}\r\nfunction handleSetupResult(instance, setupResult, isSSR) {\r\n    if (isFunction(setupResult)) {\r\n        // setup returned an inline render function\r\n        instance.render = setupResult;\r\n    }\r\n    else if (isObject(setupResult)) {\r\n        if ((process.env.NODE_ENV !== 'production') && isVNode(setupResult)) {\r\n            warn(`setup() should not return VNodes directly - ` +\r\n                `return a render function instead.`);\r\n        }\r\n        // setup returned bindings.\r\n        // assuming a render function compiled from template is present.\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            instance.devtoolsRawSetupState = setupResult;\r\n        }\r\n        instance.setupState = proxyRefs(setupResult);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            exposeSetupStateOnRenderContext(instance);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production') && setupResult !== undefined) {\r\n        warn(`setup() should return an object. Received: ${setupResult === null ? 'null' : typeof setupResult}`);\r\n    }\r\n    finishComponentSetup(instance);\r\n}\r\nlet compile;\r\n/**\r\n * For runtime-dom to register the compiler.\r\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\r\n */\r\nfunction registerRuntimeCompiler(_compile) {\r\n    compile = _compile;\r\n}\r\nfunction finishComponentSetup(instance, isSSR) {\r\n    const Component = instance.type;\r\n    // template / render function normalization\r\n    if (!instance.render) {\r\n        // could be set from setup()\r\n        if (compile && Component.template && !Component.render) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                startMeasure(instance, `compile`);\r\n            }\r\n            Component.render = compile(Component.template, {\r\n                isCustomElement: instance.appContext.config.isCustomElement,\r\n                delimiters: Component.delimiters\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                endMeasure(instance, `compile`);\r\n            }\r\n        }\r\n        instance.render = (Component.render || NOOP);\r\n        // for runtime-compiled render functions using `with` blocks, the render\r\n        // proxy used needs a different `has` handler which is more performant and\r\n        // also only allows a whitelist of globals to fallthrough.\r\n        if (instance.render._rc) {\r\n            instance.withProxy = new Proxy(instance.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\r\n        }\r\n    }\r\n    // support for 2.x options\r\n    if (__VUE_OPTIONS_API__) {\r\n        currentInstance = instance;\r\n        applyOptions(instance, Component);\r\n        currentInstance = null;\r\n    }\r\n    // warn missing template/render\r\n    if ((process.env.NODE_ENV !== 'production') && !Component.render && instance.render === NOOP) {\r\n        /* istanbul ignore if */\r\n        if (!compile && Component.template) {\r\n            warn(`Component provided template option but ` +\r\n                `runtime compilation is not supported in this build of Vue.` +\r\n                ( ` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n                    ) /* should not happen */);\r\n        }\r\n        else {\r\n            warn(`Component is missing template or render function.`);\r\n        }\r\n    }\r\n}\r\nconst attrHandlers = {\r\n    get: (target, key) => {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            markAttrsAccessed();\r\n        }\r\n        return target[key];\r\n    },\r\n    set: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    },\r\n    deleteProperty: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    }\r\n};\r\nfunction createSetupContext(instance) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        // We use getters in dev in case libs like test-utils overwrite instance\r\n        // properties (overwrites should not be done in prod)\r\n        return Object.freeze({\r\n            get attrs() {\r\n                return new Proxy(instance.attrs, attrHandlers);\r\n            },\r\n            get slots() {\r\n                return shallowReadonly(instance.slots);\r\n            },\r\n            get emit() {\r\n                return (event, ...args) => instance.emit(event, ...args);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        return {\r\n            attrs: instance.attrs,\r\n            slots: instance.slots,\r\n            emit: instance.emit\r\n        };\r\n    }\r\n}\r\n// record effects created during a component's setup() so that they can be\r\n// stopped when the component unmounts\r\nfunction recordInstanceBoundEffect(effect) {\r\n    if (currentInstance) {\r\n        (currentInstance.effects || (currentInstance.effects = [])).push(effect);\r\n    }\r\n}\r\nconst classifyRE = /(?:^|[-_])(\\w)/g;\r\nconst classify = (str) => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');\r\n/* istanbul ignore next */\r\nfunction formatComponentName(instance, Component, isRoot = false) {\r\n    let name = isFunction(Component)\r\n        ? Component.displayName || Component.name\r\n        : Component.name;\r\n    if (!name && Component.__file) {\r\n        const match = Component.__file.match(/([^/\\\\]+)\\.vue$/);\r\n        if (match) {\r\n            name = match[1];\r\n        }\r\n    }\r\n    if (!name && instance && instance.parent) {\r\n        // try to infer the name based on reverse resolution\r\n        const inferFromRegistry = (registry) => {\r\n            for (const key in registry) {\r\n                if (registry[key] === Component) {\r\n                    return key;\r\n                }\r\n            }\r\n        };\r\n        name =\r\n            inferFromRegistry(instance.components ||\r\n                instance.parent.type.components) || inferFromRegistry(instance.appContext.components);\r\n    }\r\n    return name ? classify(name) : isRoot ? `App` : `Anonymous`;\r\n}\r\nfunction isClassComponent(value) {\r\n    return isFunction(value) && '__vccOpts' in value;\r\n}\n\nfunction computed(getterOrOptions) {\r\n    const c = computed$1(getterOrOptions);\r\n    recordInstanceBoundEffect(c.effect);\r\n    return c;\r\n}\n\n// implementation, close to no-op\r\nfunction defineComponent(options) {\r\n    return isFunction(options) ? { setup: options, name: options.name } : options;\r\n}\n\nfunction defineAsyncComponent(source) {\r\n    if (isFunction(source)) {\r\n        source = { loader: source };\r\n    }\r\n    const { loader, loadingComponent: loadingComponent, errorComponent: errorComponent, delay = 200, timeout, // undefined = never times out\r\n    suspensible = true, onError: userOnError } = source;\r\n    let pendingRequest = null;\r\n    let resolvedComp;\r\n    let retries = 0;\r\n    const retry = () => {\r\n        retries++;\r\n        pendingRequest = null;\r\n        return load();\r\n    };\r\n    const load = () => {\r\n        let thisRequest;\r\n        return (pendingRequest ||\r\n            (thisRequest = pendingRequest = loader()\r\n                .catch(err => {\r\n                err = err instanceof Error ? err : new Error(String(err));\r\n                if (userOnError) {\r\n                    return new Promise((resolve, reject) => {\r\n                        const userRetry = () => resolve(retry());\r\n                        const userFail = () => reject(err);\r\n                        userOnError(err, userRetry, userFail, retries + 1);\r\n                    });\r\n                }\r\n                else {\r\n                    throw err;\r\n                }\r\n            })\r\n                .then((comp) => {\r\n                if (thisRequest !== pendingRequest && pendingRequest) {\r\n                    return pendingRequest;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && !comp) {\r\n                    warn(`Async component loader resolved to undefined. ` +\r\n                        `If you are using retry(), make sure to return its return value.`);\r\n                }\r\n                // interop module default\r\n                if (comp &&\r\n                    (comp.__esModule || comp[Symbol.toStringTag] === 'Module')) {\r\n                    comp = comp.default;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && comp && !isObject(comp) && !isFunction(comp)) {\r\n                    throw new Error(`Invalid async component load result: ${comp}`);\r\n                }\r\n                resolvedComp = comp;\r\n                return comp;\r\n            })));\r\n    };\r\n    return defineComponent({\r\n        __asyncLoader: load,\r\n        name: 'AsyncComponentWrapper',\r\n        setup() {\r\n            const instance = currentInstance;\r\n            // already resolved\r\n            if (resolvedComp) {\r\n                return () => createInnerComp(resolvedComp, instance);\r\n            }\r\n            const onError = (err) => {\r\n                pendingRequest = null;\r\n                handleError(err, instance, 13 /* ASYNC_COMPONENT_LOADER */, !errorComponent /* do not throw in dev if user provided error component */);\r\n            };\r\n            // suspense-controlled or SSR.\r\n            if (( suspensible && instance.suspense) ||\r\n                (false )) {\r\n                return load()\r\n                    .then(comp => {\r\n                    return () => createInnerComp(comp, instance);\r\n                })\r\n                    .catch(err => {\r\n                    onError(err);\r\n                    return () => errorComponent\r\n                        ? createVNode(errorComponent, {\r\n                            error: err\r\n                        })\r\n                        : null;\r\n                });\r\n            }\r\n            const loaded = ref(false);\r\n            const error = ref();\r\n            const delayed = ref(!!delay);\r\n            if (delay) {\r\n                setTimeout(() => {\r\n                    delayed.value = false;\r\n                }, delay);\r\n            }\r\n            if (timeout != null) {\r\n                setTimeout(() => {\r\n                    if (!loaded.value && !error.value) {\r\n                        const err = new Error(`Async component timed out after ${timeout}ms.`);\r\n                        onError(err);\r\n                        error.value = err;\r\n                    }\r\n                }, timeout);\r\n            }\r\n            load()\r\n                .then(() => {\r\n                loaded.value = true;\r\n            })\r\n                .catch(err => {\r\n                onError(err);\r\n                error.value = err;\r\n            });\r\n            return () => {\r\n                if (loaded.value && resolvedComp) {\r\n                    return createInnerComp(resolvedComp, instance);\r\n                }\r\n                else if (error.value && errorComponent) {\r\n                    return createVNode(errorComponent, {\r\n                        error: error.value\r\n                    });\r\n                }\r\n                else if (loadingComponent && !delayed.value) {\r\n                    return createVNode(loadingComponent);\r\n                }\r\n            };\r\n        }\r\n    });\r\n}\r\nfunction createInnerComp(comp, { vnode: { props, children } }) {\r\n    return createVNode(comp, props, children);\r\n}\n\n// Actual implementation\r\nfunction h(type, propsOrChildren, children) {\r\n    const l = arguments.length;\r\n    if (l === 2) {\r\n        if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\r\n            // single vnode without props\r\n            if (isVNode(propsOrChildren)) {\r\n                return createVNode(type, null, [propsOrChildren]);\r\n            }\r\n            // props without children\r\n            return createVNode(type, propsOrChildren);\r\n        }\r\n        else {\r\n            // omit props\r\n            return createVNode(type, null, propsOrChildren);\r\n        }\r\n    }\r\n    else {\r\n        if (l > 3) {\r\n            children = Array.prototype.slice.call(arguments, 2);\r\n        }\r\n        else if (l === 3 && isVNode(children)) {\r\n            children = [children];\r\n        }\r\n        return createVNode(type, propsOrChildren, children);\r\n    }\r\n}\n\nconst ssrContextKey = Symbol((process.env.NODE_ENV !== 'production') ? `ssrContext` : ``);\r\nconst useSSRContext = () => {\r\n    {\r\n        const ctx = inject(ssrContextKey);\r\n        if (!ctx) {\r\n            warn(`Server rendering context not provided. Make sure to only call ` +\r\n                `useSsrContext() conditionally in the server build.`);\r\n        }\r\n        return ctx;\r\n    }\r\n};\n\n/**\r\n * Actual implementation\r\n */\r\nfunction renderList(source, renderItem) {\r\n    let ret;\r\n    if (isArray(source) || isString(source)) {\r\n        ret = new Array(source.length);\r\n        for (let i = 0, l = source.length; i < l; i++) {\r\n            ret[i] = renderItem(source[i], i);\r\n        }\r\n    }\r\n    else if (typeof source === 'number') {\r\n        ret = new Array(source);\r\n        for (let i = 0; i < source; i++) {\r\n            ret[i] = renderItem(i + 1, i);\r\n        }\r\n    }\r\n    else if (isObject(source)) {\r\n        if (source[Symbol.iterator]) {\r\n            ret = Array.from(source, renderItem);\r\n        }\r\n        else {\r\n            const keys = Object.keys(source);\r\n            ret = new Array(keys.length);\r\n            for (let i = 0, l = keys.length; i < l; i++) {\r\n                const key = keys[i];\r\n                ret[i] = renderItem(source[key], key, i);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        ret = [];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * For prefixing keys in v-on=\"obj\" with \"on\"\r\n * @private\r\n */\r\nfunction toHandlers(obj) {\r\n    const ret = {};\r\n    if ((process.env.NODE_ENV !== 'production') && !isObject(obj)) {\r\n        warn(`v-on with no argument expects an object value.`);\r\n        return ret;\r\n    }\r\n    for (const key in obj) {\r\n        ret[`on${capitalize(key)}`] = obj[key];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Compiler runtime helper for creating dynamic slots object\r\n * @private\r\n */\r\nfunction createSlots(slots, dynamicSlots) {\r\n    for (let i = 0; i < dynamicSlots.length; i++) {\r\n        const slot = dynamicSlots[i];\r\n        // array of dynamic slot generated by <template v-for=\"...\" #[...]>\r\n        if (isArray(slot)) {\r\n            for (let j = 0; j < slot.length; j++) {\r\n                slots[slot[j].name] = slot[j].fn;\r\n            }\r\n        }\r\n        else if (slot) {\r\n            // conditional single slot generated by <template v-if=\"...\" #foo>\r\n            slots[slot.name] = slot.fn;\r\n        }\r\n    }\r\n    return slots;\r\n}\n\n// Core API ------------------------------------------------------------------\r\nconst version = \"3.0.0\";\r\n/**\r\n * SSR utils for \\@vue/server-renderer. Only exposed in cjs builds.\r\n * @internal\r\n */\r\nconst ssrUtils = ( null);\n\nexport { BaseTransition, Comment, Fragment, KeepAlive, Static, Suspense, Teleport, Text, callWithAsyncErrorHandling, callWithErrorHandling, cloneVNode, computed, createBlock, createCommentVNode, createHydrationRenderer, createRenderer, createSlots, createStaticVNode, createTextVNode, createVNode, defineAsyncComponent, defineComponent, devtools, getCurrentInstance, getTransitionRawChildren, h, handleError, inject, isVNode, mergeProps, nextTick, onActivated, onBeforeMount, onBeforeUnmount, onBeforeUpdate, onDeactivated, onErrorCaptured, onMounted, onRenderTracked, onRenderTriggered, onUnmounted, onUpdated, openBlock, popScopeId, provide, pushScopeId, queuePostFlushCb, registerRuntimeCompiler, renderList, renderSlot, resolveComponent, resolveDirective, resolveDynamicComponent, resolveTransitionHooks, setBlockTracking, setDevtoolsHook, setTransitionHooks, ssrContextKey, ssrUtils, toHandlers, transformVNodeArgs, useSSRContext, useTransitionState, version, warn, watch, watchEffect, withCtx, withDirectives, withScopeId };\n","import { camelize, warn, callWithAsyncErrorHandling, getCurrentInstance, onMounted, watchEffect, unref, Fragment, h, BaseTransition, useTransitionState, onUpdated, getTransitionRawChildren, setTransitionHooks, resolveTransitionHooks, createVNode, createRenderer, createHydrationRenderer } from '@vue/runtime-core';\nexport * from '@vue/runtime-core';\nimport { isString, isArray, hyphenate, capitalize, isSpecialBooleanAttr, isOn, isModelListener, isFunction, EMPTY_OBJ, extend, isObject, toNumber, invokeArrayFns, looseIndexOf, isSet, looseHas, looseEqual, isHTMLTag, isSVGTag } from '@vue/shared';\n\nconst svgNS = 'http://www.w3.org/2000/svg';\r\nconst doc = (typeof document !== 'undefined' ? document : null);\r\nlet tempContainer;\r\nlet tempSVGContainer;\r\nconst nodeOps = {\r\n    insert: (child, parent, anchor) => {\r\n        parent.insertBefore(child, anchor || null);\r\n    },\r\n    remove: child => {\r\n        const parent = child.parentNode;\r\n        if (parent) {\r\n            parent.removeChild(child);\r\n        }\r\n    },\r\n    createElement: (tag, isSVG, is) => isSVG\r\n        ? doc.createElementNS(svgNS, tag)\r\n        : doc.createElement(tag, is ? { is } : undefined),\r\n    createText: text => doc.createTextNode(text),\r\n    createComment: text => doc.createComment(text),\r\n    setText: (node, text) => {\r\n        node.nodeValue = text;\r\n    },\r\n    setElementText: (el, text) => {\r\n        el.textContent = text;\r\n    },\r\n    parentNode: node => node.parentNode,\r\n    nextSibling: node => node.nextSibling,\r\n    querySelector: selector => doc.querySelector(selector),\r\n    setScopeId(el, id) {\r\n        el.setAttribute(id, '');\r\n    },\r\n    cloneNode(el) {\r\n        return el.cloneNode(true);\r\n    },\r\n    // __UNSAFE__\r\n    // Reason: innerHTML.\r\n    // Static content here can only come from compiled templates.\r\n    // As long as the user only uses trusted templates, this is safe.\r\n    insertStaticContent(content, parent, anchor, isSVG) {\r\n        const temp = isSVG\r\n            ? tempSVGContainer ||\r\n                (tempSVGContainer = doc.createElementNS(svgNS, 'svg'))\r\n            : tempContainer || (tempContainer = doc.createElement('div'));\r\n        temp.innerHTML = content;\r\n        const first = temp.firstChild;\r\n        let node = first;\r\n        let last = node;\r\n        while (node) {\r\n            last = node;\r\n            nodeOps.insert(node, parent, anchor);\r\n            node = temp.firstChild;\r\n        }\r\n        return [first, last];\r\n    }\r\n};\n\n// compiler should normalize class + :class bindings on the same element\r\n// into a single binding ['staticClass', dynamic]\r\nfunction patchClass(el, value, isSVG) {\r\n    if (value == null) {\r\n        value = '';\r\n    }\r\n    if (isSVG) {\r\n        el.setAttribute('class', value);\r\n    }\r\n    else {\r\n        // directly setting className should be faster than setAttribute in theory\r\n        // if this is an element during a transition, take the temporary transition\r\n        // classes into account.\r\n        const transitionClasses = el._vtc;\r\n        if (transitionClasses) {\r\n            value = (value\r\n                ? [value, ...transitionClasses]\r\n                : [...transitionClasses]).join(' ');\r\n        }\r\n        el.className = value;\r\n    }\r\n}\n\nfunction patchStyle(el, prev, next) {\r\n    const style = el.style;\r\n    if (!next) {\r\n        el.removeAttribute('style');\r\n    }\r\n    else if (isString(next)) {\r\n        if (prev !== next) {\r\n            style.cssText = next;\r\n        }\r\n    }\r\n    else {\r\n        for (const key in next) {\r\n            setStyle(style, key, next[key]);\r\n        }\r\n        if (prev && !isString(prev)) {\r\n            for (const key in prev) {\r\n                if (next[key] == null) {\r\n                    setStyle(style, key, '');\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nconst importantRE = /\\s*!important$/;\r\nfunction setStyle(style, name, val) {\r\n    if (isArray(val)) {\r\n        val.forEach(v => setStyle(style, name, v));\r\n    }\r\n    else {\r\n        if (name.startsWith('--')) {\r\n            // custom property definition\r\n            style.setProperty(name, val);\r\n        }\r\n        else {\r\n            const prefixed = autoPrefix(style, name);\r\n            if (importantRE.test(val)) {\r\n                // !important\r\n                style.setProperty(hyphenate(prefixed), val.replace(importantRE, ''), 'important');\r\n            }\r\n            else {\r\n                style[prefixed] = val;\r\n            }\r\n        }\r\n    }\r\n}\r\nconst prefixes = ['Webkit', 'Moz', 'ms'];\r\nconst prefixCache = {};\r\nfunction autoPrefix(style, rawName) {\r\n    const cached = prefixCache[rawName];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    let name = camelize(rawName);\r\n    if (name !== 'filter' && name in style) {\r\n        return (prefixCache[rawName] = name);\r\n    }\r\n    name = capitalize(name);\r\n    for (let i = 0; i < prefixes.length; i++) {\r\n        const prefixed = prefixes[i] + name;\r\n        if (prefixed in style) {\r\n            return (prefixCache[rawName] = prefixed);\r\n        }\r\n    }\r\n    return rawName;\r\n}\n\nconst xlinkNS = 'http://www.w3.org/1999/xlink';\r\nfunction patchAttr(el, key, value, isSVG) {\r\n    if (isSVG && key.startsWith('xlink:')) {\r\n        if (value == null) {\r\n            el.removeAttributeNS(xlinkNS, key.slice(6, key.length));\r\n        }\r\n        else {\r\n            el.setAttributeNS(xlinkNS, key, value);\r\n        }\r\n    }\r\n    else {\r\n        // note we are only checking boolean attributes that don't have a\r\n        // corresponding dom prop of the same name here.\r\n        const isBoolean = isSpecialBooleanAttr(key);\r\n        if (value == null || (isBoolean && value === false)) {\r\n            el.removeAttribute(key);\r\n        }\r\n        else {\r\n            el.setAttribute(key, isBoolean ? '' : value);\r\n        }\r\n    }\r\n}\n\n// __UNSAFE__\r\n// functions. The user is responsible for using them with only trusted content.\r\nfunction patchDOMProp(el, key, value, \r\n// the following args are passed only due to potential innerHTML/textContent\r\n// overriding existing VNodes, in which case the old tree must be properly\r\n// unmounted.\r\nprevChildren, parentComponent, parentSuspense, unmountChildren) {\r\n    if (key === 'innerHTML' || key === 'textContent') {\r\n        if (prevChildren) {\r\n            unmountChildren(prevChildren, parentComponent, parentSuspense);\r\n        }\r\n        el[key] = value == null ? '' : value;\r\n        return;\r\n    }\r\n    if (key === 'value' && el.tagName !== 'PROGRESS') {\r\n        // store value as _value as well since\r\n        // non-string values will be stringified.\r\n        el._value = value;\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n        return;\r\n    }\r\n    if (value === '' && typeof el[key] === 'boolean') {\r\n        // e.g. <select multiple> compiles to { multiple: '' }\r\n        el[key] = true;\r\n    }\r\n    else if (value == null && typeof el[key] === 'string') {\r\n        // e.g. <div :id=\"null\">\r\n        el[key] = '';\r\n        el.removeAttribute(key);\r\n    }\r\n    else {\r\n        // some properties perform value validation and throw\r\n        try {\r\n            el[key] = value;\r\n        }\r\n        catch (e) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Failed setting prop \"${key}\" on <${el.tagName.toLowerCase()}>: ` +\r\n                    `value ${value} is invalid.`, e);\r\n            }\r\n        }\r\n    }\r\n}\n\n// Async edge case fix requires storing an event listener's attach timestamp.\r\nlet _getNow = Date.now;\r\n// Determine what event timestamp the browser is using. Annoyingly, the\r\n// timestamp can either be hi-res (relative to page load) or low-res\r\n// (relative to UNIX epoch), so in order to compare time we have to use the\r\n// same timestamp type when saving the flush timestamp.\r\nif (typeof document !== 'undefined' &&\r\n    _getNow() > document.createEvent('Event').timeStamp) {\r\n    // if the low-res timestamp which is bigger than the event timestamp\r\n    // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\r\n    // and we need to use the hi-res version for event listeners as well.\r\n    _getNow = () => performance.now();\r\n}\r\n// To avoid the overhead of repeatedly calling performance.now(), we cache\r\n// and use the same timestamp for all event listeners attached in the same tick.\r\nlet cachedNow = 0;\r\nconst p = Promise.resolve();\r\nconst reset = () => {\r\n    cachedNow = 0;\r\n};\r\nconst getNow = () => cachedNow || (p.then(reset), (cachedNow = _getNow()));\r\nfunction addEventListener(el, event, handler, options) {\r\n    el.addEventListener(event, handler, options);\r\n}\r\nfunction removeEventListener(el, event, handler, options) {\r\n    el.removeEventListener(event, handler, options);\r\n}\r\nfunction patchEvent(el, rawName, prevValue, nextValue, instance = null) {\r\n    // vei = vue event invokers\r\n    const invokers = el._vei || (el._vei = {});\r\n    const existingInvoker = invokers[rawName];\r\n    if (nextValue && existingInvoker) {\r\n        // patch\r\n        existingInvoker.value = nextValue;\r\n    }\r\n    else {\r\n        const [name, options] = parseName(rawName);\r\n        if (nextValue) {\r\n            // add\r\n            const invoker = (invokers[rawName] = createInvoker(nextValue, instance));\r\n            addEventListener(el, name, invoker, options);\r\n        }\r\n        else if (existingInvoker) {\r\n            // remove\r\n            removeEventListener(el, name, existingInvoker, options);\r\n            invokers[rawName] = undefined;\r\n        }\r\n    }\r\n}\r\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/;\r\nfunction parseName(name) {\r\n    let options;\r\n    if (optionsModifierRE.test(name)) {\r\n        options = {};\r\n        let m;\r\n        while ((m = name.match(optionsModifierRE))) {\r\n            name = name.slice(0, name.length - m[0].length);\r\n            options[m[0].toLowerCase()] = true;\r\n        }\r\n    }\r\n    return [name.slice(2).toLowerCase(), options];\r\n}\r\nfunction createInvoker(initialValue, instance) {\r\n    const invoker = (e) => {\r\n        // async edge case #6566: inner click event triggers patch, event handler\r\n        // attached to outer element during patch, and triggered again. This\r\n        // happens because browsers fire microtask ticks between event propagation.\r\n        // the solution is simple: we save the timestamp when a handler is attached,\r\n        // and the handler would only fire if the event passed to it was fired\r\n        // AFTER it was attached.\r\n        const timeStamp = e.timeStamp || _getNow();\r\n        if (timeStamp >= invoker.attached - 1) {\r\n            callWithAsyncErrorHandling(patchStopImmediatePropagation(e, invoker.value), instance, 5 /* NATIVE_EVENT_HANDLER */, [e]);\r\n        }\r\n    };\r\n    invoker.value = initialValue;\r\n    invoker.attached = getNow();\r\n    return invoker;\r\n}\r\nfunction patchStopImmediatePropagation(e, value) {\r\n    if (isArray(value)) {\r\n        const originalStop = e.stopImmediatePropagation;\r\n        e.stopImmediatePropagation = () => {\r\n            originalStop.call(e);\r\n            e._stopped = true;\r\n        };\r\n        return value.map(fn => (e) => !e._stopped && fn(e));\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\n\nconst nativeOnRE = /^on[a-z]/;\r\nconst forcePatchProp = (_, key) => key === 'value';\r\nconst patchProp = (el, key, prevValue, nextValue, isSVG = false, prevChildren, parentComponent, parentSuspense, unmountChildren) => {\r\n    switch (key) {\r\n        // special\r\n        case 'class':\r\n            patchClass(el, nextValue, isSVG);\r\n            break;\r\n        case 'style':\r\n            patchStyle(el, prevValue, nextValue);\r\n            break;\r\n        default:\r\n            if (isOn(key)) {\r\n                // ignore v-model listeners\r\n                if (!isModelListener(key)) {\r\n                    patchEvent(el, key, prevValue, nextValue, parentComponent);\r\n                }\r\n            }\r\n            else if (shouldSetAsProp(el, key, nextValue, isSVG)) {\r\n                patchDOMProp(el, key, nextValue, prevChildren, parentComponent, parentSuspense, unmountChildren);\r\n            }\r\n            else {\r\n                // special case for <input v-model type=\"checkbox\"> with\r\n                // :true-value & :false-value\r\n                // store value as dom properties since non-string values will be\r\n                // stringified.\r\n                if (key === 'true-value') {\r\n                    el._trueValue = nextValue;\r\n                }\r\n                else if (key === 'false-value') {\r\n                    el._falseValue = nextValue;\r\n                }\r\n                patchAttr(el, key, nextValue, isSVG);\r\n            }\r\n            break;\r\n    }\r\n};\r\nfunction shouldSetAsProp(el, key, value, isSVG) {\r\n    if (isSVG) {\r\n        // most keys must be set as attribute on svg elements to work\r\n        // ...except innerHTML\r\n        if (key === 'innerHTML') {\r\n            return true;\r\n        }\r\n        // or native onclick with function values\r\n        if (key in el && nativeOnRE.test(key) && isFunction(value)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    // spellcheck and draggable are numerated attrs, however their\r\n    // corresponding DOM properties are actually booleans - this leads to\r\n    // setting it with a string \"false\" value leading it to be coerced to\r\n    // `true`, so we need to always treat them as attributes.\r\n    // Note that `contentEditable` doesn't have this problem: its DOM\r\n    // property is also enumerated string values.\r\n    if (key === 'spellcheck' || key === 'draggable') {\r\n        return false;\r\n    }\r\n    // #1787 form as an attribute must be a string, while it accepts an Element as\r\n    // a prop\r\n    if (key === 'form' && typeof value === 'string') {\r\n        return false;\r\n    }\r\n    // #1526 <input list> must be set as attribute\r\n    if (key === 'list' && el.tagName === 'INPUT') {\r\n        return false;\r\n    }\r\n    // native onclick with string value, must be set as attribute\r\n    if (nativeOnRE.test(key) && isString(value)) {\r\n        return false;\r\n    }\r\n    return key in el;\r\n}\n\nfunction useCssModule(name = '$style') {\r\n    /* istanbul ignore else */\r\n    {\r\n        const instance = getCurrentInstance();\r\n        if (!instance) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`useCssModule must be called inside setup()`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const modules = instance.type.__cssModules;\r\n        if (!modules) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`Current instance does not have CSS modules injected.`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const mod = modules[name];\r\n        if (!mod) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current instance does not have CSS module named \"${name}\".`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        return mod;\r\n    }\r\n}\n\nfunction useCssVars(getter, scoped = false) {\r\n    const instance = getCurrentInstance();\r\n    /* istanbul ignore next */\r\n    if (!instance) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`useCssVars is called without current active component instance.`);\r\n        return;\r\n    }\r\n    const prefix = scoped && instance.type.__scopeId\r\n        ? `${instance.type.__scopeId.replace(/^data-v-/, '')}-`\r\n        : ``;\r\n    onMounted(() => {\r\n        watchEffect(() => {\r\n            setVarsOnVNode(instance.subTree, getter(instance.proxy), prefix);\r\n        });\r\n    });\r\n}\r\nfunction setVarsOnVNode(vnode, vars, prefix) {\r\n    if ( vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        const suspense = vnode.suspense;\r\n        vnode = suspense.activeBranch;\r\n        if (suspense.pendingBranch && !suspense.isHydrating) {\r\n            suspense.effects.push(() => {\r\n                setVarsOnVNode(suspense.activeBranch, vars, prefix);\r\n            });\r\n        }\r\n    }\r\n    // drill down HOCs until it's a non-component vnode\r\n    while (vnode.component) {\r\n        vnode = vnode.component.subTree;\r\n    }\r\n    if (vnode.shapeFlag & 1 /* ELEMENT */ && vnode.el) {\r\n        const style = vnode.el.style;\r\n        for (const key in vars) {\r\n            style.setProperty(`--${prefix}${key}`, unref(vars[key]));\r\n        }\r\n    }\r\n    else if (vnode.type === Fragment) {\r\n        vnode.children.forEach(c => setVarsOnVNode(c, vars, prefix));\r\n    }\r\n}\n\nconst TRANSITION = 'transition';\r\nconst ANIMATION = 'animation';\r\n// DOM Transition is a higher-order-component based on the platform-agnostic\r\n// base Transition component, with DOM-specific logic.\r\nconst Transition = (props, { slots }) => h(BaseTransition, resolveTransitionProps(props), slots);\r\nTransition.displayName = 'Transition';\r\nconst DOMTransitionPropsValidators = {\r\n    name: String,\r\n    type: String,\r\n    css: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    duration: [String, Number, Object],\r\n    enterFromClass: String,\r\n    enterActiveClass: String,\r\n    enterToClass: String,\r\n    appearFromClass: String,\r\n    appearActiveClass: String,\r\n    appearToClass: String,\r\n    leaveFromClass: String,\r\n    leaveActiveClass: String,\r\n    leaveToClass: String\r\n};\r\nconst TransitionPropsValidators = (Transition.props = /*#__PURE__*/ extend({}, BaseTransition.props, DOMTransitionPropsValidators));\r\nfunction resolveTransitionProps(rawProps) {\r\n    let { name = 'v', type, css = true, duration, enterFromClass = `${name}-enter-from`, enterActiveClass = `${name}-enter-active`, enterToClass = `${name}-enter-to`, appearFromClass = enterFromClass, appearActiveClass = enterActiveClass, appearToClass = enterToClass, leaveFromClass = `${name}-leave-from`, leaveActiveClass = `${name}-leave-active`, leaveToClass = `${name}-leave-to` } = rawProps;\r\n    const baseProps = {};\r\n    for (const key in rawProps) {\r\n        if (!(key in DOMTransitionPropsValidators)) {\r\n            baseProps[key] = rawProps[key];\r\n        }\r\n    }\r\n    if (!css) {\r\n        return baseProps;\r\n    }\r\n    const durations = normalizeDuration(duration);\r\n    const enterDuration = durations && durations[0];\r\n    const leaveDuration = durations && durations[1];\r\n    const { onBeforeEnter, onEnter, onEnterCancelled, onLeave, onLeaveCancelled, onBeforeAppear = onBeforeEnter, onAppear = onEnter, onAppearCancelled = onEnterCancelled } = baseProps;\r\n    const finishEnter = (el, isAppear, done) => {\r\n        removeTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n        removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);\r\n        done && done();\r\n    };\r\n    const finishLeave = (el, done) => {\r\n        removeTransitionClass(el, leaveToClass);\r\n        removeTransitionClass(el, leaveActiveClass);\r\n        done && done();\r\n    };\r\n    const makeEnterHook = (isAppear) => {\r\n        return (el, done) => {\r\n            const hook = isAppear ? onAppear : onEnter;\r\n            const resolve = () => finishEnter(el, isAppear, done);\r\n            hook && hook(el, resolve);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);\r\n                addTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n                if (!(hook && hook.length > 1)) {\r\n                    if (enterDuration) {\r\n                        setTimeout(resolve, enterDuration);\r\n                    }\r\n                    else {\r\n                        whenTransitionEnds(el, type, resolve);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n    };\r\n    return extend(baseProps, {\r\n        onBeforeEnter(el) {\r\n            onBeforeEnter && onBeforeEnter(el);\r\n            addTransitionClass(el, enterActiveClass);\r\n            addTransitionClass(el, enterFromClass);\r\n        },\r\n        onBeforeAppear(el) {\r\n            onBeforeAppear && onBeforeAppear(el);\r\n            addTransitionClass(el, appearActiveClass);\r\n            addTransitionClass(el, appearFromClass);\r\n        },\r\n        onEnter: makeEnterHook(false),\r\n        onAppear: makeEnterHook(true),\r\n        onLeave(el, done) {\r\n            const resolve = () => finishLeave(el, done);\r\n            addTransitionClass(el, leaveActiveClass);\r\n            addTransitionClass(el, leaveFromClass);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, leaveFromClass);\r\n                addTransitionClass(el, leaveToClass);\r\n                if (!(onLeave && onLeave.length > 1)) {\r\n                    if (leaveDuration) {\r\n                        setTimeout(resolve, leaveDuration);\r\n                    }\r\n                    else {\r\n                        whenTransitionEnds(el, type, resolve);\r\n                    }\r\n                }\r\n            });\r\n            onLeave && onLeave(el, resolve);\r\n        },\r\n        onEnterCancelled(el) {\r\n            finishEnter(el, false);\r\n            onEnterCancelled && onEnterCancelled(el);\r\n        },\r\n        onAppearCancelled(el) {\r\n            finishEnter(el, true);\r\n            onAppearCancelled && onAppearCancelled(el);\r\n        },\r\n        onLeaveCancelled(el) {\r\n            finishLeave(el);\r\n            onLeaveCancelled && onLeaveCancelled(el);\r\n        }\r\n    });\r\n}\r\nfunction normalizeDuration(duration) {\r\n    if (duration == null) {\r\n        return null;\r\n    }\r\n    else if (isObject(duration)) {\r\n        return [NumberOf(duration.enter), NumberOf(duration.leave)];\r\n    }\r\n    else {\r\n        const n = NumberOf(duration);\r\n        return [n, n];\r\n    }\r\n}\r\nfunction NumberOf(val) {\r\n    const res = toNumber(val);\r\n    if ((process.env.NODE_ENV !== 'production'))\r\n        validateDuration(res);\r\n    return res;\r\n}\r\nfunction validateDuration(val) {\r\n    if (typeof val !== 'number') {\r\n        warn(`<transition> explicit duration is not a valid number - ` +\r\n            `got ${JSON.stringify(val)}.`);\r\n    }\r\n    else if (isNaN(val)) {\r\n        warn(`<transition> explicit duration is NaN - ` +\r\n            'the duration expression might be incorrect.');\r\n    }\r\n}\r\nfunction addTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.add(c));\r\n    (el._vtc ||\r\n        (el._vtc = new Set())).add(cls);\r\n}\r\nfunction removeTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.remove(c));\r\n    const { _vtc } = el;\r\n    if (_vtc) {\r\n        _vtc.delete(cls);\r\n        if (!_vtc.size) {\r\n            el._vtc = undefined;\r\n        }\r\n    }\r\n}\r\nfunction nextFrame(cb) {\r\n    requestAnimationFrame(() => {\r\n        requestAnimationFrame(cb);\r\n    });\r\n}\r\nfunction whenTransitionEnds(el, expectedType, cb) {\r\n    const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\r\n    if (!type) {\r\n        return cb();\r\n    }\r\n    const endEvent = type + 'end';\r\n    let ended = 0;\r\n    const end = () => {\r\n        el.removeEventListener(endEvent, onEnd);\r\n        cb();\r\n    };\r\n    const onEnd = (e) => {\r\n        if (e.target === el) {\r\n            if (++ended >= propCount) {\r\n                end();\r\n            }\r\n        }\r\n    };\r\n    setTimeout(() => {\r\n        if (ended < propCount) {\r\n            end();\r\n        }\r\n    }, timeout + 1);\r\n    el.addEventListener(endEvent, onEnd);\r\n}\r\nfunction getTransitionInfo(el, expectedType) {\r\n    const styles = window.getComputedStyle(el);\r\n    // JSDOM may return undefined for transition properties\r\n    const getStyleProperties = (key) => (styles[key] || '').split(', ');\r\n    const transitionDelays = getStyleProperties(TRANSITION + 'Delay');\r\n    const transitionDurations = getStyleProperties(TRANSITION + 'Duration');\r\n    const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\r\n    const animationDelays = getStyleProperties(ANIMATION + 'Delay');\r\n    const animationDurations = getStyleProperties(ANIMATION + 'Duration');\r\n    const animationTimeout = getTimeout(animationDelays, animationDurations);\r\n    let type = null;\r\n    let timeout = 0;\r\n    let propCount = 0;\r\n    /* istanbul ignore if */\r\n    if (expectedType === TRANSITION) {\r\n        if (transitionTimeout > 0) {\r\n            type = TRANSITION;\r\n            timeout = transitionTimeout;\r\n            propCount = transitionDurations.length;\r\n        }\r\n    }\r\n    else if (expectedType === ANIMATION) {\r\n        if (animationTimeout > 0) {\r\n            type = ANIMATION;\r\n            timeout = animationTimeout;\r\n            propCount = animationDurations.length;\r\n        }\r\n    }\r\n    else {\r\n        timeout = Math.max(transitionTimeout, animationTimeout);\r\n        type =\r\n            timeout > 0\r\n                ? transitionTimeout > animationTimeout\r\n                    ? TRANSITION\r\n                    : ANIMATION\r\n                : null;\r\n        propCount = type\r\n            ? type === TRANSITION\r\n                ? transitionDurations.length\r\n                : animationDurations.length\r\n            : 0;\r\n    }\r\n    const hasTransform = type === TRANSITION &&\r\n        /\\b(transform|all)(,|$)/.test(styles[TRANSITION + 'Property']);\r\n    return {\r\n        type,\r\n        timeout,\r\n        propCount,\r\n        hasTransform\r\n    };\r\n}\r\nfunction getTimeout(delays, durations) {\r\n    while (delays.length < durations.length) {\r\n        delays = delays.concat(delays);\r\n    }\r\n    return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\r\n}\r\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\r\n// numbers in a locale-dependent way, using a comma instead of a dot.\r\n// If comma is not replaced with a dot, the input will be rounded down\r\n// (i.e. acting as a floor function) causing unexpected behaviors\r\nfunction toMs(s) {\r\n    return Number(s.slice(0, -1).replace(',', '.')) * 1000;\r\n}\n\nfunction toRaw(observed) {\r\n    return ((observed && toRaw(observed[\"__v_raw\" /* RAW */])) || observed);\r\n}\n\nconst positionMap = new WeakMap();\r\nconst newPositionMap = new WeakMap();\r\nconst TransitionGroupImpl = {\r\n    name: 'TransitionGroup',\r\n    props: /*#__PURE__*/ extend({}, TransitionPropsValidators, {\r\n        tag: String,\r\n        moveClass: String\r\n    }),\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevChildren;\r\n        let children;\r\n        onUpdated(() => {\r\n            // children is guaranteed to exist after initial render\r\n            if (!prevChildren.length) {\r\n                return;\r\n            }\r\n            const moveClass = props.moveClass || `${props.name || 'v'}-move`;\r\n            if (!hasCSSTransform(prevChildren[0].el, instance.vnode.el, moveClass)) {\r\n                return;\r\n            }\r\n            // we divide the work into three loops to avoid mixing DOM reads and writes\r\n            // in each iteration - which helps prevent layout thrashing.\r\n            prevChildren.forEach(callPendingCbs);\r\n            prevChildren.forEach(recordPosition);\r\n            const movedChildren = prevChildren.filter(applyTranslation);\r\n            // force reflow to put everything in position\r\n            forceReflow();\r\n            movedChildren.forEach(c => {\r\n                const el = c.el;\r\n                const style = el.style;\r\n                addTransitionClass(el, moveClass);\r\n                style.transform = style.webkitTransform = style.transitionDuration = '';\r\n                const cb = (el._moveCb = (e) => {\r\n                    if (e && e.target !== el) {\r\n                        return;\r\n                    }\r\n                    if (!e || /transform$/.test(e.propertyName)) {\r\n                        el.removeEventListener('transitionend', cb);\r\n                        el._moveCb = null;\r\n                        removeTransitionClass(el, moveClass);\r\n                    }\r\n                });\r\n                el.addEventListener('transitionend', cb);\r\n            });\r\n        });\r\n        return () => {\r\n            const rawProps = toRaw(props);\r\n            const cssTransitionProps = resolveTransitionProps(rawProps);\r\n            const tag = rawProps.tag || Fragment;\r\n            prevChildren = children;\r\n            children = slots.default ? getTransitionRawChildren(slots.default()) : [];\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (child.key != null) {\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`<TransitionGroup> children must be keyed.`);\r\n                }\r\n            }\r\n            if (prevChildren) {\r\n                for (let i = 0; i < prevChildren.length; i++) {\r\n                    const child = prevChildren[i];\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                    positionMap.set(child, child.el.getBoundingClientRect());\r\n                }\r\n            }\r\n            return createVNode(tag, null, children);\r\n        };\r\n    }\r\n};\r\nconst TransitionGroup = TransitionGroupImpl;\r\nfunction callPendingCbs(c) {\r\n    const el = c.el;\r\n    if (el._moveCb) {\r\n        el._moveCb();\r\n    }\r\n    if (el._enterCb) {\r\n        el._enterCb();\r\n    }\r\n}\r\nfunction recordPosition(c) {\r\n    newPositionMap.set(c, c.el.getBoundingClientRect());\r\n}\r\nfunction applyTranslation(c) {\r\n    const oldPos = positionMap.get(c);\r\n    const newPos = newPositionMap.get(c);\r\n    const dx = oldPos.left - newPos.left;\r\n    const dy = oldPos.top - newPos.top;\r\n    if (dx || dy) {\r\n        const s = c.el.style;\r\n        s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\r\n        s.transitionDuration = '0s';\r\n        return c;\r\n    }\r\n}\r\n// this is put in a dedicated function to avoid the line from being treeshaken\r\nfunction forceReflow() {\r\n    return document.body.offsetHeight;\r\n}\r\nfunction hasCSSTransform(el, root, moveClass) {\r\n    // Detect whether an element with the move class applied has\r\n    // CSS transitions. Since the element may be inside an entering\r\n    // transition at this very moment, we make a clone of it and remove\r\n    // all other transition classes applied to ensure only the move class\r\n    // is applied.\r\n    const clone = el.cloneNode();\r\n    if (el._vtc) {\r\n        el._vtc.forEach(cls => {\r\n            cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c));\r\n        });\r\n    }\r\n    moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c));\r\n    clone.style.display = 'none';\r\n    const container = (root.nodeType === 1\r\n        ? root\r\n        : root.parentNode);\r\n    container.appendChild(clone);\r\n    const { hasTransform } = getTransitionInfo(clone);\r\n    container.removeChild(clone);\r\n    return hasTransform;\r\n}\n\nconst getModelAssigner = (vnode) => {\r\n    const fn = vnode.props['onUpdate:modelValue'];\r\n    return isArray(fn) ? value => invokeArrayFns(fn, value) : fn;\r\n};\r\nfunction onCompositionStart(e) {\r\n    e.target.composing = true;\r\n}\r\nfunction onCompositionEnd(e) {\r\n    const target = e.target;\r\n    if (target.composing) {\r\n        target.composing = false;\r\n        trigger(target, 'input');\r\n    }\r\n}\r\nfunction trigger(el, type) {\r\n    const e = document.createEvent('HTMLEvents');\r\n    e.initEvent(type, true, true);\r\n    el.dispatchEvent(e);\r\n}\r\n// We are exporting the v-model runtime directly as vnode hooks so that it can\r\n// be tree-shaken in case v-model is never used.\r\nconst vModelText = {\r\n    created(el, { value, modifiers: { lazy, trim, number } }, vnode) {\r\n        el.value = value == null ? '' : value;\r\n        el._assign = getModelAssigner(vnode);\r\n        const castToNumber = number || el.type === 'number';\r\n        addEventListener(el, lazy ? 'change' : 'input', e => {\r\n            if (e.target.composing)\r\n                return;\r\n            let domValue = el.value;\r\n            if (trim) {\r\n                domValue = domValue.trim();\r\n            }\r\n            else if (castToNumber) {\r\n                domValue = toNumber(domValue);\r\n            }\r\n            el._assign(domValue);\r\n        });\r\n        if (trim) {\r\n            addEventListener(el, 'change', () => {\r\n                el.value = el.value.trim();\r\n            });\r\n        }\r\n        if (!lazy) {\r\n            addEventListener(el, 'compositionstart', onCompositionStart);\r\n            addEventListener(el, 'compositionend', onCompositionEnd);\r\n            // Safari < 10.2 & UIWebView doesn't fire compositionend when\r\n            // switching focus before confirming composition choice\r\n            // this also fixes the issue where some browsers e.g. iOS Chrome\r\n            // fires \"change\" instead of \"input\" on autocomplete.\r\n            addEventListener(el, 'change', onCompositionEnd);\r\n        }\r\n    },\r\n    beforeUpdate(el, { value, modifiers: { trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        if (document.activeElement === el) {\r\n            if (trim && el.value.trim() === value) {\r\n                return;\r\n            }\r\n            if ((number || el.type === 'number') && toNumber(el.value) === value) {\r\n                return;\r\n            }\r\n        }\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n    }\r\n};\r\nconst vModelCheckbox = {\r\n    created(el, binding, vnode) {\r\n        setChecked(el, binding, vnode);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            const modelValue = el._modelValue;\r\n            const elementValue = getValue(el);\r\n            const checked = el.checked;\r\n            const assign = el._assign;\r\n            if (isArray(modelValue)) {\r\n                const index = looseIndexOf(modelValue, elementValue);\r\n                const found = index !== -1;\r\n                if (checked && !found) {\r\n                    assign(modelValue.concat(elementValue));\r\n                }\r\n                else if (!checked && found) {\r\n                    const filtered = [...modelValue];\r\n                    filtered.splice(index, 1);\r\n                    assign(filtered);\r\n                }\r\n            }\r\n            else if (isSet(modelValue)) {\r\n                const found = modelValue.has(elementValue);\r\n                if (checked && !found) {\r\n                    assign(modelValue.add(elementValue));\r\n                }\r\n                else if (!checked && found) {\r\n                    modelValue.delete(elementValue);\r\n                    assign(modelValue);\r\n                }\r\n            }\r\n            else {\r\n                assign(getCheckboxValue(el, checked));\r\n            }\r\n        });\r\n    },\r\n    beforeUpdate(el, binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        setChecked(el, binding, vnode);\r\n    }\r\n};\r\nfunction setChecked(el, { value, oldValue }, vnode) {\r\n    el._modelValue = value;\r\n    if (isArray(value)) {\r\n        el.checked = looseIndexOf(value, vnode.props.value) > -1;\r\n    }\r\n    else if (isSet(value)) {\r\n        el.checked = looseHas(value, vnode.props.value);\r\n    }\r\n    else if (value !== oldValue) {\r\n        el.checked = looseEqual(value, getCheckboxValue(el, true));\r\n    }\r\n}\r\nconst vModelRadio = {\r\n    created(el, { value }, vnode) {\r\n        el.checked = looseEqual(value, vnode.props.value);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            el._assign(getValue(el));\r\n        });\r\n    },\r\n    beforeUpdate(el, { value, oldValue }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        if (value !== oldValue) {\r\n            el.checked = looseEqual(value, vnode.props.value);\r\n        }\r\n    }\r\n};\r\nconst vModelSelect = {\r\n    created(el, binding, vnode) {\r\n        addEventListener(el, 'change', () => {\r\n            const selectedVal = Array.prototype.filter\r\n                .call(el.options, (o) => o.selected)\r\n                .map(getValue);\r\n            el._assign(el.multiple ? selectedVal : selectedVal[0]);\r\n        });\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    // set value in mounted & updated because <select> relies on its children\r\n    // <option>s.\r\n    mounted(el, { value }) {\r\n        setSelected(el, value);\r\n    },\r\n    beforeUpdate(el, _binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    updated(el, { value }) {\r\n        setSelected(el, value);\r\n    }\r\n};\r\nfunction setSelected(el, value) {\r\n    const isMultiple = el.multiple;\r\n    if (isMultiple && !isArray(value) && !isSet(value)) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`<select multiple v-model> expects an Array or Set value for its binding, ` +\r\n                `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`);\r\n        return;\r\n    }\r\n    for (let i = 0, l = el.options.length; i < l; i++) {\r\n        const option = el.options[i];\r\n        const optionValue = getValue(option);\r\n        if (isMultiple) {\r\n            if (isArray(value)) {\r\n                option.selected = looseIndexOf(value, optionValue) > -1;\r\n            }\r\n            else {\r\n                option.selected = looseHas(value, optionValue);\r\n            }\r\n        }\r\n        else {\r\n            if (looseEqual(getValue(option), value)) {\r\n                el.selectedIndex = i;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    if (!isMultiple) {\r\n        el.selectedIndex = -1;\r\n    }\r\n}\r\n// retrieve raw value set via :value bindings\r\nfunction getValue(el) {\r\n    return '_value' in el ? el._value : el.value;\r\n}\r\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\r\nfunction getCheckboxValue(el, checked) {\r\n    const key = checked ? '_trueValue' : '_falseValue';\r\n    return key in el ? el[key] : checked;\r\n}\r\nconst vModelDynamic = {\r\n    created(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'created');\r\n    },\r\n    mounted(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'mounted');\r\n    },\r\n    beforeUpdate(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate');\r\n    },\r\n    updated(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'updated');\r\n    }\r\n};\r\nfunction callModelHook(el, binding, vnode, prevVNode, hook) {\r\n    let modelToUse;\r\n    switch (el.tagName) {\r\n        case 'SELECT':\r\n            modelToUse = vModelSelect;\r\n            break;\r\n        case 'TEXTAREA':\r\n            modelToUse = vModelText;\r\n            break;\r\n        default:\r\n            switch (vnode.props && vnode.props.type) {\r\n                case 'checkbox':\r\n                    modelToUse = vModelCheckbox;\r\n                    break;\r\n                case 'radio':\r\n                    modelToUse = vModelRadio;\r\n                    break;\r\n                default:\r\n                    modelToUse = vModelText;\r\n            }\r\n    }\r\n    const fn = modelToUse[hook];\r\n    fn && fn(el, binding, vnode, prevVNode);\r\n}\n\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta'];\r\nconst modifierGuards = {\r\n    stop: e => e.stopPropagation(),\r\n    prevent: e => e.preventDefault(),\r\n    self: e => e.target !== e.currentTarget,\r\n    ctrl: e => !e.ctrlKey,\r\n    shift: e => !e.shiftKey,\r\n    alt: e => !e.altKey,\r\n    meta: e => !e.metaKey,\r\n    left: e => 'button' in e && e.button !== 0,\r\n    middle: e => 'button' in e && e.button !== 1,\r\n    right: e => 'button' in e && e.button !== 2,\r\n    exact: (e, modifiers) => systemModifiers.some(m => e[`${m}Key`] && !modifiers.includes(m))\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withModifiers = (fn, modifiers) => {\r\n    return (event, ...args) => {\r\n        for (let i = 0; i < modifiers.length; i++) {\r\n            const guard = modifierGuards[modifiers[i]];\r\n            if (guard && guard(event, modifiers))\r\n                return;\r\n        }\r\n        return fn(event, ...args);\r\n    };\r\n};\r\n// Kept for 2.x compat.\r\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\r\nconst keyNames = {\r\n    esc: 'escape',\r\n    space: ' ',\r\n    up: 'arrow-up',\r\n    left: 'arrow-left',\r\n    right: 'arrow-right',\r\n    down: 'arrow-down',\r\n    delete: 'backspace'\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withKeys = (fn, modifiers) => {\r\n    return (event) => {\r\n        if (!('key' in event))\r\n            return;\r\n        const eventKey = hyphenate(event.key);\r\n        if (\r\n        // None of the provided key modifiers match the current event key\r\n        !modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\r\n            return;\r\n        }\r\n        return fn(event);\r\n    };\r\n};\n\nconst vShow = {\r\n    beforeMount(el, { value }, { transition }) {\r\n        el._vod = el.style.display === 'none' ? '' : el.style.display;\r\n        if (transition && value) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    mounted(el, { value }, { transition }) {\r\n        if (transition && value) {\r\n            transition.enter(el);\r\n        }\r\n    },\r\n    updated(el, { value, oldValue }, { transition }) {\r\n        if (!value === !oldValue)\r\n            return;\r\n        if (transition) {\r\n            if (value) {\r\n                transition.beforeEnter(el);\r\n                setDisplay(el, true);\r\n                transition.enter(el);\r\n            }\r\n            else {\r\n                transition.leave(el, () => {\r\n                    setDisplay(el, false);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    beforeUnmount(el, { value }) {\r\n        setDisplay(el, value);\r\n    }\r\n};\r\nfunction setDisplay(el, value) {\r\n    el.style.display = value ? el._vod : 'none';\r\n}\n\nconst rendererOptions = extend({ patchProp, forcePatchProp }, nodeOps);\r\n// lazy create the renderer - this makes core renderer logic tree-shakable\r\n// in case the user only imports reactivity utilities from Vue.\r\nlet renderer;\r\nlet enabledHydration = false;\r\nfunction ensureRenderer() {\r\n    return renderer || (renderer = createRenderer(rendererOptions));\r\n}\r\nfunction ensureHydrationRenderer() {\r\n    renderer = enabledHydration\r\n        ? renderer\r\n        : createHydrationRenderer(rendererOptions);\r\n    enabledHydration = true;\r\n    return renderer;\r\n}\r\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\r\nconst render = ((...args) => {\r\n    ensureRenderer().render(...args);\r\n});\r\nconst hydrate = ((...args) => {\r\n    ensureHydrationRenderer().hydrate(...args);\r\n});\r\nconst createApp = ((...args) => {\r\n    const app = ensureRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (!container)\r\n            return;\r\n        const component = app._component;\r\n        if (!isFunction(component) && !component.render && !component.template) {\r\n            component.template = container.innerHTML;\r\n        }\r\n        // clear content before mounting\r\n        container.innerHTML = '';\r\n        const proxy = mount(container);\r\n        container.removeAttribute('v-cloak');\r\n        container.setAttribute('data-v-app', '');\r\n        return proxy;\r\n    };\r\n    return app;\r\n});\r\nconst createSSRApp = ((...args) => {\r\n    const app = ensureHydrationRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (container) {\r\n            return mount(container, true);\r\n        }\r\n    };\r\n    return app;\r\n});\r\nfunction injectNativeTagCheck(app) {\r\n    // Inject `isNativeTag`\r\n    // this is used for component name validation (dev only)\r\n    Object.defineProperty(app.config, 'isNativeTag', {\r\n        value: (tag) => isHTMLTag(tag) || isSVGTag(tag),\r\n        writable: false\r\n    });\r\n}\r\nfunction normalizeContainer(container) {\r\n    if (isString(container)) {\r\n        const res = document.querySelector(container);\r\n        if ((process.env.NODE_ENV !== 'production') && !res) {\r\n            warn(`Failed to mount app: mount target selector returned null.`);\r\n        }\r\n        return res;\r\n    }\r\n    return container;\r\n}\n\nexport { Transition, TransitionGroup, createApp, createSSRApp, hydrate, render, useCssModule, useCssVars, vModelCheckbox, vModelDynamic, vModelRadio, vModelSelect, vModelText, vShow, withKeys, withModifiers };\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n// Patch flags are optimization hints generated by the compiler.\r\n// when a block with dynamicChildren is encountered during diff, the algorithm\r\n// enters \"optimized mode\". In this mode, we know that the vdom is produced by\r\n// a render function generated by the compiler, so the algorithm only needs to\r\n// handle updates explicitly marked by these patch flags.\r\n// dev only flag -> name mapping\r\nconst PatchFlagNames = {\r\n    [1 /* TEXT */]: `TEXT`,\r\n    [2 /* CLASS */]: `CLASS`,\r\n    [4 /* STYLE */]: `STYLE`,\r\n    [8 /* PROPS */]: `PROPS`,\r\n    [16 /* FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [1024 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [512 /* NEED_PATCH */]: `NEED_PATCH`,\r\n    [-1 /* HOISTED */]: `HOISTED`,\r\n    [-2 /* BAIL */]: `BAIL`\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    const lines = source.split(/\\r?\\n/);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count += lines[i].length + 1;\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - lineLength) + 1;\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + 1;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nconst isKnownAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const item = value[i];\r\n            const normalized = normalizeStyle(isString(item) ? parseStringStyle(item) : item);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:(.+)/;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText.split(listDelimiterRE).forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            res += normalizeClass(value[i]) + ' ';\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,' +\r\n    'summary,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.substring(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\r\n}\r\n// https://www.w3.org/TR/html52/syntax.html#comments\r\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\r\nfunction escapeHtmlComment(src) {\r\n    return src.replace(commentStripRE, '');\r\n}\n\nfunction looseCompareArrays(a, b) {\r\n    if (a.length !== b.length)\r\n        return false;\r\n    let equal = true;\r\n    for (let i = 0; equal && i < a.length; i++) {\r\n        equal = looseEqual(a[i], b[i]);\r\n    }\r\n    return equal;\r\n}\r\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    let aValidType = isDate(a);\r\n    let bValidType = isDate(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? a.getTime() === b.getTime() : false;\r\n    }\r\n    aValidType = isArray(a);\r\n    bValidType = isArray(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? looseCompareArrays(a, b) : false;\r\n    }\r\n    aValidType = isObject(a);\r\n    bValidType = isObject(b);\r\n    if (aValidType || bValidType) {\r\n        /* istanbul ignore if: this if will probably never be called */\r\n        if (!aValidType || !bValidType) {\r\n            return false;\r\n        }\r\n        const aKeysCount = Object.keys(a).length;\r\n        const bKeysCount = Object.keys(b).length;\r\n        if (aKeysCount !== bKeysCount) {\r\n            return false;\r\n        }\r\n        for (const key in a) {\r\n            const aHasKey = a.hasOwnProperty(key);\r\n            const bHasKey = b.hasOwnProperty(key);\r\n            if ((aHasKey && !bHasKey) ||\r\n                (!aHasKey && bHasKey) ||\r\n                !looseEqual(a[key], b[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return String(a) === String(b);\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\r\nfunction looseHas(set, val) {\r\n    for (let item of set) {\r\n        if (looseEqual(item, val))\r\n            return true;\r\n    }\r\n    return false;\r\n}\n\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nconst toDisplayString = (val) => {\r\n    return val == null\r\n        ? ''\r\n        : isObject(val)\r\n            ? JSON.stringify(val, replacer, 2)\r\n            : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n    if (isMap(val)) {\r\n        return {\r\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n                entries[`${key} =>`] = val;\r\n                return entries;\r\n            }, {})\r\n        };\r\n    }\r\n    else if (isSet(val)) {\r\n        return {\r\n            [`Set(${val.size})`]: [...val.values()]\r\n        };\r\n    }\r\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n        return String(val);\r\n    }\r\n    return val;\r\n};\n\n/**\r\n * List of @babel/parser plugins that are used for template expression\r\n * transforms and SFC script transforms. By default we enable proposals slated\r\n * for ES2020. This will need to be updated as the spec moves forward.\r\n * Full list at https://babeljs.io/docs/en/next/babel-parser#plugins\r\n */\r\nconst babelParserDefaultPlugins = [\r\n    'bigInt',\r\n    'optionalChaining',\r\n    'nullishCoalescingOperator'\r\n];\r\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = [];\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst isModelListener = (key) => key.startsWith('onUpdate:');\r\nconst extend = Object.assign;\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isMap = (val) => toTypeString(val) === '[object Map]';\r\nconst isSet = (val) => toTypeString(val) === '[object Set]';\r\nconst isDate = (val) => val instanceof Date;\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isIntegerKey = (key) => isString(key) &&\r\n    key !== 'NaN' &&\r\n    key[0] !== '-' &&\r\n    '' + parseInt(key, 10) === key;\r\nconst isReservedProp = /*#__PURE__*/ makeMap('key,ref,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\n/**\r\n * @private\r\n */\r\nconst hyphenate = cacheStringFunction((str) => {\r\n    return str.replace(hyphenateRE, '-$1').toLowerCase();\r\n});\r\n/**\r\n * @private\r\n */\r\nconst capitalize = cacheStringFunction((str) => {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n});\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => value !== oldValue && (value === value || oldValue === oldValue);\r\nconst invokeArrayFns = (fns, arg) => {\r\n    for (let i = 0; i < fns.length; i++) {\r\n        fns[i](arg);\r\n    }\r\n};\r\nconst def = (obj, key, value) => {\r\n    Object.defineProperty(obj, key, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value\r\n    });\r\n};\r\nconst toNumber = (val) => {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n};\r\nlet _globalThis;\r\nconst getGlobalThis = () => {\r\n    return (_globalThis ||\r\n        (_globalThis =\r\n            typeof globalThis !== 'undefined'\r\n                ? globalThis\r\n                : typeof self !== 'undefined'\r\n                    ? self\r\n                    : typeof window !== 'undefined'\r\n                        ? window\r\n                        : typeof global !== 'undefined'\r\n                            ? global\r\n                            : {}));\r\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, babelParserDefaultPlugins, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, invokeArrayFns, isArray, isBooleanAttr, isDate, isFunction, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownAttr, isMap, isModelListener, isNoUnitNumericStyleProp, isObject, isOn, isPlainObject, isPromise, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseHas, looseIndexOf, makeMap, normalizeClass, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, stringifyStyle, toDisplayString, toNumber, toRawType, toTypeString };\n"],"sourceRoot":""}